/* (c) Copyright 2003-2015, Real-Time Innovations, Inc. All rights reserved. */
/*
 * @(#)ndds_c.h    generated by: makeheader    Fri Feb 16 13:54:22 2018
 *
 *		built from:	c.ifc
 */

#ifndef ndds_c_h
#define ndds_c_h


#if defined(_WIN32) && !defined(RTI_WINCE) && _MSC_VER > 1310 && !defined(RTI_WIN32)
	#define RTI_WIN32
	#ifdef _DLL /* compiling against DLL version of the CRT */
		#define NDDS_DLL_VARIABLE
		#ifdef _DEBUG
			#pragma comment( lib, "nddscored.lib")
			#pragma comment( lib, "nddscd.lib")
		#else
			#pragma comment( lib, "nddscore.lib")
			#pragma comment( lib, "nddsc.lib")
		#endif /* _DEBUG */
	#else  /* static libs */
		#ifdef _DEBUG
			#pragma comment( lib, "nddscorezd.lib")
			#pragma comment( lib, "nddsczd.lib")
		#else
			#pragma comment( lib, "nddscorez.lib")
			#pragma comment( lib, "nddscz.lib")
		#endif /* #ifdef _DEBUG */
	#endif /* _DLL */
	/* required libs for ndds */
	#pragma comment( lib, "WS2_32.lib")
	#pragma comment( lib, "Iphlpapi.lib")
#endif /* defined(_WIN32) && !defined(RTI_WINCE) && _MSC_VER > 1310 */

  #ifdef NDDS_DLL_VARIABLE
    #define RTI_dds_c_DLL_VARIABLE
    #define RTI_disc_DLL_VARIABLE
    #define RTI_pres_DLL_VARIABLE
    #define RTI_writer_history_DLL_VARIABLE
    #define RTI_commend_DLL_VARIABLE
    #define RTI_mig_DLL_VARIABLE
    #define RTI_netio_DLL_VARIABLE
    #define RTI_transport_DLL_VARIABLE
    #define RTI_event_DLL_VARIABLE
    #define RTI_cdr_DLL_VARIABLE
    #define RTI_reda_DLL_VARIABLE
    #define RTI_dl_driver_DLL_VARIABLE
    #define RTI_osapi_DLL_VARIABLE
    #define RTI_clock_DLL_VARIABLE
    #define RTI_log_DLL_VARIABLE
  #endif

  #ifndef ndds_version_h
    #include "ndds/ndds_version.h"
  #endif
  #ifndef makeheader_h
    #include "ndds/log/log_makeheader.h"
  #endif
  #ifndef osapi_type_h
    #include "ndds/osapi/osapi_type.h"
  #endif
  #ifndef dds_c_dll_h
    #include "ndds/dds_c/dds_c_dll.h"
  #endif
  #ifndef dds_c_common_h
    #include "ndds/dds_c/dds_c_common.h"
  #endif
  #ifndef log_dll_h
    #include "ndds/log/log_dll.h"
  #endif
  #ifndef log_common_h
    #include "ndds/log/log_common.h"
  #endif
  #ifndef dds_c_log_h
    #include "ndds/dds_c/dds_c_log.h"
  #endif
  #ifndef dds_c_sequence_h
    #include "ndds/dds_c/dds_c_sequence.h"
  #endif
  #ifndef dds_c_infrastructure_h
    #include "ndds/dds_c/dds_c_infrastructure.h"
  #endif
  #ifndef dds_c_topic_h
    #include "ndds/dds_c/dds_c_topic.h"
  #endif
  #ifndef dds_c_publication_h
    #include "ndds/dds_c/dds_c_publication.h"
  #endif
  #ifndef dds_c_subscription_h
    #include "ndds/dds_c/dds_c_subscription.h"
  #endif
  #ifndef dds_c_domain_h
    #include "ndds/dds_c/dds_c_domain.h"
  #endif
  #ifndef dds_c_data_h
    #include "ndds/dds_c/dds_c_data.h"
  #endif
  #ifndef dds_c_builtin_h
    #include "ndds/dds_c/dds_c_builtin.h"
  #endif
  #ifndef dds_c_builtintypes_h
    #include "ndds/dds_c/dds_c_builtintypes.h"
  #endif
  #ifndef dds_c_printformat_h
    #include "ndds/dds_c/dds_c_printformat.h"
  #endif
  #ifndef dds_c_dynamicdata_h
    #include "ndds/dds_c/dds_c_dynamicdata.h"
  #endif
  #ifndef dds_c_dynamicdataformatter_h
    #include "dds_c/dds_c_dynamicdataformatter.h"
  #endif
  #ifndef dds_c_typecode_h
    #include "ndds/dds_c/dds_c_typecode.h"
  #endif
  #ifndef dds_c_sqlfilter_h
    #include "ndds/dds_c/dds_c_sqlfilter.h"
  #endif
  #ifndef dds_c_asyncwaitset_h
    #include "ndds/dds_c/dds_c_asyncwaitset.h"
  #endif 
  #ifndef ndds_transport_c_h
    #include "ndds/ndds_transport_c.h"
  #endif
  #ifndef ndds_writerhistory_c_h
    #include "ndds/ndds_writerhistory_c.h"
  #endif
  #ifndef ndds_discovery_c_h
    #include "ndds/ndds_discovery_c.h"
  #endif
  #ifndef ndds_config_c_h
    #include "ndds/ndds_config_c.h"
  #endif
  #ifndef ndds_utility_c_h
    #include "ndds/ndds_utility_c.h"
  #endif
  #ifndef dds_c_xml_h
    #include "ndds/dds_c/dds_c_xml.h"
  #endif
  #ifndef dds_c_xml_impl_h
    #include "ndds/dds_c/dds_c_xml_impl.h"
  #endif
  #ifndef dds_c_monitoring_h
    #include "ndds/dds_c/dds_c_monitoring.h"
  #endif

#endif /* ndds_c_h */

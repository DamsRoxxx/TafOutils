/* (c) Copyright 2003-2015, Real-Time Innovations, Inc. All rights reserved. */
/*
 * @(#)transport_common_stat.h    generated by: makeheader    Fri Feb 16 13:51:33 2018
 *
 *		built from:	common_stat.ifc
 */

#ifndef transport_common_stat_h
#define transport_common_stat_h


  #ifndef osapi_ntptime_h
    #include "osapi/osapi_type.h"
  #endif
  #ifndef osapi_ntptime_h
    #include "osapi/osapi_ntptime.h"
  #endif
  #ifndef reda_sequenceNumber_h
    #include "reda/reda_sequenceNumber.h"
  #endif
  #ifndef reda_worker_h
    #include "reda/reda_worker.h"
  #endif
  #ifndef transport_dll_h
    #include "transport/transport_dll.h"
  #endif

#ifdef __cplusplus
    extern "C" {
#endif

struct REDABuffer; /* forward declare to appease compiler */

struct REDAWorker;

struct NDDS_Transport_WorkerStat {
    /*i # bytes sent through this worker so far */
    struct REDASequenceNumber bytesSent;
    /*i # bytes received with this worker so far */
    struct REDASequenceNumber bytesReceived;

    /*i The last time this worker started the send call on an appropriate
      transport.  If it never used any transport to send, this time is 0.
    */
    struct RTINtpTime timeTransportSendEntered;

    /*i The last time this worker handed the gathered packets to the OS
      for send.
    */
    struct RTINtpTime timeTransportSendSignaled;

    /*i The last time this worker finished a SUCCESSFUL send operation in
       any transport.  Note that the worker may visit different transports
       with each successive send.  Hence, it is vital that ALL transports
       use the same clock or, failing that, synchronized clocks.
    */
    struct RTINtpTime timeTransportSendExited;

    struct RTINtpTime timeTransportReceiveEntered;
    /*i The last time this worker either received a valid message from
      the transport or, in case of polled mode transport, found that there is
      no message to read.  For blocking receive, the worker blocks until
      a message is read or the blocking operation is cancelled, so it's
      possible that this time is far behind the timeReceiveEntered.
    */
    struct RTINtpTime timeTransportReceiveSignaled;

    /*i The last time this receiver finished a SUCCESSFUL receive on a
      transport.
    */
    struct RTINtpTime timeTransportReceiveExited;
};

extern NDDS_Transport_DllExport RTIBool
NDDS_Transport_WorkerStat_init(struct REDAWorkerFactory *workerFactory);

extern NDDS_Transport_DllExport void
NDDS_Transport_WorkerStat_finalize(struct REDAWorkerFactory *workerFactory,
                                   struct REDAWorker *worker);

extern NDDS_Transport_DllExport void
NDDS_Transport_WorkerStat_print(
    const struct NDDS_Transport_WorkerStat *stat, 
    const char *desc,  
    RTI_INT32 indent);


#ifdef __cplusplus
    }	/* extern "C" */
#endif

/* pick up performance boosting macros */
  #include "transport/transport_common_stat_impl.h"

#endif /* transport_common_stat_h */

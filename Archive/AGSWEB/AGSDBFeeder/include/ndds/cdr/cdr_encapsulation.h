/* (c) Copyright 2003-2015, Real-Time Innovations, Inc. All rights reserved. */
/*
 * @(#)cdr_encapsulation.h    generated by: makeheader    Fri Feb 16 13:51:31 2018
 *
 *		built from:	encapsulation.ifc
 */

#ifndef cdr_encapsulation_h
#define cdr_encapsulation_h



#ifndef cdr_dll_h
#include "cdr/cdr_dll.h"
#endif

#ifndef osapi_type_h
#include "osapi/osapi_type.h"
#endif

/* For VxWorks defines */
#ifdef RTI_VXWORKS
#include <vxWorks.h>
#endif

#ifdef __cplusplus
    extern "C" {
#endif


/* OMG CDR Big Endian */
#define RTI_CDR_ENCAPSULATION_ID_CDR_BE     0x0000
/* OMG CDR Little Endian */
#define RTI_CDR_ENCAPSULATION_ID_CDR_LE     0x0001
/* Parameter List OMG CDR Big Endian */
#define RTI_CDR_ENCAPSULATION_ID_PL_CDR_BE  0x0002
/* Parameter List OMG CDR Little Endian */
#define RTI_CDR_ENCAPSULATION_ID_PL_CDR_LE  0x0003

/* #define RTI_CDR_ENCAPSULATION_ID_CDR_NATIVE 0x0004 */
/* #define RTI_CDR_ENCAPSULATION_ID_PL_CDR_NATIVE  0x0005 */

#define RTI_CDR_ENCAPSULATION_ID_INVALID 0xFFFF

#define RTI_CDR_ENCAPSULATION_ID_ALREADY_PROCESSED 0xFFFE

#define RTI_CDR_ENCAPSULATION_OPTIONS_NONE  0x0000

#define RTI_CDR_ENCAPSULATION_HEADER_SIZE   4

/* {parameterId, parameterLength}. Used for inlineQos ParameterList. */
#define RTI_CDR_PARAMETER_SHORT_HEADER_SIZE 4
#define RTI_CDR_SHORT_PARAMETER_LENGTH 2

#ifdef RTI_ENDIAN_LITTLE
  #define RTI_CDR_ENCAPSULATION_ID_CDR_NATIVE   RTI_CDR_ENCAPSULATION_ID_CDR_LE
  #define RTI_CDR_ENCAPSULATION_ID_PL_CDR_NATIVE   RTI_CDR_ENCAPSULATION_ID_PL_CDR_LE
#else
  #define RTI_CDR_ENCAPSULATION_ID_CDR_NATIVE   RTI_CDR_ENCAPSULATION_ID_CDR_BE
  #define RTI_CDR_ENCAPSULATION_ID_PL_CDR_NATIVE   RTI_CDR_ENCAPSULATION_ID_PL_CDR_BE
#endif


typedef RTI_UINT16 RTIEncapsulationId;

typedef RTI_UINT16 RTIEncapsulationOptions;

typedef RTIEncapsulationId RTICdrEncapsulationId;

typedef RTIEncapsulationOptions RTICdrEncapsulationOptions;

struct RTICdrEncapsulation {
    RTICdrEncapsulationId identifier;
    RTICdrEncapsulationOptions options;
};

extern RTICdrDllExport 
RTIBool RTICdrEncapsulation_validEncapsulationId(
    unsigned short identifer);

extern RTICdrDllExport 
RTIBool RTICdrEncapsulation_validCdrEncapsulation(
    unsigned short identifer, unsigned short options, void *serializeOptions);

extern RTICdrDllExport 
RTIBool RTICdrEncapsulation_validParameterCdrEncapsulation(
    unsigned short identifer, unsigned short options, void *serializeOptions);

extern RTICdrDllExport 
RTIEncapsulationId RTICdrEncapsulation_getNativeCdrEncapsulationId();

struct RTIEncapsulationInfo {
    RTIEncapsulationId encapsulationId;
    RTIBool getLazy;
    RTIBool returnImmediate;
    RTIBool useZeroCopy;
};


#define RTI_ENCAPSULATION_INFO_DEFAULT \
{ \
   RTI_CDR_ENCAPSULATION_ID_CDR_NATIVE, /* encapsulationId */ \
   RTI_FALSE, /* getLazy */ \
   RTI_FALSE, /* returnImmediate */ \
   RTI_FALSE, /* doZeroCopy */ \
}


#define RTI_CDR_PARAMETER_HEADER_ALIGNMENT 4


#define RTI_CDR_PID_NON_EXTENDED_MAX_VALUE 0x3F00


#define RTI_CDR_PID_EXTENDED 0x3F01


#define RTI_CDR_PID_LIST_END 0x3F02


#define RTI_CDR_PID_IGNORE 0x3F03


#define RTI_CDR_PARAMETER_FLAG_IMPL_EXTENSION 0x8000


#define RTI_CDR_PARAMETER_FLAG_MUST_UNDERSTAND 0x4000


#define RTI_CDR_LONG_PARAMETER_FLAG_MUST_UNDERSTAND 0x40000000

extern RTICdrDllExport
void RTICdrParameterId_stripOutFlags(RTI_UINT16 * paramaterId);

extern RTICdrDllExport
void RTICdrLongParameterId_stripOutFlags(RTI_UINT32 * paramaterId);


#ifdef __cplusplus
    }	/* extern "C" */
#endif

#include "cdr/cdr_encapsulation_impl.h"


#endif /* cdr_encapsulation_h */

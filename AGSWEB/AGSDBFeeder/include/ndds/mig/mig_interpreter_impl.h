/* (c) Copyright 2003-2015, Real-Time Innovations, Inc. All rights reserved. */
/*
 * @(#)mig_interpreter_impl.h    generated by: makeheader    Fri Feb 16 13:51:36 2018
 *
 *		built from:	interpreter_impl.ifc
 */

#ifndef mig_interpreter_impl_h
#define mig_interpreter_impl_h


#ifndef osapi_bufferUtils_h
  #include "osapi/osapi_bufferUtils.h"
#endif
#ifndef reda_worker_h
  #include "reda/reda_worker.h"
#endif

#ifdef __cplusplus
    extern "C" {
#endif



extern MIGDllVariable
struct REDAObjectPerWorker *MIG_INTERPRETER_STAT_PER_WORKER;

#define MIGInterpreterWorkerStat_getStorageLazy(statPtr, worker) \
    ( *(statPtr) = (struct MIGInterpreterWorkerStat *)           \
        REDAWorker_assertObject(worker, MIG_INTERPRETER_STAT_PER_WORKER) )

#define MIGInterpreterListenerKey_toString REDAOrderedDataType_toStringFiveInt
#define MIGInterpreterListenerKey_compare  REDAOrderedDataType_compareFiveUInt
#define MIGInterpreterListenerKey_print    REDAOrderedDataType_printFiveInt

/* --------------------------------------------------------- */
  #ifdef RTI_ENDIAN_LITTLE
    #define MIGInterpreterContext_needsByteSwap(context) \
      (((context)->submessageFlags & MIG_RTPS_ENDIAN_FLAG) == 0)
  #else
    #define MIGInterpreterContext_needsByteSwap(context) \
      (((context)->submessageFlags & MIG_RTPS_ENDIAN_FLAG) != 0)
  #endif /* RTI_ENDIAN_LITTLE */

/* ------------------------------------------------------------------ */
#ifdef RTI_ENDIAN_LITTLE
  #define MIGInterpreterContext_deserializeSubmessageDataLength(c, dataPtr) \
    if (!((c)->submessageFlags & MIG_RTPS_ENDIAN_FLAG)) {                   \
        (c)->data.length = 0;                                               \
	*((char *)(&((c)->data.length)) + 1) = *((*(dataPtr))++);           \
        *((char *)(&((c)->data.length))    ) = *((*(dataPtr))++);           \
    } else {                                                                \
	(c)->data.length = *(RTI_UINT16 *)(*(dataPtr));                     \
        *(dataPtr) += 2;                                                    \
    }
#else
  #define MIGInterpreterContext_deserializeSubmessageDataLength(c, dataPtr) \
    if ((c)->submessageFlags & MIG_RTPS_ENDIAN_FLAG) {                      \
        (c)->data.length = 0;                                               \
	*((char *)(&((c)->data.length)) + 3) = *((*(dataPtr))++);           \
        *((char *)(&((c)->data.length)) + 2) = *((*(dataPtr))++);           \
    } else {                                                                \
	(c)->data.length = *(RTI_UINT16 *)(*(dataPtr));                     \
        *(dataPtr) += 2;                                                    \
    }
#endif /* RTI_ENDIAN_LITTLE */
/* ------------------------------------------------------------------ */

#define MIGInterpreter_getSpaceLeft(buffer, currentLocation) \
    ((buffer)->length - (currentLocation - (buffer)->pointer))

#define MIGInterpreter_assertBufferSpace(buffer, currentLocation, \
                                         bytesToAssert)           \
    (MIGInterpreter_getSpaceLeft(buffer, currentLocation) >= bytesToAssert)


#ifdef __cplusplus
    }	/* extern "C" */
#endif

#endif /* mig_interpreter_impl_h */

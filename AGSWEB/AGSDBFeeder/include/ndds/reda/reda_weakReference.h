/* (c) Copyright 2003-2015, Real-Time Innovations, Inc. All rights reserved. */
/*
 * @(#)reda_weakReference.h    generated by: makeheader    Fri Feb 16 13:51:18 2018
 *
 *		built from:	weakReference.ifc
 */

#ifndef reda_weakReference_h
#define reda_weakReference_h


  #ifndef osapi_type_h
    #include "osapi/osapi_type.h"
  #endif
  #ifndef reda_dll_h
    #include "reda/reda_dll.h"
  #endif

#ifdef __cplusplus
    extern "C" {
#endif

struct REDAWeakReference;

struct REDAWorker;

struct REDACursor;

struct REDAExclusiveArea;


#define REDA_TABLE_WEAKREF_UNLIMITED (-1)

extern REDADllExport void REDAWeakReference_print(const void *data,
						  const char *desc,
						  int indent);

extern RTIBool
REDAWeakReference_refersToExistingRecord(const struct REDAWeakReference *ref);

extern REDADllExport int 
REDAWeakReference_compare(const void *left,
			  const void *right);


  #define REDA_WEAK_REFERENCE_INVALID { \
    NULL, \
    REDA_WEAK_REFERENCE_INDEX_INVALID, \
    REDA_EPOCH_UNKNOWN}

extern REDADllExport void
REDAWeakReference_reset(struct REDAWeakReference *ref);

extern REDADllExport struct REDAWeakReferenceManager *
REDAWeakReferenceManager_new(int uniqueWeakRefCountInit,
			     int uniqueWeakRefCountMax, /* -1 ==> unlimited */
			     struct REDAExclusiveArea *adminEA);

extern REDADllExport int
REDAWeakReferenceManager_getWeakRefCountInit(
        struct REDAWeakReferenceManager *me);

extern REDADllExport int
REDAWeakReferenceManager_getWeakRefCountMax(
        struct REDAWeakReferenceManager *me);

extern REDADllExport void 
REDAWeakReferenceManager_delete(struct REDAWeakReferenceManager *manager);

struct REDAWeakReferenceManagerInfo {
    /*e */
    void* weakReferenceManagerId;
    /*e */
    int maxWeakReference;
    /*e */
    int weakReferenceCount;
    /*e */
    int weakReferenceHighWatermark;
    /*e */
    int weakReferenceAllocatedCount;
    /*e */
    struct REDAExclusiveAreaInfo *adminExclusiveAreaInfo;
};

extern REDADllExport struct REDAWeakReferenceManagerInfo *
REDAWeakReferenceManagerInfo_new(
    struct REDAWeakReferenceManager *weakReferenceManager);

extern REDADllExport RTIBool
REDAWeakReferenceManagerInfo_get(struct REDAWeakReferenceManager *weakReferenceManager,
				 struct REDAWeakReferenceManagerInfo *info);

extern REDADllExport void
REDAWeakReferenceManagerInfo_delete(struct REDAWeakReferenceManagerInfo *info);

extern REDADllExport void
REDAWeakReferenceManagerInfo_print(
    struct REDAWeakReferenceManagerInfo *info, int indent, int verbosity);


#ifdef __cplusplus
    }	/* extern "C" */
#endif

/* pick up hidden performance boosting macros and optimizations */
  #include "reda/reda_weakReference_impl.h"

#endif /* reda_weakReference_h */

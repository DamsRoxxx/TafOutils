/* (c) Copyright 2003-2015, Real-Time Innovations, Inc. All rights reserved. */
/*
 * @(#)dds_c_builtintypes.h    generated by: makeheader    Fri Feb 16 13:51:58 2018
 *
 *		built from:	builtintypes.ifc
 */

#ifndef dds_c_builtintypes_h
#define dds_c_builtintypes_h



#ifndef osapi_heap_h
  #include "osapi/osapi_heap.h"
#endif

#ifndef dds_c_typecode_h
#include "dds_c/dds_c_typecode.h"
#endif

#ifndef dds_c_data_h
#include "dds_c/dds_c_data.h"
#endif

#include "dds_c/dds_c_octet_buffer.h"

#ifndef dds_c_printformat_h
#include "dds_c/dds_c_printformat.h"
#endif

#ifdef __cplusplus
    extern "C" {
#endif


#if (defined(RTI_WIN32) || defined (RTI_WINCE)) && defined(NDDS_USER_DLL_EXPORT)
  /* If the code is building on Windows, start exporting symbols.
   */
  #undef DDSCDllExport
  #define DDSCDllExport __declspec(dllexport)

#endif



#if defined(RTI_WIN32) || defined(RTI_WINCE)
  #pragma warning(push)
  #pragma warning(disable:4190)
#elif defined(RTI_DARWIN)
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wreturn-type-c-linkage"
#endif


#ifdef RTI_CPP
struct DDS_OctetsSeq;
class DDSOctetsTypeSupport;
class DDSOctetsDataWriter;
class DDSOctetsDataReader;
struct DDS_KeyedOctetsSeq;
class DDSKeyedOctetsTypeSupport;
class DDSKeyedOctetsDataWriter;
class DDSKeyedOctetsDataReader;
struct DDS_KeyedStringSeq;
class DDSKeyedStringTypeSupport;
class DDSKeyedStringDataWriter;
class DDSKeyedStringDataReader;
#endif

 extern DDSCDllVariable const char * const DDS_StringTYPENAME;

extern DDSCDllExport DDS_TypeCode* DDS_String_get_typecode(); /* Type code */

 extern DDSCDllVariable const char* const DDS_OctetsTYPENAME;

typedef struct DDS_Octets
{
    /*e \dref_Octets_length
    */
    int   length;

    /*e \dref_Octets_value
    */
    unsigned char * value;

  #ifdef RTI_CPP

    /* Type traits */
    typedef struct DDS_OctetsSeq Seq;
    typedef DDSOctetsTypeSupport TypeSupport;
    typedef DDSOctetsDataWriter DataWriter;
    typedef DDSOctetsDataReader DataReader;

     /*e \dref_Octets_new
     */     
     DDS_Octets()
         : length(0), value(NULL)
     {
     }

     DDS_Octets(const DDS_Octets& other)
        : length(other.length), value(NULL)
     {
         if (other.value != NULL) {
             value = DDS_OctetBuffer_dup(other.value, other.length);
         }
     }

     /*e \dref_Octets_new_with_length
     */     
     DDS_Octets(int size)
        : length(size), value(NULL)
     {
	 if (size>=0) {
	     value = DDS_OctetBuffer_alloc(size);
	 }
     }

     /*e \dref_Octets_destroy
     */     
     ~DDS_Octets()
     {
	 if (value != NULL) {
	     DDS_OctetBuffer_free(value);
	 }
     }

     struct DDS_Octets& operator= (const struct DDS_Octets& other)
     {
         if (value != NULL) {
             DDS_OctetBuffer_free(value);
             value = NULL;
         }

         if (other.value != NULL) {
             value = DDS_OctetBuffer_dup(other.value, other.length);
         }

         length = other.length;
         return *this;
     }

     void swap(struct DDS_Octets & o) 
     {
        int tlen = o.length;
        o.length = this->length;
        this->length = tlen;

        unsigned char * tvalue = o.value;
        o.value = this->value;
        this->value = tvalue;
     }

     unsigned int is_allocated() {
        return value != NULL;
     }

  #endif
} DDS_Octets;

extern DDSCDllExport DDS_TypeCode* DDS_Octets_get_typecode(); /* Type code */


DDS_SEQUENCE(DDS_OctetsSeq, DDS_Octets);

 extern DDSCDllVariable const char * const DDS_KeyedStringTYPENAME;

typedef struct DDS_KeyedString
{
    /*e \dref_KeyedString_key
    */
    char * key;

    /*e \dref_KeyedString_value
    */
    char * value;

  #ifdef RTI_CPP

    /* Type traits */
    typedef DDS_KeyedStringSeq Seq;
    typedef DDSKeyedStringTypeSupport TypeSupport;
    typedef DDSKeyedStringDataWriter DataWriter;
    typedef DDSKeyedStringDataReader DataReader;

     /*e \dref_KeyedString_new
     */     
     DDS_KeyedString()
        : key(NULL), value(NULL)
     {
     }

     DDS_KeyedString(const DDS_KeyedString& other)
         : key(NULL), value(NULL)
     {
         DDS_String_replace(&key, other.key);
         DDS_String_replace(&value, other.value);
     }

     /*e \dref_KeyedString_new_with_length
     */     
     DDS_KeyedString(int key_size, int size)
         : key(NULL), value(NULL)
     {

	 if (key_size>=0) {
	     key = DDS_String_alloc(key_size-1);

	     if (key == NULL) {
		 return;
	     }
	 }

	 if (size>=0) {
             value = DDS_String_alloc(size-1);

	     if (value == NULL && key != NULL) {
		 DDS_String_free(key);
		 key = NULL;
	     }
	 }
     }

     /*e \dref_KeyedString_destroy
     */     
     ~DDS_KeyedString()
     {
	 if (key != NULL) {
	     DDS_String_free(key);
	 }

	 if (value != NULL) {
	     DDS_String_free(value);
	 }
     }

     struct DDS_KeyedString& operator= (const struct DDS_KeyedString& other)
     {
         DDS_String_replace(&key, other.key);
         DDS_String_replace(&value, other.value);
         return *this;
     }

     void swap(struct DDS_KeyedString & ks) 
     {
        char * tkey = ks.key;
        ks.key = this->key;
        this->key = tkey;

        char * tvalue = ks.value;
        ks.value = this->value;
        this->value = tvalue;
     }

     unsigned int is_allocated() {
        return ((key != NULL) && (value != NULL));
     }

  #endif
} DDS_KeyedString;

extern DDSCDllExport DDS_TypeCode* DDS_KeyedString_get_typecode(); /* Type code */


DDS_SEQUENCE(DDS_KeyedStringSeq, DDS_KeyedString);

 extern DDSCDllVariable const char * const DDS_KeyedOctetsTYPENAME;

typedef struct DDS_KeyedOctets
{
    /*e \dref_KeyedOctets_key
    */
    char * key;

    /*e \dref_KeyedOctets_length
    */
    int length;

    /*e \dref_KeyedOctets_value
    */
    unsigned char * value;

  #ifdef RTI_CPP

    /* Type traits */
    typedef struct DDS_KeyedOctetsSeq Seq;
    typedef DDSKeyedOctetsTypeSupport TypeSupport;
    typedef DDSKeyedOctetsDataWriter DataWriter;
    typedef DDSKeyedOctetsDataReader DataReader;

     /*e \dref_KeyedOctets_new
     */     
     DDS_KeyedOctets()
        : key(NULL), length(0), value(NULL)
     {
     }

     DDS_KeyedOctets(const DDS_KeyedOctets& other)
        : key(NULL), length(other.length), value(NULL)
     {
         DDS_String_replace(&key, other.key);
         if (other.value != NULL) {
             value = DDS_OctetBuffer_dup(other.value, other.length);
         }
     }


     /*e \dref_KeyedOctets_new_with_length
     */     
     DDS_KeyedOctets(int key_size, int size)
         : key(NULL), length(0), value(NULL)
     {

	 if (key_size>=0) {
	     key = DDS_String_alloc(key_size-1);

	     if (key == NULL) {
		 return;
	     }
	 }

	 if (size>=0) {
	     value = DDS_OctetBuffer_alloc(size);

	     if (value == NULL && key != NULL) {
		 DDS_String_free(key);
		 key = NULL;
	     }
	 }
     }

     /*e \dref_KeyedOctets_destroy
     */     
     ~DDS_KeyedOctets()
     {
	 if (key != NULL) {
	     DDS_String_free(key);
	 }

	 if (value != NULL) {
	     DDS_OctetBuffer_free(value);
	 }
     }

     struct DDS_KeyedOctets& operator= (const struct DDS_KeyedOctets& other)
     {
         DDS_String_replace(&key, other.key);

         if (value != NULL) {
             DDS_OctetBuffer_free(value);
             value = NULL;
         }

         if (other.value != NULL) {
             value = DDS_OctetBuffer_dup(other.value, other.length);
         }

         length = other.length;
         return *this;
     }

     void swap(struct DDS_KeyedOctets & ko) 
     {
        char * tkey = ko.key;
        ko.key = this->key;
        this->key = tkey;

        int tlen = ko.length;
        ko.length = this->length;
        this->length = tlen;

        unsigned char * tvalue = ko.value;
        ko.value = this->value;
        this->value = tvalue;
     }

     unsigned int is_allocated() {
        return ((key != NULL) && (value != NULL));
     }

   #endif
} DDS_KeyedOctets;

extern DDSCDllExport DDS_TypeCode* DDS_KeyedOctets_get_typecode(); /* Type code */


DDS_SEQUENCE(DDS_KeyedOctetsSeq, DDS_KeyedOctets);

extern DDSCDllExport DDS_Octets* DDS_Octets_new();

extern DDSCDllExport DDS_Octets* DDS_Octets_new_w_size(int size);

extern DDSCDllExport void DDS_Octets_delete(DDS_Octets* self);

extern DDSCDllExport DDS_KeyedString* DDS_KeyedString_new();

extern DDSCDllExport DDS_KeyedString* DDS_KeyedString_new_w_size(int key_size, int size);

extern DDSCDllExport void DDS_KeyedString_delete(DDS_KeyedString* self);

extern DDSCDllExport DDS_KeyedOctets* DDS_KeyedOctets_new();

extern DDSCDllExport DDS_KeyedOctets* DDS_KeyedOctets_new_w_size(int key_size, int size);

extern DDSCDllExport void DDS_KeyedOctets_delete(DDS_KeyedOctets* self);



/* ------------------------------------------------------------------------- */
/* String                                                                    */
/* ------------------------------------------------------------------------- */

/*-------------------------- Support */

#ifdef DOXYGEN_DOCUMENTATION_ONLY
/*ce \dref_StringTypeSupport
 */
struct DDS_StringTypeSupport {};
#endif

/*e \dref_StringTypeSupport_register_type
 */
DDSCDllExport
DDS_ReturnCode_t DDS_StringTypeSupport_register_type(
    DDS_DomainParticipant* participant,         
    const char* type_name);                     

/*e \dref_StringTypeSupport_unregister_type
 */
DDSCDllExport                          
DDS_ReturnCode_t DDS_StringTypeSupport_unregister_type(
    DDS_DomainParticipant* participant,
    const char* type_name);

/*e \dref_StringTypeSupport_get_type_name
 */
DDSCDllExport
const char* DDS_StringTypeSupport_get_type_name();

DDSCDllExport
char * DDS_StringTypeSupport_create_data();

DDSCDllExport
char * DDS_StringTypeSupport_create_data_ex(
    DDS_Boolean allocatePointers);

DDSCDllExport
char* DDS_StringTypeSupport_create_data_w_params(
    const struct DDS_TypeAllocationParams_t * alloc_params);

DDSCDllExport
DDS_ReturnCode_t DDS_StringTypeSupport_delete_data(
	char * a_data);

DDSCDllExport
DDS_ReturnCode_t DDS_StringTypeSupport_delete_data_ex(
	char * a_data, DDS_Boolean deletePointers);

DDSCDllExport
DDS_ReturnCode_t DDS_StringTypeSupport_delete_data_w_params(
        char * a_data, 
        const struct DDS_TypeDeallocationParams_t * dealloc_params);

/*ce \dref_StringTypeSupport_print_data
*/
DDSCDllExport
void DDS_StringTypeSupport_print_data(const char * a_data);

DDSCDllExport                        
DDS_ReturnCode_t DDS_StringTypeSupport_copy_data(
    char * desc, const char * source);

DDSCDllExport
DDS_ReturnCode_t DDS_StringTypeSupport_initialize_data(
    char * a_data);

DDSCDllExport
DDS_ReturnCode_t DDS_StringTypeSupport_initialize_data_ex(
    char * a_data, DDS_Boolean allocatePointers);

DDSCDllExport
DDS_ReturnCode_t DDS_StringTypeSupport_initialize_data_w_params(
    char * a_data, 
    const struct DDS_TypeAllocationParams_t * alloc_params);

DDSCDllExport
DDS_ReturnCode_t DDS_StringTypeSupport_finalize_data(
    char * a_data);

DDSCDllExport
DDS_ReturnCode_t DDS_StringTypeSupport_finalize_data_ex(
    char * a_data, DDS_Boolean deletePointers);

DDSCDllExport
DDS_ReturnCode_t DDS_StringTypeSupport_finalize_data_w_params(
    char * a_data, 
    const struct DDS_TypeDeallocationParams_t * dealloc_params);

DDSCDllExport
void DDS_StringTypeSupport_finalize();

/* Builtin type extension */
DDSCDllExport
char * DDS_StringTypeSupport_create_data_w_size(int size);

DDSCDllExport
char * DDS_StringTypeSupport_create_data_w_size_ex(int size, DDS_Boolean allocatePointers);

DDSCDllExport
DDS_ReturnCode_t DDS_StringTypeSupport_initialize_data_w_size(
    char * a_data, int size);

DDSCDllExport
DDS_ReturnCode_t DDS_StringTypeSupport_initialize_data_w_size_ex(
    char * a_data, int size, DDS_Boolean allocatePointers);

/*ce \dref_StringTypeSupport_get_typecode();  
*/
DDSCDllExport
DDS_TypeCode* DDS_StringTypeSupport_get_typecode();  

/*ce \dref_StringTypeSupport_serialize_data_to_cdr_buffer
*/
DDSCDllExport
DDS_ReturnCode_t DDS_StringTypeSupport_serialize_data_to_cdr_buffer(
    char * buffer,
    unsigned int * length,
    const char * a_data);

/*ce \dref_StringTypeSupport_deserialize_data_from_cdr_buffer
*/
DDSCDllExport
DDS_ReturnCode_t DDS_StringTypeSupport_deserialize_data_from_cdr_buffer(
    char **a_data,
    const char * buffer,
    unsigned int length);

/*ce \dref_StringTypeSupport_data_to_string
*/
extern DDSCDllExport
DDS_ReturnCode_t DDS_StringTypeSupport_data_to_string(
    const char *sample,
    char *str,
    DDS_UnsignedLong *str_size,
    DDS_PrintFormatProperty *property);


/*-------------------------- DataWriter */

/*ce \dref_StringDataWriter
*/
typedef struct DDS_StringDataWriter DDS_StringDataWriter;                               

/*ce \dref_StringDataWriter_narrow
*/
DDSCDllExport DDS_StringDataWriter* DDS_StringDataWriter_narrow(  
    DDS_DataWriter* writer);

/*ce \dref_StringDataWriter_as_datawriter
*/
DDSCDllExport DDS_DataWriter* DDS_StringDataWriter_as_datawriter( 
    DDS_StringDataWriter* writer);                                                  

DDSCDllExport                                       
DDS_InstanceHandle_t DDS_StringDataWriter_register_instance(               
    DDS_StringDataWriter* self, const char* instance_data);                   

DDSCDllExport                                       
DDS_InstanceHandle_t DDS_StringDataWriter_register_instance_w_timestamp(   
    DDS_StringDataWriter* self, const char* instance_data,                    
    const struct DDS_Time_t* source_timestamp);  

DDSCDllExport                                       
DDS_InstanceHandle_t DDS_StringDataWriter_register_instance_w_params(   
    DDS_StringDataWriter* self, const char* instance_data,                    
    struct DDS_WriteParams_t* params);   

DDSCDllExport                                       
DDS_ReturnCode_t DDS_StringDataWriter_unregister_instance(                 
    DDS_StringDataWriter* self, const char* instance_data,                    
    const DDS_InstanceHandle_t* handle);                              

DDSCDllExport                                       
DDS_ReturnCode_t DDS_StringDataWriter_unregister_instance_w_timestamp(     
    DDS_StringDataWriter* self, const char* instance_data,                    
    const DDS_InstanceHandle_t* handle,                               
    const struct DDS_Time_t* source_timestamp);    

DDSCDllExport                                       
DDS_ReturnCode_t DDS_StringDataWriter_unregister_instance_w_params(     
    DDS_StringDataWriter* self, const char* instance_data,                    
    struct DDS_WriteParams_t* params);    

/*ce \dref_StringDataWriter_write
*/
DDSCDllExport                                       
DDS_ReturnCode_t DDS_StringDataWriter_write(                               
    DDS_StringDataWriter* self, const char* instance_data,                    
    const DDS_InstanceHandle_t* handle);                              

/*ce \dref_StringDataWriter_write_w_timestamp
*/
DDSCDllExport                                       
DDS_ReturnCode_t DDS_StringDataWriter_write_w_timestamp(                   
    DDS_StringDataWriter* self, const char* instance_data,                    
    const DDS_InstanceHandle_t* handle,                               
    const struct DDS_Time_t* source_timestamp);    

/*ce \dref_StringDataWriter_write_w_params
*/
DDSCDllExport                                       
DDS_ReturnCode_t DDS_StringDataWriter_write_w_params(                   
    DDS_StringDataWriter* self, const char* instance_data,                    
    struct DDS_WriteParams_t* params);     

DDSCDllExport                                       
DDS_ReturnCode_t DDS_StringDataWriter_dispose(                             
    DDS_StringDataWriter* self, const char* instance_data,                    
    const DDS_InstanceHandle_t* instance_handle);                     

DDSCDllExport                                       
DDS_ReturnCode_t DDS_StringDataWriter_dispose_w_timestamp(                 
    DDS_StringDataWriter* self, const char* instance_data,                    
    const DDS_InstanceHandle_t* instance_handle,                      
    const struct DDS_Time_t* source_timestamp);       

DDSCDllExport                                       
DDS_ReturnCode_t DDS_StringDataWriter_dispose_w_params(                 
    DDS_StringDataWriter* self, const char* instance_data,                    
    struct DDS_WriteParams_t* params);   

DDSCDllExport                                       
DDS_ReturnCode_t DDS_StringDataWriter_get_key_value(                       
    DDS_StringDataWriter* self, char* key_holder,                             
    const DDS_InstanceHandle_t* handle);                              

DDSCDllExport                                       
DDS_InstanceHandle_t DDS_StringDataWriter_lookup_instance(                 
    DDS_StringDataWriter* self, const char* key_holder);

/*-------------------------- DataReader */

/*ce \dref_StringDataReader
 */
typedef struct DDS_StringDataReader DDS_StringDataReader;                                  

/*ce \dref_StringDataReader_narrow
 */
DDSCDllExport DDS_StringDataReader* DDS_StringDataReader_narrow(     
    DDS_DataReader* reader);                                             

/*ce \dref_StringDataReader_as_datareader
 */
DDSCDllExport DDS_DataReader* DDS_StringDataReader_as_datareader(   
    DDS_StringDataReader* reader);                                                

/*ce \dref_StringDataReader_read
 */
DDSCDllExport                                          
DDS_ReturnCode_t DDS_StringDataReader_read(DDS_StringDataReader* self,                 
    struct DDS_StringSeq* received_data, struct DDS_SampleInfoSeq* info_seq,  
    DDS_Long max_samples,                                                    
    DDS_SampleStateMask sample_states, DDS_ViewStateMask view_states,    
    DDS_InstanceStateMask instance_states);                              

/*ce \dref_StringDataReader_take
 */
DDSCDllExport                                          
DDS_ReturnCode_t DDS_StringDataReader_take(DDS_StringDataReader* self,                 
    struct DDS_StringSeq* received_data, struct DDS_SampleInfoSeq* info_seq,  
    DDS_Long max_samples,                                                    
    DDS_SampleStateMask sample_mask, DDS_ViewStateMask view_mask,        
    DDS_InstanceStateMask instance_mask);                                

/*ce \dref_StringDataReader_read_w_condition
 */
DDSCDllExport                                          
DDS_ReturnCode_t DDS_StringDataReader_read_w_condition(                       
    DDS_StringDataReader* self, struct DDS_StringSeq* received_data,                   
    struct DDS_SampleInfoSeq* info_seq,                                  
    DDS_Long max_samples,                                                    
    DDS_ReadCondition* condition);                                       

/*ce \dref_StringDataReader_take_w_condition
 */
DDSCDllExport                                          
DDS_ReturnCode_t DDS_StringDataReader_take_w_condition(                       
    DDS_StringDataReader* self, struct DDS_StringSeq* received_data,                   
    struct DDS_SampleInfoSeq* info_seq,                                  
    DDS_Long max_samples,                                                    
    DDS_ReadCondition* condition);                                       

/*ce \dref_StringDataReader_read_next_sample
 */
DDSCDllExport                                          
DDS_ReturnCode_t DDS_StringDataReader_read_next_sample(                       
    DDS_StringDataReader* self, char* received_data,                             
    struct DDS_SampleInfo* sample_info);                                 

/*ce \dref_StringDataReader_take_next_sample
 */
DDSCDllExport                                          
   DDS_ReturnCode_t DDS_StringDataReader_take_next_sample(                       
   DDS_StringDataReader* self, char* received_data,                             
   struct DDS_SampleInfo* sample_info);                                 

DDSCDllExport                                          
DDS_ReturnCode_t DDS_StringDataReader_read_instance(                          
    DDS_StringDataReader* self,                                                   
    struct DDS_StringSeq* received_data, struct DDS_SampleInfoSeq* info_seq,  
    DDS_Long max_samples,                                                    
    const DDS_InstanceHandle_t* a_handle,                                
    DDS_SampleStateMask sample_states, DDS_ViewStateMask view_states,    
    DDS_InstanceStateMask instance_states);                              

DDSCDllExport                                          
DDS_ReturnCode_t DDS_StringDataReader_take_instance(                          
    DDS_StringDataReader* self,                                                   
    struct DDS_StringSeq* received_data, struct DDS_SampleInfoSeq* info_seq,  
    DDS_Long max_samples,                                                    
    const DDS_InstanceHandle_t* a_handle,                                
    DDS_SampleStateMask sample_states, DDS_ViewStateMask view_states,    
    DDS_InstanceStateMask instance_states);                              

DDSCDllExport
DDS_ReturnCode_t DDS_StringDataReader_read_instance_w_condition(         
    DDS_StringDataReader* self,                                                   
    struct DDS_StringSeq* received_data, struct DDS_SampleInfoSeq* info_seq,  
    DDS_Long max_samples,                                                    
    const DDS_InstanceHandle_t* a_handle,                         
    DDS_ReadCondition* condition);                                       

DDSCDllExport
DDS_ReturnCode_t DDS_StringDataReader_take_instance_w_condition(         
    DDS_StringDataReader* self,                                                   
    struct DDS_StringSeq* received_data, struct DDS_SampleInfoSeq* info_seq,  
    DDS_Long max_samples,                                                    
    const DDS_InstanceHandle_t* a_handle,                         
    DDS_ReadCondition* condition);                                       

DDSCDllExport
DDS_ReturnCode_t DDS_StringDataReader_read_next_instance(                     
   DDS_StringDataReader* self,                                                   
   struct DDS_StringSeq* received_data, struct DDS_SampleInfoSeq* info_seq,  
   DDS_Long max_samples,                                                    
   const DDS_InstanceHandle_t* previous_handle,                         
   DDS_SampleStateMask sample_states, DDS_ViewStateMask view_states,    
   DDS_InstanceStateMask instance_states);                              

DDSCDllExport
DDS_ReturnCode_t DDS_StringDataReader_take_next_instance(                     
   DDS_StringDataReader* self,                                                   
   struct DDS_StringSeq* received_data, struct DDS_SampleInfoSeq* info_seq,  
   DDS_Long max_samples,                                                    
   const DDS_InstanceHandle_t* previous_handle,                         
   DDS_SampleStateMask sample_states, DDS_ViewStateMask view_states,    
   DDS_InstanceStateMask instance_states);                              

DDSCDllExport
DDS_ReturnCode_t DDS_StringDataReader_read_next_instance_w_condition(         
    DDS_StringDataReader* self,                                                   
    struct DDS_StringSeq* received_data, struct DDS_SampleInfoSeq* info_seq,  
    DDS_Long max_samples,                                                    
    const DDS_InstanceHandle_t* previous_handle,                         
    DDS_ReadCondition* condition);                                       

DDSCDllExport
DDS_ReturnCode_t DDS_StringDataReader_take_next_instance_w_condition(         
    DDS_StringDataReader* self,                                                   
    struct DDS_StringSeq* received_data, struct DDS_SampleInfoSeq* info_seq,  
    DDS_Long max_samples,                                                    
    const DDS_InstanceHandle_t* previous_handle,                         
    DDS_ReadCondition* condition);                                       

/*ce \dref_StringDataReader_return_loan
 */
DDSCDllExport
DDS_ReturnCode_t DDS_StringDataReader_return_loan(                            
    DDS_StringDataReader* self,                                                   
    struct DDS_StringSeq* received_data, struct DDS_SampleInfoSeq* info_seq); 

DDSCDllExport
DDS_ReturnCode_t DDS_StringDataReader_get_key_value(                          
    DDS_StringDataReader* self, char* key_holder,
    const DDS_InstanceHandle_t* handle);                                 

DDSCDllExport
DDS_InstanceHandle_t DDS_StringDataReader_lookup_instance(                    
    DDS_StringDataReader* self, const char* key_holder);

/* ------------------------------------------------------------------------- */
/* Octets                                                                    */
/* ------------------------------------------------------------------------- */

/*-------------------------- DataSupport */

#ifdef DOXYGEN_DOCUMENTATION_ONLY

/*ce \dref_OctetsTypeSupport
 */
struct DDS_OctetsTypeSupport {};

/*ce \dref_OctetsTypeSupport_register_type
 */
DDSCDllExport DDS_ReturnCode_t DDS_OctetsTypeSupport_register_type(
        DDS_DomainParticipant* participant,
        const char* type_name);

/*ce \dref_OctetsTypeSupport_unregister_type
 */
DDSCDllExport DDS_ReturnCode_t DDS_OctetsTypeSupport_unregister_type(
        DDS_DomainParticipant* participant,
        const char* type_name);

/*ce \dref_OctetsTypeSupport_get_type_name
 */
DDSCDllExport const char* DDS_OctetsTypeSupport_get_type_name();

/*ce \dref_OctetsTypeSupport_print_data
*/
DDSCDllExport void DDS_OctetsTypeSupport_print_data(
	const DDS_Octets * a_data);

/*ce \dref_OctetsTypeSupport_get_typecode();  
*/
DDSCDllExport
DDS_TypeCode* DDS_OctetsTypeSupport_get_typecode();  

/*ce \dref_OctetsTypeSupport_serialize_data_to_cdr_buffer
*/
DDSCDllExport
DDS_ReturnCode_t DDS_OctetsTypeSupport_serialize_data_to_cdr_buffer(
    char * buffer,
    unsigned int * length,
    const DDS_Octets * a_data);

/*ce \dref_OctetsTypeSupport_deserialize_data_from_cdr_buffer
*/
DDSCDllExport
DDS_ReturnCode_t DDS_OctetsTypeSupport_deserialize_data_from_cdr_buffer(
    DDS_Octets *a_data,
    const char * buffer,
    unsigned int length);

/*ce \dref_OctetsTypeSupport_data_to_string
*/
extern DDSCDllExport
DDS_ReturnCode_t DDS_OctetsTypeSupport_data_to_string(
    const DDS_Octets *sample,
    char *str,
    DDS_UnsignedLong *str_size,
    DDS_PrintFormatProperty *property);


#endif
DDS_TYPESUPPORT_C(DDS_OctetsTypeSupport, DDS_Octets);

/* Builtin type extension */
extern DDSCDllExport
DDS_Octets * DDS_OctetsTypeSupport_create_data_w_size(int size);


extern DDSCDllExport
DDS_Octets * DDS_OctetsTypeSupport_create_data_w_size_ex(int size, DDS_Boolean allocatePointers);


extern DDSCDllExport
DDS_ReturnCode_t DDS_OctetsTypeSupport_initialize_data_w_size(
    DDS_Octets * a_data, int size);


extern DDSCDllExport
DDS_ReturnCode_t DDS_OctetsTypeSupport_initialize_data_w_size_ex(
    DDS_Octets * a_data, int size, DDS_Boolean allocatePointers);


/*-------------------------- DataWriter */

/*ce \dref_OctetsDataWriter
*/
typedef struct DDS_OctetsDataWriter DDS_OctetsDataWriter;                               

/*ce \dref_OctetsDataWriter_narrow
*/
DDSCDllExport DDS_OctetsDataWriter* DDS_OctetsDataWriter_narrow(  
    DDS_DataWriter* writer);

/*ce \dref_OctetsDataWriter_as_datawriter
*/
DDSCDllExport DDS_DataWriter* DDS_OctetsDataWriter_as_datawriter( 
    DDS_OctetsDataWriter* writer);                                                  

DDSCDllExport                                       
DDS_InstanceHandle_t DDS_OctetsDataWriter_register_instance(               
    DDS_OctetsDataWriter* self, const DDS_Octets* instance_data);                   

DDSCDllExport                                       
DDS_InstanceHandle_t DDS_OctetsDataWriter_register_instance_w_timestamp(   
    DDS_OctetsDataWriter* self, const DDS_Octets* instance_data,                    
    const struct DDS_Time_t* source_timestamp);    

DDSCDllExport                                       
DDS_InstanceHandle_t DDS_OctetsDataWriter_register_instance_w_params(   
    DDS_OctetsDataWriter* self, const DDS_Octets* instance_data,                    
    struct DDS_WriteParams_t* params);   

DDSCDllExport                                       
DDS_ReturnCode_t DDS_OctetsDataWriter_unregister_instance(                 
    DDS_OctetsDataWriter* self, const DDS_Octets* instance_data,                    
    const DDS_InstanceHandle_t* handle);                              

DDSCDllExport                                       
DDS_ReturnCode_t DDS_OctetsDataWriter_unregister_instance_w_timestamp(     
    DDS_OctetsDataWriter* self, const DDS_Octets* instance_data,                    
    const DDS_InstanceHandle_t* handle,                               
    const struct DDS_Time_t* source_timestamp);             

DDSCDllExport                                       
DDS_ReturnCode_t DDS_OctetsDataWriter_unregister_instance_w_params(     
    DDS_OctetsDataWriter* self, const DDS_Octets* instance_data,                    
    struct DDS_WriteParams_t* params);   

/*ce \dref_OctetsDataWriter_write
*/
DDSCDllExport                                       
DDS_ReturnCode_t DDS_OctetsDataWriter_write(                               
    DDS_OctetsDataWriter* self, const DDS_Octets* instance_data,                    
    const DDS_InstanceHandle_t* handle); 

/* Extension */
/*ce \dref_OctetsDataWriter_write_octets
*/
DDSCDllExport
DDS_ReturnCode_t DDS_OctetsDataWriter_write_octets (
    DDS_OctetsDataWriter* self,
    const unsigned char * octets,
    int length,
    const DDS_InstanceHandle_t* handle);

/* Extension */
/*ce \dref_OctetsDataWriter_write_octets_seq
*/
DDSCDllExport
DDS_ReturnCode_t DDS_OctetsDataWriter_write_octets_seq(
    DDS_OctetsDataWriter* self,
    const struct DDS_OctetSeq * octets,
    const DDS_InstanceHandle_t* handle);

/*ce \dref_OctetsDataWriter_write_w_timestamp
*/
DDSCDllExport                                       
DDS_ReturnCode_t DDS_OctetsDataWriter_write_w_timestamp(                   
    DDS_OctetsDataWriter* self, const DDS_Octets* instance_data,                    
    const DDS_InstanceHandle_t* handle,                               
    const struct DDS_Time_t* source_timestamp);

/* Extension */
/*ce \dref_OctetsDataWriter_write_octets_w_timestamp
*/
DDSCDllExport
DDS_ReturnCode_t DDS_OctetsDataWriter_write_octets_w_timestamp(
    DDS_OctetsDataWriter* self,
    const unsigned char * octets,
    int length,
    const DDS_InstanceHandle_t* handle,   
    const struct DDS_Time_t* source_timestamp);

/* Extension */
/*ce \dref_OctetsDataWriter_write_octets_seq_w_timestamp
*/
DDSCDllExport
DDS_ReturnCode_t DDS_OctetsDataWriter_write_octets_seq_w_timestamp(
    DDS_OctetsDataWriter* self,
    const struct DDS_OctetSeq * octets,
    const DDS_InstanceHandle_t* handle,   
    const struct DDS_Time_t* source_timestamp);

/*ce \dref_OctetsDataWriter_write_w_params
*/
DDSCDllExport                                       
DDS_ReturnCode_t DDS_OctetsDataWriter_write_w_params(                   
    DDS_OctetsDataWriter* self, const DDS_Octets* instance_data,                    
    struct DDS_WriteParams_t* params);

/* Extension */
/*ce \dref_OctetsDataWriter_write_octets_w_params
*/
DDSCDllExport
DDS_ReturnCode_t DDS_OctetsDataWriter_write_octets_w_params(
    DDS_OctetsDataWriter* self,
    const unsigned char * octets,
    int length,
    struct DDS_WriteParams_t* params);

/* Extension */
/*ce \dref_OctetsDataWriter_write_octets_seq_w_params
*/
DDSCDllExport
DDS_ReturnCode_t DDS_OctetsDataWriter_write_octets_seq_w_params(
    DDS_OctetsDataWriter* self,
    const struct DDS_OctetSeq * octets,
    struct DDS_WriteParams_t* params);

DDSCDllExport                                       
DDS_ReturnCode_t DDS_OctetsDataWriter_dispose(                             
    DDS_OctetsDataWriter* self, const DDS_Octets* instance_data,                    
    const DDS_InstanceHandle_t* instance_handle);                     

DDSCDllExport                                       
DDS_ReturnCode_t DDS_OctetsDataWriter_dispose_w_timestamp(                 
    DDS_OctetsDataWriter* self, const DDS_Octets* instance_data,                    
    const DDS_InstanceHandle_t* instance_handle,                      
    const struct DDS_Time_t* source_timestamp);  

DDSCDllExport                                       
DDS_ReturnCode_t DDS_OctetsDataWriter_dispose_w_params(                 
    DDS_OctetsDataWriter* self, const DDS_Octets* instance_data,                    
    struct DDS_WriteParams_t* params);   

DDSCDllExport                                       
DDS_ReturnCode_t DDS_OctetsDataWriter_get_key_value(                       
    DDS_OctetsDataWriter* self, DDS_Octets* key_holder,                             
    const DDS_InstanceHandle_t* handle);                              

DDSCDllExport                                       
DDS_InstanceHandle_t DDS_OctetsDataWriter_lookup_instance(                 
    DDS_OctetsDataWriter* self, const DDS_Octets* key_holder);

/*-------------------------- DataReader */

/*ce \dref_OctetsDataReader
 */
typedef struct DDS_OctetsDataReader DDS_OctetsDataReader;                                  

/*ce \dref_OctetsDataReader_narrow
 */
DDSCDllExport DDS_OctetsDataReader* DDS_OctetsDataReader_narrow(     
    DDS_DataReader* reader);                                             

/*ce \dref_OctetsDataReader_as_datareader
 */
DDSCDllExport DDS_DataReader* DDS_OctetsDataReader_as_datareader(   
    DDS_OctetsDataReader* reader);                                                

/*ce \dref_OctetsDataReader_read
 */
DDSCDllExport                                          
DDS_ReturnCode_t DDS_OctetsDataReader_read(DDS_OctetsDataReader* self,                 
    struct DDS_OctetsSeq* received_data, struct DDS_SampleInfoSeq* info_seq,  
    DDS_Long max_samples,                                                    
    DDS_SampleStateMask sample_states, DDS_ViewStateMask view_states,    
    DDS_InstanceStateMask instance_states);                              

/*ce \dref_OctetsDataReader_take
 */
DDSCDllExport                                          
DDS_ReturnCode_t DDS_OctetsDataReader_take(DDS_OctetsDataReader* self,                 
    struct DDS_OctetsSeq* received_data, struct DDS_SampleInfoSeq* info_seq,  
    DDS_Long max_samples,                                                    
    DDS_SampleStateMask sample_mask, DDS_ViewStateMask view_mask,        
    DDS_InstanceStateMask instance_mask);                                

/*ce \dref_OctetsDataReader_read_w_condition
 */
DDSCDllExport                                          
DDS_ReturnCode_t DDS_OctetsDataReader_read_w_condition(                       
    DDS_OctetsDataReader* self, struct DDS_OctetsSeq* received_data,                   
    struct DDS_SampleInfoSeq* info_seq,                                  
    DDS_Long max_samples,                                                    
    DDS_ReadCondition* condition);                                       

/*ce \dref_OctetsDataReader_take_w_condition
 */
DDSCDllExport                                          
DDS_ReturnCode_t DDS_OctetsDataReader_take_w_condition(                       
    DDS_OctetsDataReader* self, struct DDS_OctetsSeq* received_data,                   
    struct DDS_SampleInfoSeq* info_seq,                                  
    DDS_Long max_samples,                                                    
    DDS_ReadCondition* condition);                                       

/*ce \dref_OctetsDataReader_read_next_sample
 */
DDSCDllExport                                          
DDS_ReturnCode_t DDS_OctetsDataReader_read_next_sample(                       
    DDS_OctetsDataReader* self, DDS_Octets* received_data,                             
    struct DDS_SampleInfo* sample_info);                                 

/*ce \dref_OctetsDataReader_take_next_sample
 */
DDSCDllExport                                          
   DDS_ReturnCode_t DDS_OctetsDataReader_take_next_sample(                       
   DDS_OctetsDataReader* self, DDS_Octets* received_data,                             
   struct DDS_SampleInfo* sample_info);                                 

DDSCDllExport                                          
DDS_ReturnCode_t DDS_OctetsDataReader_read_instance(                          
    DDS_OctetsDataReader* self,                                                   
    struct DDS_OctetsSeq* received_data, struct DDS_SampleInfoSeq* info_seq,  
    DDS_Long max_samples,                                                    
    const DDS_InstanceHandle_t* a_handle,                                
    DDS_SampleStateMask sample_states, DDS_ViewStateMask view_states,    
    DDS_InstanceStateMask instance_states);                              

DDSCDllExport                                          
DDS_ReturnCode_t DDS_OctetsDataReader_take_instance(                          
    DDS_OctetsDataReader* self,                                                   
    struct DDS_OctetsSeq* received_data, struct DDS_SampleInfoSeq* info_seq,  
    DDS_Long max_samples,                                                    
    const DDS_InstanceHandle_t* a_handle,                                
    DDS_SampleStateMask sample_states, DDS_ViewStateMask view_states,    
    DDS_InstanceStateMask instance_states);                              

DDSCDllExport                                          
DDS_ReturnCode_t DDS_OctetsDataReader_read_instance_w_condition(         
    DDS_OctetsDataReader* self,                                                   
    struct DDS_OctetsSeq* received_data, struct DDS_SampleInfoSeq* info_seq,  
    DDS_Long max_samples,                                                    
    const DDS_InstanceHandle_t* a_handle,                         
    DDS_ReadCondition* condition);                                       

DDSCDllExport                                          
DDS_ReturnCode_t DDS_OctetsDataReader_take_instance_w_condition(         
    DDS_OctetsDataReader* self,                                                   
    struct DDS_OctetsSeq* received_data, struct DDS_SampleInfoSeq* info_seq,  
    DDS_Long max_samples,                                                    
    const DDS_InstanceHandle_t* a_handle,                         
    DDS_ReadCondition* condition);                                       

DDSCDllExport                                          
DDS_ReturnCode_t DDS_OctetsDataReader_read_next_instance(                     
   DDS_OctetsDataReader* self,                                                   
   struct DDS_OctetsSeq* received_data, struct DDS_SampleInfoSeq* info_seq,  
   DDS_Long max_samples,                                                    
   const DDS_InstanceHandle_t* previous_handle,                         
   DDS_SampleStateMask sample_states, DDS_ViewStateMask view_states,    
   DDS_InstanceStateMask instance_states);                              

DDSCDllExport                                          
DDS_ReturnCode_t DDS_OctetsDataReader_take_next_instance(                     
   DDS_OctetsDataReader* self,                                                   
   struct DDS_OctetsSeq* received_data, struct DDS_SampleInfoSeq* info_seq,  
   DDS_Long max_samples,                                                    
   const DDS_InstanceHandle_t* previous_handle,                         
   DDS_SampleStateMask sample_states, DDS_ViewStateMask view_states,    
   DDS_InstanceStateMask instance_states);                              

DDSCDllExport                                          
DDS_ReturnCode_t DDS_OctetsDataReader_read_next_instance_w_condition(         
    DDS_OctetsDataReader* self,                                                   
    struct DDS_OctetsSeq* received_data, struct DDS_SampleInfoSeq* info_seq,  
    DDS_Long max_samples,                                                    
    const DDS_InstanceHandle_t* previous_handle,                         
    DDS_ReadCondition* condition);                                       

DDSCDllExport                                          
DDS_ReturnCode_t DDS_OctetsDataReader_take_next_instance_w_condition(         
    DDS_OctetsDataReader* self,                                                   
    struct DDS_OctetsSeq* received_data, struct DDS_SampleInfoSeq* info_seq,  
    DDS_Long max_samples,                                                    
    const DDS_InstanceHandle_t* previous_handle,                         
    DDS_ReadCondition* condition);                                       

/*ce \dref_OctetsDataReader_return_loan
 */
DDSCDllExport                                          
DDS_ReturnCode_t DDS_OctetsDataReader_return_loan(                            
    DDS_OctetsDataReader* self,                                                   
    struct DDS_OctetsSeq* received_data, struct DDS_SampleInfoSeq* info_seq); 

DDSCDllExport                                          
DDS_ReturnCode_t DDS_OctetsDataReader_get_key_value(                          
    DDS_OctetsDataReader* self, DDS_Octets* key_holder,
    const DDS_InstanceHandle_t* handle);                                 

DDSCDllExport                                          
DDS_InstanceHandle_t DDS_OctetsDataReader_lookup_instance(                    
    DDS_OctetsDataReader* self, const DDS_Octets* key_holder);

/* ------------------------------------------------------------------------- */
/* KeyedString                                                               */
/* ------------------------------------------------------------------------- */

/*-------------------------- Support */

#ifdef DOXYGEN_DOCUMENTATION_ONLY

/*ce \dref_KeyedStringTypeSupport
 */
struct DDS_KeyedStringTypeSupport {};

/*ce \dref_KeyedStringTypeSupport_register_type
 */
DDSCDllExport DDS_ReturnCode_t DDS_KeyedStringTypeSupport_register_type(
        DDS_DomainParticipant* participant,
        const char* type_name);

/*ce \dref_KeyedStringTypeSupport_unregister_type
 */
DDSCDllExport DDS_ReturnCode_t DDS_KeyedStringTypeSupport_unregister_type(
        DDS_DomainParticipant* participant,
        const char* type_name);

/*ce \dref_KeyedStringTypeSupport_get_type_name
 */
DDSCDllExport const char* DDS_KeyedStringTypeSupport_get_type_name();

/*ce \dref_KeyedStringTypeSupport_print_data
*/
DDSCDllExport void DDS_KeyedStringTypeSupport_print_data(
    const DDS_KeyedString * a_data);

/*ce \dref_KeyedStringTypeSupport_get_typecode();  
*/
DDSCDllExport
DDS_TypeCode* DDS_KeyedStringTypeSupport_get_typecode();  

/*ce \dref_KeyedStringTypeSupport_serialize_data_to_cdr_buffer
*/
DDSCDllExport
DDS_ReturnCode_t DDS_KeyedStringTypeSupport_serialize_data_to_cdr_buffer(
    char * buffer,
    unsigned int * length,
    const DDS_KeyedString * a_data);

/*ce \dref_KeyedStringTypeSupport_deserialize_data_from_cdr_buffer
*/
DDSCDllExport
DDS_ReturnCode_t DDS_KeyedStringTypeSupport_deserialize_data_from_cdr_buffer(
    DDS_KeyedString *a_data,
    const char * buffer,
    unsigned int length);

/*ce \dref_KeyedStringTypeSupport_data_to_string
*/
extern DDSCDllExport
DDS_ReturnCode_t DDS_KeyedStringTypeSupport_data_to_string(
    const DDS_KeyedString *sample,
    char *str,
    DDS_UnsignedLong *str_size,
    DDS_PrintFormatProperty *property);


#endif

DDS_TYPESUPPORT_C(DDS_KeyedStringTypeSupport, DDS_KeyedString);

/* Builtin type extension */
extern DDSCDllExport
DDS_KeyedString * DDS_KeyedStringTypeSupport_create_data_w_size(int key_size, int size);


extern DDSCDllExport
DDS_KeyedString * DDS_KeyedStringTypeSupport_create_data_w_size_ex(int key_size, int size, DDS_Boolean allocatePointers);


extern DDSCDllExport
DDS_ReturnCode_t DDS_KeyedStringTypeSupport_initialize_data_w_size(
    DDS_KeyedString * a_data, int key_size, int size);


extern DDSCDllExport
DDS_ReturnCode_t DDS_KeyedStringTypeSupport_initialize_data_w_size_ex(
    DDS_KeyedString * a_data, int key_size, int size, DDS_Boolean allocatePointers);


/*-------------------------- DataWriter */

/*ce \dref_KeyedStringDataWriter
*/
typedef struct DDS_KeyedStringDataWriter DDS_KeyedStringDataWriter;                               

/*ce \dref_KeyedStringDataWriter_narrow
*/
DDSCDllExport DDS_KeyedStringDataWriter* DDS_KeyedStringDataWriter_narrow(  
    DDS_DataWriter* writer);

/*ce \dref_KeyedStringDataWriter_as_datawriter
*/
DDSCDllExport DDS_DataWriter* DDS_KeyedStringDataWriter_as_datawriter( 
    DDS_KeyedStringDataWriter* writer);                                                  

/*ce \dref_KeyedStringDataWriter_register_instance
*/
DDSCDllExport                                       
DDS_InstanceHandle_t DDS_KeyedStringDataWriter_register_instance(               
    DDS_KeyedStringDataWriter* self, const DDS_KeyedString* instance_data); 

/* Extension */
/*ce \dref_KeyedStringDataWriter_register_instance_w_key
*/
DDSCDllExport
DDS_InstanceHandle_t DDS_KeyedStringDataWriter_register_instance_w_key(
    DDS_KeyedStringDataWriter* self,
    const char* key);

/*ce \dref_KeyedStringDataWriter_register_instance_w_timestamp
*/
DDSCDllExport                                       
DDS_InstanceHandle_t DDS_KeyedStringDataWriter_register_instance_w_timestamp(   
    DDS_KeyedStringDataWriter* self, const DDS_KeyedString* instance_data,                    
    const struct DDS_Time_t* source_timestamp);     

/*ce \dref_KeyedStringDataWriter_register_instance_w_params
*/
DDSCDllExport                                       
DDS_InstanceHandle_t DDS_KeyedStringDataWriter_register_instance_w_params(   
    DDS_KeyedStringDataWriter* self, const DDS_KeyedString* instance_data,                    
    struct DDS_WriteParams_t* params);    

/* Extension */
/*ce \dref_KeyedStringDataWriter_register_instance_w_key_w_timestamp
*/
DDSCDllExport
DDS_InstanceHandle_t DDS_KeyedStringDataWriter_register_instance_w_key_w_timestamp(
    DDS_KeyedStringDataWriter* self,
    const char * key,
    const struct DDS_Time_t* source_timestamp);

/* Extension */
/*ce \dref_KeyedStringDataWriter_register_instance_w_key_w_params
*/
DDSCDllExport
DDS_InstanceHandle_t DDS_KeyedStringDataWriter_register_instance_w_key_w_params(
    DDS_KeyedStringDataWriter* self,
    const char * key,
    struct DDS_WriteParams_t* params);

/*ce \dref_KeyedStringDataWriter_unregister_instance
*/
DDSCDllExport                                       
DDS_ReturnCode_t DDS_KeyedStringDataWriter_unregister_instance(                 
    DDS_KeyedStringDataWriter* self, const DDS_KeyedString* instance_data,                    
    const DDS_InstanceHandle_t* handle); 

/* Extension */
/*ce \dref_KeyedStringDataWriter_unregister_instance_w_key
*/
DDSCDllExport
DDS_ReturnCode_t DDS_KeyedStringDataWriter_unregister_instance_w_key(
    DDS_KeyedStringDataWriter*  self,
    const char * key, const DDS_InstanceHandle_t* handle);

/*ce \dref_KeyedStringDataWriter_unregister_instance_w_timestamp
*/
DDSCDllExport                                       
DDS_ReturnCode_t DDS_KeyedStringDataWriter_unregister_instance_w_timestamp(     
    DDS_KeyedStringDataWriter* self, const DDS_KeyedString* instance_data,                    
    const DDS_InstanceHandle_t* handle,                               
    const struct DDS_Time_t* source_timestamp); 

/*ce \dref_KeyedStringDataWriter_unregister_instance_w_params
*/
DDSCDllExport                                       
DDS_ReturnCode_t DDS_KeyedStringDataWriter_unregister_instance_w_params(     
    DDS_KeyedStringDataWriter* self, const DDS_KeyedString* instance_data,                    
    struct DDS_WriteParams_t* params); 

/* Extension */
/*ce \dref_KeyedStringDataWriter_unregister_instance_w_key_w_timestamp
*/
DDSCDllExport
DDS_ReturnCode_t DDS_KeyedStringDataWriter_unregister_instance_w_key_w_timestamp(
    DDS_KeyedStringDataWriter* self,
    const char* key, const DDS_InstanceHandle_t* handle,
    const struct DDS_Time_t* source_timestamp);

/* Extension */
/*ce \dref_KeyedStringDataWriter_unregister_instance_w_key_w_params
*/
DDSCDllExport
DDS_ReturnCode_t DDS_KeyedStringDataWriter_unregister_instance_w_key_w_params(
    DDS_KeyedStringDataWriter* self,
    const char* key, 
    struct DDS_WriteParams_t* params);

/*ce \dref_KeyedStringDataWriter_write
*/
DDSCDllExport                                       
DDS_ReturnCode_t DDS_KeyedStringDataWriter_write(                               
    DDS_KeyedStringDataWriter* self, const DDS_KeyedString* instance_data,                    
    const DDS_InstanceHandle_t* handle);     

/* Extension */
/*ce \dref_KeyedStringDataWriter_write_string_w_key
*/
DDSCDllExport
DDS_ReturnCode_t DDS_KeyedStringDataWriter_write_string_w_key(
    DDS_KeyedStringDataWriter* self,
    const char * key,
    const char * str,
    const DDS_InstanceHandle_t* handle);

/*ce \dref_KeyedStringDataWriter_write_w_timestamp
*/
DDSCDllExport                                       
DDS_ReturnCode_t DDS_KeyedStringDataWriter_write_w_timestamp(                   
    DDS_KeyedStringDataWriter* self, const DDS_KeyedString* instance_data,                    
    const DDS_InstanceHandle_t* handle,                               
    const struct DDS_Time_t* source_timestamp);   

/* Extension */
/*ce \dref_KeyedStringDataWriter_write_string_w_key_w_timestamp
*/
DDSCDllExport
DDS_ReturnCode_t DDS_KeyedStringDataWriter_write_string_w_key_w_timestamp(
    DDS_KeyedStringDataWriter* self,
    const char * key,
    const char * str,
    const DDS_InstanceHandle_t* handle,   
    const struct DDS_Time_t* source_timestamp);

/*ce \dref_KeyedStringDataWriter_write_w_params
*/
DDSCDllExport                                       
DDS_ReturnCode_t DDS_KeyedStringDataWriter_write_w_params(                   
    DDS_KeyedStringDataWriter* self, const DDS_KeyedString* instance_data,                    
    struct DDS_WriteParams_t* params);   

/* Extension */
/*ce \dref_KeyedStringDataWriter_write_string_w_key_w_params
*/
DDSCDllExport
DDS_ReturnCode_t DDS_KeyedStringDataWriter_write_string_w_key_w_params(
    DDS_KeyedStringDataWriter* self,
    const char * key,
    const char * str,
    struct DDS_WriteParams_t* params);

/*ce \dref_KeyedStringDataWriter_dispose
*/
DDSCDllExport                                       
DDS_ReturnCode_t DDS_KeyedStringDataWriter_dispose(                             
    DDS_KeyedStringDataWriter* self, const DDS_KeyedString* instance_data,                    
    const DDS_InstanceHandle_t* instance_handle);  

/* Extension */
/*ce \dref_KeyedStringDataWriter_dispose_w_key
*/
DDSCDllExport
DDS_ReturnCode_t DDS_KeyedStringDataWriter_dispose_w_key(
    DDS_KeyedStringDataWriter* self,
    const char* key,          
    const DDS_InstanceHandle_t* instance_handle);

/*ce \dref_KeyedStringDataWriter_dispose_w_timestamp
*/
DDSCDllExport                                       
DDS_ReturnCode_t DDS_KeyedStringDataWriter_dispose_w_timestamp(                 
    DDS_KeyedStringDataWriter* self, const DDS_KeyedString* instance_data,                    
    const DDS_InstanceHandle_t* instance_handle,                      
    const struct DDS_Time_t* source_timestamp);  

/*ce \dref_KeyedStringDataWriter_dispose_w_params
*/
DDSCDllExport                                       
DDS_ReturnCode_t DDS_KeyedStringDataWriter_dispose_w_params(                 
    DDS_KeyedStringDataWriter* self, const DDS_KeyedString* instance_data,                    
    struct DDS_WriteParams_t* params);                       

/* Extension */
/*ce \dref_KeyedStringDataWriter_dispose_w_key_w_timestamp
*/
DDSCDllExport
DDS_ReturnCode_t DDS_KeyedStringDataWriter_dispose_w_key_w_timestamp(
    DDS_KeyedStringDataWriter* self,
    const char* key, const DDS_InstanceHandle_t* instance_handle,
    const struct DDS_Time_t* source_timestamp);

/* Extension */
/*ce \dref_KeyedStringDataWriter_dispose_w_key_w_params
*/
DDSCDllExport
DDS_ReturnCode_t DDS_KeyedStringDataWriter_dispose_w_key_w_params(
    DDS_KeyedStringDataWriter* self,
    const char* key, 
    struct DDS_WriteParams_t* params);

/*ce \dref_KeyedStringDataWriter_get_key_value
*/
DDSCDllExport                                       
DDS_ReturnCode_t DDS_KeyedStringDataWriter_get_key_value(                       
    DDS_KeyedStringDataWriter* self, DDS_KeyedString* key_holder,                             
    const DDS_InstanceHandle_t* handle);                              

/* Extension */
/*ce \dref_KeyedStringDataWriter_get_key_value_w_key
*/
DDSCDllExport
DDS_ReturnCode_t DDS_KeyedStringDataWriter_get_key_value_w_key(
    DDS_KeyedStringDataWriter* self,
    char * key,
    const DDS_InstanceHandle_t* handle);

/*ce \dref_KeyedStringDataWriter_lookup_instance
*/
DDSCDllExport                                       
DDS_InstanceHandle_t DDS_KeyedStringDataWriter_lookup_instance(                 
    DDS_KeyedStringDataWriter* self, const DDS_KeyedString* key_holder);

/*ce \dref_KeyedStringDataWriter_lookup_instance_w_key
*/
DDSCDllExport
DDS_InstanceHandle_t DDS_KeyedStringDataWriter_lookup_instance_w_key(
    DDS_KeyedStringDataWriter* self,
    const char * key);

/*-------------------------- DataReader */

/*ce \dref_KeyedStringDataReader
 */
typedef struct DDS_KeyedStringDataReader DDS_KeyedStringDataReader;                                  

/*ce \dref_KeyedStringDataReader_narrow
 */
DDSCDllExport DDS_KeyedStringDataReader* DDS_KeyedStringDataReader_narrow(     
    DDS_DataReader* reader);                                             

/*ce \dref_KeyedStringDataReader_as_datareader
 */
DDSCDllExport DDS_DataReader* DDS_KeyedStringDataReader_as_datareader(   
    DDS_KeyedStringDataReader* reader);                                                

/*ce \dref_KeyedStringDataReader_read
 */
DDSCDllExport                                          
DDS_ReturnCode_t DDS_KeyedStringDataReader_read(DDS_KeyedStringDataReader* self,                 
    struct DDS_KeyedStringSeq* received_data, struct DDS_SampleInfoSeq* info_seq,  
    DDS_Long max_samples,                                                    
    DDS_SampleStateMask sample_states, DDS_ViewStateMask view_states,    
    DDS_InstanceStateMask instance_states);                              

/*ce \dref_KeyedStringDataReader_take
 */
DDSCDllExport                                          
DDS_ReturnCode_t DDS_KeyedStringDataReader_take(DDS_KeyedStringDataReader* self,                 
    struct DDS_KeyedStringSeq* received_data, struct DDS_SampleInfoSeq* info_seq,  
    DDS_Long max_samples,                                                    
    DDS_SampleStateMask sample_mask, DDS_ViewStateMask view_mask,        
    DDS_InstanceStateMask instance_mask);                                

/*ce \dref_KeyedStringDataReader_read_w_condition
 */
DDSCDllExport                                          
DDS_ReturnCode_t DDS_KeyedStringDataReader_read_w_condition(                       
    DDS_KeyedStringDataReader* self, struct DDS_KeyedStringSeq* received_data,                   
    struct DDS_SampleInfoSeq* info_seq,                                  
    DDS_Long max_samples,                                                    
    DDS_ReadCondition* condition);                                       

/*ce \dref_KeyedStringDataReader_take_w_condition
 */
DDSCDllExport                                          
DDS_ReturnCode_t DDS_KeyedStringDataReader_take_w_condition(                       
    DDS_KeyedStringDataReader* self, struct DDS_KeyedStringSeq* received_data,                   
    struct DDS_SampleInfoSeq* info_seq,                                  
    DDS_Long max_samples,                                                    
    DDS_ReadCondition* condition);                                       

/*ce \dref_KeyedStringDataReader_read_next_sample
 */
DDSCDllExport                                          
DDS_ReturnCode_t DDS_KeyedStringDataReader_read_next_sample(                       
    DDS_KeyedStringDataReader* self, DDS_KeyedString* received_data,                             
    struct DDS_SampleInfo* sample_info);                                 

/*ce \dref_KeyedStringDataReader_take_next_sample
 */
DDSCDllExport                                          
   DDS_ReturnCode_t DDS_KeyedStringDataReader_take_next_sample(                       
   DDS_KeyedStringDataReader* self, DDS_KeyedString* received_data,                             
   struct DDS_SampleInfo* sample_info);                                 

/*ce \dref_KeyedStringDataReader_read_instance
 */
DDSCDllExport                                          
DDS_ReturnCode_t DDS_KeyedStringDataReader_read_instance(                          
    DDS_KeyedStringDataReader* self,                                                   
    struct DDS_KeyedStringSeq* received_data, struct DDS_SampleInfoSeq* info_seq,  
    DDS_Long max_samples,                                                    
    const DDS_InstanceHandle_t* a_handle,                                
    DDS_SampleStateMask sample_states, DDS_ViewStateMask view_states,    
    DDS_InstanceStateMask instance_states);                              

/*ce \dref_KeyedStringDataReader_take_instance
 */
DDSCDllExport                                          
DDS_ReturnCode_t DDS_KeyedStringDataReader_take_instance(                          
    DDS_KeyedStringDataReader* self,                                                   
    struct DDS_KeyedStringSeq* received_data, struct DDS_SampleInfoSeq* info_seq,  
    DDS_Long max_samples,                                                    
    const DDS_InstanceHandle_t* a_handle,                                
    DDS_SampleStateMask sample_states, DDS_ViewStateMask view_states,    
    DDS_InstanceStateMask instance_states);                              

/*ce \dref_KeyedStringDataReader_read_instance_w_condition
 */
DDSCDllExport                                          
DDS_ReturnCode_t DDS_KeyedStringDataReader_read_instance_w_condition(         
    DDS_KeyedStringDataReader* self,                                                   
    struct DDS_KeyedStringSeq* received_data, struct DDS_SampleInfoSeq* info_seq,  
    DDS_Long max_samples,                                                    
    const DDS_InstanceHandle_t* a_handle,                         
    DDS_ReadCondition* condition);                                       

/*ce \dref_KeyedStringDataReader_take_instance_w_condition
 */
DDSCDllExport                                          
DDS_ReturnCode_t DDS_KeyedStringDataReader_take_instance_w_condition(         
    DDS_KeyedStringDataReader* self,                                                   
    struct DDS_KeyedStringSeq* received_data, struct DDS_SampleInfoSeq* info_seq,  
    DDS_Long max_samples,                                                    
    const DDS_InstanceHandle_t* a_handle,                         
    DDS_ReadCondition* condition);                                       

/*ce \dref_KeyedStringDataReader_read_next_instance
 */
DDSCDllExport                                          
DDS_ReturnCode_t DDS_KeyedStringDataReader_read_next_instance(                     
   DDS_KeyedStringDataReader* self,                                                   
   struct DDS_KeyedStringSeq* received_data, struct DDS_SampleInfoSeq* info_seq,  
   DDS_Long max_samples,                                                    
   const DDS_InstanceHandle_t* previous_handle,                         
   DDS_SampleStateMask sample_states, DDS_ViewStateMask view_states,    
   DDS_InstanceStateMask instance_states);                              

/*ce \dref_KeyedStringDataReader_take_next_instance
 */
DDSCDllExport                                          
DDS_ReturnCode_t DDS_KeyedStringDataReader_take_next_instance(                     
   DDS_KeyedStringDataReader* self,                                                   
   struct DDS_KeyedStringSeq* received_data, struct DDS_SampleInfoSeq* info_seq,  
   DDS_Long max_samples,                                                    
   const DDS_InstanceHandle_t* previous_handle,                         
   DDS_SampleStateMask sample_states, DDS_ViewStateMask view_states,    
   DDS_InstanceStateMask instance_states);                              

/*ce \dref_KeyedStringDataReader_read_next_instance_w_condition
 */
DDSCDllExport                                          
DDS_ReturnCode_t DDS_KeyedStringDataReader_read_next_instance_w_condition(         
    DDS_KeyedStringDataReader* self,                                                   
    struct DDS_KeyedStringSeq* received_data, struct DDS_SampleInfoSeq* info_seq,  
    DDS_Long max_samples,                                                    
    const DDS_InstanceHandle_t* previous_handle,                         
    DDS_ReadCondition* condition);                                       

/*ce \dref_KeyedStringDataReader_take_next_instance_w_condition
 */
DDSCDllExport                                          
DDS_ReturnCode_t DDS_KeyedStringDataReader_take_next_instance_w_condition(         
    DDS_KeyedStringDataReader* self,                                                   
    struct DDS_KeyedStringSeq* received_data, struct DDS_SampleInfoSeq* info_seq,  
    DDS_Long max_samples,                                                    
    const DDS_InstanceHandle_t* previous_handle,                         
    DDS_ReadCondition* condition);                                       

/*ce \dref_KeyedStringDataReader_return_loan
 */
DDSCDllExport                                          
DDS_ReturnCode_t DDS_KeyedStringDataReader_return_loan(                            
    DDS_KeyedStringDataReader* self,                                                   
    struct DDS_KeyedStringSeq* received_data, struct DDS_SampleInfoSeq* info_seq); 

/*ce \dref_KeyedStringDataReader_get_key_value
 */
DDSCDllExport                                          
DDS_ReturnCode_t DDS_KeyedStringDataReader_get_key_value(                          
    DDS_KeyedStringDataReader* self, DDS_KeyedString* key_holder,
    const DDS_InstanceHandle_t* handle);                                 

/* Extension */
/*ce \dref_KeyedStringDataReader_get_key_value_w_key
*/
DDSCDllExport
DDS_ReturnCode_t DDS_KeyedStringDataReader_get_key_value_w_key(
    DDS_KeyedStringDataReader* self, char * key,
    const DDS_InstanceHandle_t* handle);

/*ce \dref_KeyedStringDataReader_lookup_instance
 */
DDSCDllExport                                          
DDS_InstanceHandle_t DDS_KeyedStringDataReader_lookup_instance(                    
    DDS_KeyedStringDataReader* self, const DDS_KeyedString* key_holder);


/*ce \dref_KeyedStringDataReader_lookup_instance_w_key
*/
DDSCDllExport
DDS_InstanceHandle_t DDS_KeyedStringDataReader_lookup_instance_w_key(
    DDS_KeyedStringDataReader* self,
    const char * key);

/* ------------------------------------------------------------------------- */
/* KeyedOctets                                                               */
/* ------------------------------------------------------------------------- */

#ifdef DOXYGEN_DOCUMENTATION_ONLY

/*ce \dref_KeyedOctetsTypeSupport
 */
struct DDS_KeyedOctetsTypeSupport {};

/*ce \dref_KeyedOctetsTypeSupport_register_type
 */
DDSCDllExport DDS_ReturnCode_t DDS_KeyedOctetsTypeSupport_register_type(
        DDS_DomainParticipant* participant,
        const char* type_name);

/*ce \dref_KeyedOctetsTypeSupport_unregister_type
 */
DDSCDllExport DDS_ReturnCode_t DDS_KeyedOctetsTypeSupport_unregister_type(
        DDS_DomainParticipant* participant,
        const char* type_name);

/*ce \dref_KeyedOctetsTypeSupport_get_type_name
 */
DDSCDllExport const char* DDS_KeyedOctetsTypeSupport_get_type_name();

/*ce \dref_KeyedOctetsTypeSupport_print_data
*/
DDSCDllExport void DDS_KeyedOctetsTypeSupport_print_data(
    const DDS_KeyedOctets * a_data);
    
/*ce \dref_KeyedOctetsTypeSupport_get_typecode();  
*/
DDSCDllExport
DDS_TypeCode* DDS_KeyedOctetsTypeSupport_get_typecode();      

/*ce \dref_KeyedOctetsTypeSupport_serialize_data_to_cdr_buffer
*/
DDSCDllExport
DDS_ReturnCode_t DDS_KeyedOctetsTypeSupport_serialize_data_to_cdr_buffer(
    char * buffer,
    unsigned int * length,
    const DDS_KeyedOctets * a_data);

/*ce \dref_KeyedOctetsTypeSupport_deserialize_data_from_cdr_buffer
*/
DDSCDllExport
DDS_ReturnCode_t DDS_KeyedOctetsTypeSupport_deserialize_data_from_cdr_buffer(
    DDS_KeyedOctets *a_data,
    const char * buffer,
    unsigned int length);

/*ce \dref_KeyedOctetsTypeSupport_data_to_string
*/
extern DDSCDllExport
DDS_ReturnCode_t DDS_KeyedOctetsTypeSupport_data_to_string(
    const DDS_KeyedOctets *sample,
    char *str,
    DDS_UnsignedLong *str_size,
    DDS_PrintFormatProperty *property);


#endif
DDS_TYPESUPPORT_C(DDS_KeyedOctetsTypeSupport, DDS_KeyedOctets);

/* Builtin type extension */
extern DDSCDllExport
DDS_KeyedOctets * DDS_KeyedOctetsTypeSupport_create_data_w_size(int key_size, int size);


extern DDSCDllExport
DDS_KeyedOctets * DDS_KeyedOctetsTypeSupport_create_data_w_size_ex(int key_size, int size, DDS_Boolean allocatePointers);


extern DDSCDllExport
DDS_ReturnCode_t DDS_KeyedOctetsTypeSupport_initialize_data_w_size(
    DDS_KeyedOctets * a_data, int key_size, int size);


extern DDSCDllExport
DDS_ReturnCode_t DDS_KeyedOctetsTypeSupport_initialize_data_w_size_ex(
    DDS_KeyedOctets * a_data, int key_size, int size, DDS_Boolean allocatePointers);


/*---- DataWriter */

/*ce \dref_KeyedOctetsDataWriter
*/
typedef struct DDS_KeyedOctetsDataWriter DDS_KeyedOctetsDataWriter;                               

/*ce \dref_KeyedOctetsDataWriter_narrow
*/
DDSCDllExport DDS_KeyedOctetsDataWriter* DDS_KeyedOctetsDataWriter_narrow(  
    DDS_DataWriter* writer);

/*ce \dref_KeyedOctetsDataWriter_as_datawriter
*/
DDSCDllExport DDS_DataWriter* DDS_KeyedOctetsDataWriter_as_datawriter( 
    DDS_KeyedOctetsDataWriter* writer);                                                  

/*ce \dref_KeyedOctetsDataWriter_register_instance
*/
DDSCDllExport                                       
DDS_InstanceHandle_t DDS_KeyedOctetsDataWriter_register_instance(               
    DDS_KeyedOctetsDataWriter* self, const DDS_KeyedOctets* instance_data); 

/*ce \dref_KeyedOctetsDataWriter_register_instance_w_key
*/
DDSCDllExport
DDS_InstanceHandle_t DDS_KeyedOctetsDataWriter_register_instance_w_key(
    DDS_KeyedOctetsDataWriter* self,
    const char* key);

/*ce \dref_KeyedOctetsDataWriter_register_instance_w_timestamp
*/
DDSCDllExport                                       
DDS_InstanceHandle_t DDS_KeyedOctetsDataWriter_register_instance_w_timestamp(   
    DDS_KeyedOctetsDataWriter* self, const DDS_KeyedOctets* instance_data,                    
    const struct DDS_Time_t* source_timestamp);

/*ce \dref_KeyedOctetsDataWriter_register_instance_w_params
*/
DDSCDllExport                                       
DDS_InstanceHandle_t DDS_KeyedOctetsDataWriter_register_instance_w_params(   
    DDS_KeyedOctetsDataWriter* self, const DDS_KeyedOctets* instance_data,                    
    struct DDS_WriteParams_t* params);

/*ce \dref_KeyedOctetsDataWriter_register_instance_w_key_w_timestamp
*/
DDSCDllExport
DDS_InstanceHandle_t DDS_KeyedOctetsDataWriter_register_instance_w_key_w_timestamp(
    DDS_KeyedOctetsDataWriter* self,
    const char * key,
    const struct DDS_Time_t* source_timestamp);

/*ce \dref_KeyedOctetsDataWriter_register_instance_w_key_w_params
*/
DDSCDllExport
DDS_InstanceHandle_t DDS_KeyedOctetsDataWriter_register_instance_w_key_w_params(
    DDS_KeyedOctetsDataWriter* self,
    const char * key,
    struct DDS_WriteParams_t* params);

/*ce \dref_KeyedOctetsDataWriter_unregister_instance
*/
DDSCDllExport                                       
DDS_ReturnCode_t DDS_KeyedOctetsDataWriter_unregister_instance(                 
    DDS_KeyedOctetsDataWriter* self, const DDS_KeyedOctets* instance_data,                    
    const DDS_InstanceHandle_t* handle);                             

/*ce \dref_KeyedOctetsDataWriter_unregister_instance_w_key
*/
DDSCDllExport
DDS_ReturnCode_t DDS_KeyedOctetsDataWriter_unregister_instance_w_key(
    DDS_KeyedOctetsDataWriter*  self,
    const char * key, const DDS_InstanceHandle_t* handle);

/*ce \dref_KeyedOctetsDataWriter_unregister_instance_w_timestamp
*/
DDSCDllExport                                       
DDS_ReturnCode_t DDS_KeyedOctetsDataWriter_unregister_instance_w_timestamp(     
    DDS_KeyedOctetsDataWriter* self, const DDS_KeyedOctets* instance_data,                    
    const DDS_InstanceHandle_t* handle,                               
    const struct DDS_Time_t* source_timestamp);  

/*ce \dref_KeyedOctetsDataWriter_unregister_instance_w_params
*/
DDSCDllExport                                       
DDS_ReturnCode_t DDS_KeyedOctetsDataWriter_unregister_instance_w_params(     
    DDS_KeyedOctetsDataWriter* self, const DDS_KeyedOctets* instance_data,                    
    struct DDS_WriteParams_t* params);  

/*ce \dref_KeyedOctetsDataWriter_unregister_instance_w_key_w_timestamp
*/
DDSCDllExport
DDS_ReturnCode_t DDS_KeyedOctetsDataWriter_unregister_instance_w_key_w_timestamp(
    DDS_KeyedOctetsDataWriter* self,
    const char* key, const DDS_InstanceHandle_t* handle,
    const struct DDS_Time_t* source_timestamp);

/*ce \dref_KeyedOctetsDataWriter_unregister_instance_w_key_w_params
*/
DDSCDllExport
DDS_ReturnCode_t DDS_KeyedOctetsDataWriter_unregister_instance_w_key_w_params(
    DDS_KeyedOctetsDataWriter* self,
    const char* key, 
    struct DDS_WriteParams_t* params);

/*ce \dref_KeyedOctetsDataWriter_write
*/
DDSCDllExport                                       
DDS_ReturnCode_t DDS_KeyedOctetsDataWriter_write(                               
    DDS_KeyedOctetsDataWriter* self, const DDS_KeyedOctets* instance_data,                    
    const DDS_InstanceHandle_t* handle);  

/*ce \dref_KeyedOctetsDataWriter_write_octets_w_key
*/
DDSCDllExport
DDS_ReturnCode_t DDS_KeyedOctetsDataWriter_write_octets_w_key(
    DDS_KeyedOctetsDataWriter* self,
    const char * key,
    const unsigned char * octets,
    int length,
    const DDS_InstanceHandle_t* handle);

/*ce \dref_KeyedOctetsDataWriter_write_octets_seq_w_key
*/
DDSCDllExport
DDS_ReturnCode_t DDS_KeyedOctetsDataWriter_write_octets_seq_w_key(
    DDS_KeyedOctetsDataWriter* self,
    const char * key,
    const struct DDS_OctetSeq * octets,
    const DDS_InstanceHandle_t* handle);

/*ce \dref_KeyedOctetsDataWriter_write_w_timestamp
*/
DDSCDllExport                                       
DDS_ReturnCode_t DDS_KeyedOctetsDataWriter_write_w_timestamp(                   
    DDS_KeyedOctetsDataWriter* self, const DDS_KeyedOctets* instance_data,                    
    const DDS_InstanceHandle_t* handle,                               
    const struct DDS_Time_t* source_timestamp); 

/*ce \dref_KeyedOctetsDataWriter_write_octets_w_key_w_timestamp
*/
DDSCDllExport
DDS_ReturnCode_t DDS_KeyedOctetsDataWriter_write_octets_w_key_w_timestamp(
    DDS_KeyedOctetsDataWriter* self,
    const char * key,
    const unsigned char * octets,
    int length,
    const DDS_InstanceHandle_t* handle,   
    const struct DDS_Time_t* source_timestamp);

/*ce \dref_KeyedOctetsDataWriter_write_octets_seq_w_key_w_timestamp
*/
DDSCDllExport
DDS_ReturnCode_t DDS_KeyedOctetsDataWriter_write_octets_seq_w_key_w_timestamp(
    DDS_KeyedOctetsDataWriter* self,
    const char * key,
    const struct DDS_OctetSeq * octets,
    const DDS_InstanceHandle_t* handle,   
    const struct DDS_Time_t* source_timestamp);

/*ce \dref_KeyedOctetsDataWriter_write_w_params
*/
DDSCDllExport                                       
DDS_ReturnCode_t DDS_KeyedOctetsDataWriter_write_w_params(                   
    DDS_KeyedOctetsDataWriter* self, const DDS_KeyedOctets* instance_data,                    
    struct DDS_WriteParams_t* params); 

/*ce \dref_KeyedOctetsDataWriter_write_octets_w_key_w_params
*/
DDSCDllExport
DDS_ReturnCode_t DDS_KeyedOctetsDataWriter_write_octets_w_key_w_params(
    DDS_KeyedOctetsDataWriter* self,
    const char * key,
    const unsigned char * octets,
    int length,
    struct DDS_WriteParams_t* params);

/*ce \dref_KeyedOctetsDataWriter_write_octets_seq_w_key_w_params
*/
DDSCDllExport
DDS_ReturnCode_t DDS_KeyedOctetsDataWriter_write_octets_seq_w_key_w_params(
    DDS_KeyedOctetsDataWriter* self,
    const char * key,
    const struct DDS_OctetSeq * octets,
    struct DDS_WriteParams_t* params);

/*ce \dref_KeyedOctetsDataWriter_dispose
*/
DDSCDllExport                                       
DDS_ReturnCode_t DDS_KeyedOctetsDataWriter_dispose(                             
    DDS_KeyedOctetsDataWriter* self, const DDS_KeyedOctets* instance_data,                    
    const DDS_InstanceHandle_t* instance_handle);   

/*ce \dref_KeyedOctetsDataWriter_dispose_w_key
*/
DDSCDllExport
DDS_ReturnCode_t DDS_KeyedOctetsDataWriter_dispose_w_key(
    DDS_KeyedOctetsDataWriter* self,
    const char* key,          
    const DDS_InstanceHandle_t* instance_handle);

/*ce \dref_KeyedOctetsDataWriter_dispose_w_timestamp
*/
DDSCDllExport                                       
DDS_ReturnCode_t DDS_KeyedOctetsDataWriter_dispose_w_timestamp(                 
    DDS_KeyedOctetsDataWriter* self, const DDS_KeyedOctets* instance_data,                    
    const DDS_InstanceHandle_t* instance_handle,                      
    const struct DDS_Time_t* source_timestamp);    

/*ce \dref_KeyedOctetsDataWriter_dispose_w_params
*/
DDSCDllExport                                       
DDS_ReturnCode_t DDS_KeyedOctetsDataWriter_dispose_w_params(                 
    DDS_KeyedOctetsDataWriter* self, const DDS_KeyedOctets* instance_data,                    
    struct DDS_WriteParams_t* source_timestamp);  

/*ce \dref_KeyedOctetsDataWriter_dispose_w_key_w_timestamp
*/
DDSCDllExport
DDS_ReturnCode_t DDS_KeyedOctetsDataWriter_dispose_w_key_w_timestamp(
    DDS_KeyedOctetsDataWriter* self,
    const char* key, const DDS_InstanceHandle_t* instance_handle,
    const struct DDS_Time_t* source_timestamp);

/*ce \dref_KeyedOctetsDataWriter_dispose_w_key_w_params
*/
DDSCDllExport
DDS_ReturnCode_t DDS_KeyedOctetsDataWriter_dispose_w_key_w_params(
    DDS_KeyedOctetsDataWriter* self,
    const char* key, 
    struct DDS_WriteParams_t* params);

/*ce \dref_KeyedOctetsDataWriter_get_key_value
*/
DDSCDllExport                                       
DDS_ReturnCode_t DDS_KeyedOctetsDataWriter_get_key_value(                       
    DDS_KeyedOctetsDataWriter* self, DDS_KeyedOctets* key_holder,                             
    const DDS_InstanceHandle_t* handle);     

/*ce \dref_KeyedOctetsDataWriter_get_key_value_w_key
*/
DDSCDllExport
DDS_ReturnCode_t DDS_KeyedOctetsDataWriter_get_key_value_w_key(
    DDS_KeyedOctetsDataWriter* self,
    char * key,
    const DDS_InstanceHandle_t* handle);

/*ce \dref_KeyedOctetsDataWriter_lookup_instance
*/
DDSCDllExport                                       
DDS_InstanceHandle_t DDS_KeyedOctetsDataWriter_lookup_instance(                 
    DDS_KeyedOctetsDataWriter* self, const DDS_KeyedOctets* key_holder);

/*ce \dref_KeyedOctetsDataWriter_lookup_instance_w_key
*/
DDSCDllExport
DDS_InstanceHandle_t DDS_KeyedOctetsDataWriter_lookup_instance_w_key(
    DDS_KeyedOctetsDataWriter* self,
    const char * key);

/*-------------------------- DataReader */

/*ce \dref_KeyedOctetsDataReader
 */
typedef struct DDS_KeyedOctetsDataReader DDS_KeyedOctetsDataReader;                                  

/*ce \dref_KeyedOctetsDataReader_narrow
 */
DDSCDllExport DDS_KeyedOctetsDataReader* DDS_KeyedOctetsDataReader_narrow(     
    DDS_DataReader* reader);                                             

/*ce \dref_KeyedOctetsDataReader_as_datareader
 */
DDSCDllExport DDS_DataReader* DDS_KeyedOctetsDataReader_as_datareader(   
    DDS_KeyedOctetsDataReader* reader);                                                

/*ce \dref_KeyedOctetsDataReader_read
 */
DDSCDllExport                                          
DDS_ReturnCode_t DDS_KeyedOctetsDataReader_read(DDS_KeyedOctetsDataReader* self,                 
    struct DDS_KeyedOctetsSeq* received_data, struct DDS_SampleInfoSeq* info_seq,  
    DDS_Long max_samples,                                                    
    DDS_SampleStateMask sample_states, DDS_ViewStateMask view_states,    
    DDS_InstanceStateMask instance_states);                              

/*ce \dref_KeyedOctetsDataReader_take
 */
DDSCDllExport                                          
DDS_ReturnCode_t DDS_KeyedOctetsDataReader_take(DDS_KeyedOctetsDataReader* self,                 
    struct DDS_KeyedOctetsSeq* received_data, struct DDS_SampleInfoSeq* info_seq,  
    DDS_Long max_samples,                                                    
    DDS_SampleStateMask sample_mask, DDS_ViewStateMask view_mask,        
    DDS_InstanceStateMask instance_mask);                                

/*ce \dref_KeyedOctetsDataReader_read_w_condition
 */
DDSCDllExport                                          
DDS_ReturnCode_t DDS_KeyedOctetsDataReader_read_w_condition(                       
    DDS_KeyedOctetsDataReader* self, struct DDS_KeyedOctetsSeq* received_data,                   
    struct DDS_SampleInfoSeq* info_seq,                                  
    DDS_Long max_samples,                                                    
    DDS_ReadCondition* condition);                                       

/*ce \dref_KeyedOctetsDataReader_take_w_condition
 */
DDSCDllExport                                          
DDS_ReturnCode_t DDS_KeyedOctetsDataReader_take_w_condition(                       
    DDS_KeyedOctetsDataReader* self, struct DDS_KeyedOctetsSeq* received_data,                   
    struct DDS_SampleInfoSeq* info_seq,                                  
    DDS_Long max_samples,                                                    
    DDS_ReadCondition* condition);                                       

/*ce \dref_KeyedOctetsDataReader_read_next_sample
 */
DDSCDllExport                                          
DDS_ReturnCode_t DDS_KeyedOctetsDataReader_read_next_sample(                       
    DDS_KeyedOctetsDataReader* self, DDS_KeyedOctets* received_data,                             
    struct DDS_SampleInfo* sample_info);                                 

/*ce \dref_KeyedOctetsDataReader_take_next_sample
 */
DDSCDllExport                                          
   DDS_ReturnCode_t DDS_KeyedOctetsDataReader_take_next_sample(                       
   DDS_KeyedOctetsDataReader* self, DDS_KeyedOctets* received_data,                             
   struct DDS_SampleInfo* sample_info);                                 

/*ce \dref_KeyedOctetsDataReader_read_instance
 */
DDSCDllExport                                          
DDS_ReturnCode_t DDS_KeyedOctetsDataReader_read_instance(                          
    DDS_KeyedOctetsDataReader* self,                                                   
    struct DDS_KeyedOctetsSeq* received_data, struct DDS_SampleInfoSeq* info_seq,  
    DDS_Long max_samples,                                                    
    const DDS_InstanceHandle_t* a_handle,                                
    DDS_SampleStateMask sample_states, DDS_ViewStateMask view_states,    
    DDS_InstanceStateMask instance_states);                              

/*ce \dref_KeyedOctetsDataReader_take_instance
 */
DDSCDllExport                                          
DDS_ReturnCode_t DDS_KeyedOctetsDataReader_take_instance(                          
    DDS_KeyedOctetsDataReader* self,                                                   
    struct DDS_KeyedOctetsSeq* received_data, struct DDS_SampleInfoSeq* info_seq,  
    DDS_Long max_samples,                                                    
    const DDS_InstanceHandle_t* a_handle,                                
    DDS_SampleStateMask sample_states, DDS_ViewStateMask view_states,    
    DDS_InstanceStateMask instance_states);                              

/*ce \dref_KeyedOctetsDataReader_read_instance_w_condition
 */
DDSCDllExport                                          
DDS_ReturnCode_t DDS_KeyedOctetsDataReader_read_instance_w_condition(         
    DDS_KeyedOctetsDataReader* self,                                                   
    struct DDS_KeyedOctetsSeq* received_data, struct DDS_SampleInfoSeq* info_seq,  
    DDS_Long max_samples,                                                    
    const DDS_InstanceHandle_t* a_handle,                         
    DDS_ReadCondition* condition);                                       

/*ce \dref_KeyedOctetsDataReader_take_instance_w_condition
 */
DDSCDllExport                                          
DDS_ReturnCode_t DDS_KeyedOctetsDataReader_take_instance_w_condition(         
    DDS_KeyedOctetsDataReader* self,                                                   
    struct DDS_KeyedOctetsSeq* received_data, struct DDS_SampleInfoSeq* info_seq,  
    DDS_Long max_samples,                                                    
    const DDS_InstanceHandle_t* a_handle,                         
    DDS_ReadCondition* condition);                                       

/*ce \dref_KeyedOctetsDataReader_read_next_instance
 */
DDSCDllExport                                          
DDS_ReturnCode_t DDS_KeyedOctetsDataReader_read_next_instance(                     
   DDS_KeyedOctetsDataReader* self,                                                   
   struct DDS_KeyedOctetsSeq* received_data, struct DDS_SampleInfoSeq* info_seq,  
   DDS_Long max_samples,                                                    
   const DDS_InstanceHandle_t* previous_handle,                         
   DDS_SampleStateMask sample_states, DDS_ViewStateMask view_states,    
   DDS_InstanceStateMask instance_states);                              

/*ce \dref_KeyedOctetsDataReader_take_next_instance
 */
DDSCDllExport                                          
DDS_ReturnCode_t DDS_KeyedOctetsDataReader_take_next_instance(                     
   DDS_KeyedOctetsDataReader* self,                                                   
   struct DDS_KeyedOctetsSeq* received_data, struct DDS_SampleInfoSeq* info_seq,  
   DDS_Long max_samples,                                                    
   const DDS_InstanceHandle_t* previous_handle,                         
   DDS_SampleStateMask sample_states, DDS_ViewStateMask view_states,    
   DDS_InstanceStateMask instance_states);                              

/*ce \dref_KeyedOctetsDataReader_read_next_instance_w_condition
 */
DDSCDllExport                                          
DDS_ReturnCode_t DDS_KeyedOctetsDataReader_read_next_instance_w_condition(         
    DDS_KeyedOctetsDataReader* self,                                                   
    struct DDS_KeyedOctetsSeq* received_data, struct DDS_SampleInfoSeq* info_seq,  
    DDS_Long max_samples,                                                    
    const DDS_InstanceHandle_t* previous_handle,                         
    DDS_ReadCondition* condition);                                       

/*ce \dref_KeyedOctetsDataReader_take_next_instance_w_condition
 */
DDSCDllExport                                          
DDS_ReturnCode_t DDS_KeyedOctetsDataReader_take_next_instance_w_condition(         
    DDS_KeyedOctetsDataReader* self,                                                   
    struct DDS_KeyedOctetsSeq* received_data, struct DDS_SampleInfoSeq* info_seq,  
    DDS_Long max_samples,                                                    
    const DDS_InstanceHandle_t* previous_handle,                         
    DDS_ReadCondition* condition);                                       

/*ce \dref_KeyedOctetsDataReader_return_loan
 */
DDSCDllExport                                          
DDS_ReturnCode_t DDS_KeyedOctetsDataReader_return_loan(                            
    DDS_KeyedOctetsDataReader* self,                                                   
    struct DDS_KeyedOctetsSeq* received_data, struct DDS_SampleInfoSeq* info_seq); 

/*ce \dref_KeyedOctetsDataReader_get_key_value
 */
DDSCDllExport                                          
DDS_ReturnCode_t DDS_KeyedOctetsDataReader_get_key_value(                          
    DDS_KeyedOctetsDataReader* self, DDS_KeyedOctets* key_holder,
    const DDS_InstanceHandle_t* handle);                                

/* Extension */
/*ce \dref_KeyedOctetsDataReader_get_key_value_w_key
*/
DDSCDllExport
DDS_ReturnCode_t DDS_KeyedOctetsDataReader_get_key_value_w_key(
    DDS_KeyedOctetsDataReader* self,
    char * key,
    const DDS_InstanceHandle_t* handle);

/*ce \dref_KeyedOctetsDataReader_lookup_instance
 */
DDSCDllExport                                          
DDS_InstanceHandle_t DDS_KeyedOctetsDataReader_lookup_instance(                    
    DDS_KeyedOctetsDataReader* self, const DDS_KeyedOctets* key_holder);

/*ce \dref_KeyedOctetsDataReader_lookup_instance_w_key
*/
DDSCDllExport
DDS_InstanceHandle_t DDS_KeyedOctetsDataReader_lookup_instance_w_key(
    DDS_KeyedOctetsDataReader* self,
    const char * key);



#if (defined(RTI_WIN32) || defined (RTI_WINCE)) && defined(NDDS_USER_DLL_EXPORT)
  /* If the code is building on Windows, stop exporting symbols.
   */
  #undef DDSCDllExport
  #define DDSCDllExport
#endif



#if defined(RTI_WIN32) || defined(RTI_WINCE)
  /* restore extern "C"-related warning */
  #pragma warning(pop)
#elif defined(RTI_DARWIN)
  #pragma clang diagnostic pop
#endif


#ifdef __cplusplus
    }	/* extern "C" */
#endif

#endif /* dds_c_builtintypes_h */

/* (c) Copyright 2003-2015, Real-Time Innovations, Inc. All rights reserved. */
/*
 * @(#)pres_locatorPing.h    generated by: makeheader    Fri Feb 16 13:51:43 2018
 *
 *		built from:	locatorPing.ifc
 */

#ifndef pres_locatorPing_h
#define pres_locatorPing_h


 #ifndef pres_dll_h
    #include "pres/pres_dll.h"
 #endif
 #ifndef osapi_type_h
    #include "osapi/osapi_type.h"
 #endif
 #ifndef osapi_ntptime_h
    #include "osapi/osapi_ntptime.h"
 #endif
 #ifndef reda_fastBuffer_h
    #include "reda/reda_fastBuffer.h"
 #endif
 #ifndef cdr_stream_h
    #include "cdr/cdr_stream.h"
 #endif
 #ifndef pres_common_h
    #include "pres/pres_common.h"
 #endif
 #ifndef cdr_typeCode_h
    #include "cdr/cdr_typeCode.h"
 #endif
 #ifndef pres_typePlugin_h
    #include "pres/pres_typePlugin.h"
 #endif
 #ifndef pres_psService_h
    #include "pres/pres_psService.h"
 #endif

#ifdef __cplusplus
    extern "C" {
#endif

struct PRESLocatorPingChannel;


struct PRESLocatorPingChannelProperty {
    /*e service ID of service used by locator ping */
    PRESServiceId serviceId;
    /*e period for the periodic announcements we send to remote participants's
     * locators */
    struct RTINtpTime locatorReachabilityAssertPeriod;
    /*e period for the periodic check of the local locator's reachability from
     * remote participants */
    struct RTINtpTime locatorReachabilityChangeDetectionPeriod;
    
    /*e priority of reachability traffic on transport */
    struct PRESTransportPriorityQosPolicy transportPriority;

    /*e enabled transports */
    struct RTINetioAliasList transportAliasList;
};



#define PRES_LOCATOR_PING_CHANNEL_ASSERT_REACHABILITY_SEC_DEFAULT 20
#define PRES_LOCATOR_PING_CHANNEL_ASSERT_REACHABILITY_NSEC_DEFAULT 0
#define PRES_LOCATOR_PING_CHANNEL_ASSERT_REACHABILITY_PERIOD_DEFAULT \
    {PRES_LOCATOR_PING_CHANNEL_ASSERT_REACHABILITY_SEC_DEFAULT, \
     PRES_LOCATOR_PING_CHANNEL_ASSERT_REACHABILITY_NSEC_DEFAULT}

#define PRES_LOCATOR_PING_CHANNEL_CHANGE_DETECTION_SEC_DEFAULT 60
#define PRES_LOCATOR_PING_CHANNEL_CHANGE_DETECTION_NSEC_DEFAULT 0
#define PRES_LOCATOR_PING_CHANNEL_CHANGE_DETECTION_PERIOD_DEFAULT \
    {PRES_LOCATOR_PING_CHANNEL_CHANGE_DETECTION_SEC_DEFAULT, \
    PRES_LOCATOR_PING_CHANNEL_CHANGE_DETECTION_NSEC_DEFAULT \
    }


#define PRES_LOCATOR_PING_CHANNEL_PROPERTY_DEFAULT { \
        PRES_SERVICE_ID_UNKNOWN, /* service Id */ \
        PRES_LOCATOR_PING_CHANNEL_ASSERT_REACHABILITY_PERIOD_DEFAULT, /* locatorReachabilityAssertPeriod */ \
        PRES_LOCATOR_PING_CHANNEL_CHANGE_DETECTION_PERIOD_DEFAULT,  /* locatorReachabilityChangeDetectionPeriod */ \
        {NDDS_TRANSPORT_PRIORITY_DEFAULT},/* transportPriority */   \
        RTI_NETIO_ALIAS_LIST_DEFAULT /* transportAliasList */       \
}

extern PRESDllExport
RTIBool
PRESLocatorPingChannel_shutdown(
    struct PRESLocatorPingChannel *me,
    struct REDAWorker *worker);

extern PRESDllExport
void
PRESLocatorPingChannel_delete(
    struct PRESLocatorPingChannel *me,
    struct REDAWorker *worker);

extern PRESDllExport
RTIBool
PRESLocatorPingChannel_enable(
    struct PRESLocatorPingChannel *me,
    struct REDAWorker *worker);

extern PRESDllExport
struct PRESLocatorPingChannel *
PRESLocatorPingChannel_new(
    struct PRESParticipant *participant,
    struct COMMENDFacade *facade,
    struct REDAExclusiveArea* readerGroupEA,
    struct REDAExclusiveArea* writerGroupEA,
    struct PRESLocatorPingChannelProperty *property,
    struct REDAWorker *worker);


#define PRES_LOCATOR_PING_MESSAGE_TYPENAME "PRESLocatorPingMessage"
#define PRES_LOCATOR_PING_MESSAGE_TOPIC "PRESLocatorPingMessageTopic"
/* Object ID is in the entity kind vendor-builtin range (10) */
#define PRES_LOCATOR_PING_MESSAGE_WRITER_OBJECT_ID \
        MIG_RTPS_OBJECT_ID_LOCATOR_PING_MESSAGE_WRITER
/* Object ID is in the entity kind vendor-builtin range (10) */
#define PRES_LOCATOR_PING_MESSAGE_READER_OBJECT_ID \
        MIG_RTPS_OBJECT_ID_LOCATOR_PING_MESSAGE_READER


struct PRESLocatorReachabilityData {
    /*e guid for the participant sending the sample */
    struct MIGRtpsGuid source_participant_guid;
    /*e list of locators where the participant sending the sample has received
     *  locator ping announcements */
    struct REDAInlineList locator_list;
};

extern PRESDllExport 
RTIBool
PRESLocatorPingChannel_suspendPingI(
        struct PRESLocatorPingChannel *me);

extern PRESDllExport
RTIBool
PRESLocatorPingChannel_resumePingI(
        struct PRESLocatorPingChannel *me);


#ifdef __cplusplus
    }	/* extern "C" */
#endif

#endif /* pres_locatorPing_h */

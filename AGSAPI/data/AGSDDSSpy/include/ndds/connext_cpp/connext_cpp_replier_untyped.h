/* (c) Copyright 2003-2015, Real-Time Innovations, Inc. All rights reserved. */
/*
 * @(#)connext_cpp_replier_untyped.h    generated by: makeheader    Fri Feb 16 13:52:56 2018
 *
 *		built from:	replier_untyped.ifcxx
 */

#ifndef connext_cpp_replier_untyped_h
#define connext_cpp_replier_untyped_h



#include "ndds/ndds_namespace_cpp.h"

#include "connext_cpp/connext_cpp_dll.h"
#include "connext_cpp/connext_cpp_infrastructure.h"
#include "connext_cpp/connext_cpp_untyped_common.h"
#include "connext_cpp/connext_cpp_replier_params.h"

namespace connext {
namespace details {

// --- ReplierUntypedImpl: --------------------------------------------------

class XMQCPPDllExport ReplierUntypedImpl : public EntityUntypedImpl {
public: 
    virtual ~ReplierUntypedImpl();

protected:

    ReplierUntypedImpl();

    void initialize(
        const EntityParams& params,
        RegisterTypeFunc register_request_type_fnc,
        RegisterTypeFunc register_reply_type_fnc,
        int request_size,
        DataReaderListener * reader_listener,
        bool isStringDataReader);

    static void configure_params_for_reply(
                    WriteParams_t& params, 
                    const SampleIdentity_t& related_request_id);

    void send_sample(const void * data, 
                     const SampleIdentity_t& related_request_id,
                     WriteParams_t & writeParams);


private:
    class ReplierTopicBuilder : public EntityUntypedImpl::TopicBuilder {
    public:

        ReplierTopicBuilder(ReplierUntypedImpl * replier)
            : _replier(replier)
        {
        }

        virtual Topic * create_writer_topic(
            const EntityParams& params,
            const char * writer_type_name);
    
        virtual TopicDescription * create_reader_topic(
            const EntityParams& params,
            const char * reader_type_name);

    private:
        ReplierUntypedImpl * _replier;
        friend class ReplierUntypedImpl;
    };
};


} // namespace details
} // namespace connext


#endif /* connext_cpp_replier_untyped_h */

/* (c) Copyright 2003-2015, Real-Time Innovations, Inc. All rights reserved. */
/*
 * @(#)connext_c_replier.h    generated by: makeheader    Fri Feb 16 13:52:54 2018
 *
 *		built from:	replier.ifc
 */

#ifndef connext_c_replier_h
#define connext_c_replier_h



#ifndef ndds_c_h
  #include "ndds/ndds_c.h"
#endif

#ifndef connext_cpp_dll_h
  #include "connext_c/connext_c_dll.h"
#endif
#ifndef connext_c_entity_params_h
  #include "connext_c/connext_c_entity_params.h"
#endif  

#define NDDSUSERDllExport

struct RTI_Connext_EntityUntypedImpl;

typedef struct RTI_Connext_EntityUntypedImpl RTI_Connext_ReplierUntypedImpl;

struct RTI_Connext_Replier;

typedef struct RTI_Connext_Replier RTI_Connext_Replier;

struct RTI_Connext_ReplierListener;

typedef struct RTI_Connext_ReplierListener RTI_Connext_ReplierListener;

typedef void (*RTI_Connext_ReplierListener_OnRequestAvailableCallback)(
    struct RTI_Connext_ReplierListener *self, RTI_Connext_Replier *replier);

struct RTI_Connext_ReplierListener {

    /**
     * \dref_ReplierListener_on_request_available
     */
    RTI_Connext_ReplierListener_OnRequestAvailableCallback on_request_available;

    /**
     * @brief User data attached to a listener
     */
    void * user_data;
};


#define RTI_Connext_ReplierListener_INITIALIZER {NULL, NULL}

struct RTI_Connext_SimpleReplierListener;

typedef struct RTI_Connext_SimpleReplierListener RTI_Connext_SimpleReplierListener;


typedef void* (*RTI_Connext_SimpleReplierListener_OnRequestAvailableCallback)(
    RTI_Connext_SimpleReplierListener *self, const void * request,
    const struct DDS_SampleInfo * info);

typedef void (*RTI_Connext_SimpleReplierListener_OnReturnLoanCallback)(
    RTI_Connext_SimpleReplierListener *self, void* reply);

struct RTI_Connext_SimpleReplierListener {

    /**
     * \dref_SimpleReplierListener_on_request_available
     */
    RTI_Connext_SimpleReplierListener_OnRequestAvailableCallback on_request_available;

    /**
     * \dref_SimpleReplierListener_return_loan
     */
    RTI_Connext_SimpleReplierListener_OnReturnLoanCallback return_loan;

    /**
     * @brief User data attached to a listener
     */
    void * user_data;
};

struct RTI_Connext_Replier {
    RTI_Connext_ReplierUntypedImpl * _impl;
    struct RTI_Connext_ReplierListener listener;
    struct RTI_Connext_SimpleReplierListener simpleListener;
};

typedef struct RTI_Connext_ReplierParams {

    /**
     * \dref_ReplierParams_participant
     */
    DDS_DomainParticipant * participant;

    /**
     * \dref_ReplierParams_service_name
     */
    char* service_name;

    /**
     * \dref_ReplierParams_request_topic_name
     */
    char* request_topic_name;

    /**
     * \dref_ReplierParams_reply_topic_name
     */
    char* reply_topic_name;

    /**
     * \dref_ReplierParams_qos_library_name
     */
    char* qos_library_name;

    /**
     * \dref_ReplierParams_qos_profile
     */
    char* qos_profile_name;

    /**
     * \dref_ReplierParams_datawriter_qos
     */
    const struct DDS_DataWriterQos * datawriter_qos;

    /**
     * \dref_ReplierParams_datareader_qos
     */
    const struct DDS_DataReaderQos * datareader_qos;

    /**
     * \dref_ReplierParams_publisher
     */
    DDS_Publisher * publisher;

    /**
     * \dref_ReplierParams_subscriber
     */
    DDS_Subscriber * subscriber;

    /**
     * \dref_ReplierParams_listener
     */
    struct RTI_Connext_ReplierListener* listener;
} RTI_Connext_ReplierParams;


#define RTI_Connext_ReplierParams_INITIALIZER { \
    NULL, \
    NULL, \
    NULL, \
    NULL, \
    NULL, \
    NULL, \
    NULL, \
    NULL, \
    NULL, \
    NULL, \
    NULL  \
}

extern XMQCDllExport
DDS_ReturnCode_t RTI_Connext_Replier_delete(RTI_Connext_Replier * self);

extern XMQCDllExport
DDS_ReturnCode_t RTI_Connext_Replier_wait_for_requests(
    RTI_Connext_Replier* self,
    int min_count,
    const struct DDS_Duration_t* max_wait);


#define RTI_CONNEXT_REPLIER_DECL(TReq, TRep, TReplier)                        \
                                                                              \
    typedef struct TReplier {                                                 \
        RTI_Connext_Replier parent;                                           \
    } TReplier;                                                               \
                                                                              \
    NDDSUSERDllExport XMQCDllExport                                           \
    TReplier* TReplier ## _create(                                            \
        DDS_DomainParticipant * participant, char* service_name);             \
                                                                              \
    NDDSUSERDllExport XMQCDllExport                                           \
    TReplier* TReplier ## _create_w_params(                                   \
        const RTI_Connext_ReplierParams*  params);                            \
                                                                              \
    NDDSUSERDllExport XMQCDllExport                                           \
    DDS_ReturnCode_t TReplier ## _take_request(                               \
        TReplier* self, TReq* request,                                        \
        struct DDS_SampleInfo* sample_info);                                  \
                                                                              \
    NDDSUSERDllExport XMQCDllExport                                           \
    DDS_ReturnCode_t TReplier ## _take_requests(                              \
        TReplier* self,                                                       \
        struct TReq ##  Seq* request_seq, struct DDS_SampleInfoSeq* info_seq, \
        DDS_Long max_request_count);                                          \
                                                                              \
    NDDSUSERDllExport XMQCDllExport                                           \
    DDS_ReturnCode_t TReplier ## _read_request(                               \
        TReplier* self, TReq* request,                                        \
        struct DDS_SampleInfo* sample_info);                                  \
                                                                              \
    NDDSUSERDllExport XMQCDllExport                                           \
    DDS_ReturnCode_t TReplier ## _read_requests(                              \
        TReplier* self,                                                       \
        struct TReq ##  Seq* request_seq, struct DDS_SampleInfoSeq* info_seq, \
        DDS_Long max_request_count);                                          \
                                                                              \
    NDDSUSERDllExport XMQCDllExport DDS_ReturnCode_t                          \
    TReplier ## _receive_request(                                             \
        TReplier* self, TReq * request,                                       \
        struct DDS_SampleInfo * sample_info,                                  \
        const struct DDS_Duration_t * max_wait);                              \
                                                                              \
    NDDSUSERDllExport XMQCDllExport                                           \
    DDS_ReturnCode_t TReplier ## _receive_requests(                           \
        TReplier * self,                                                      \
        struct TReq ## Seq * received_data,                                   \
        struct DDS_SampleInfoSeq * info_seq,                                  \
        DDS_Long min_reply_count, DDS_Long max_reply_count,                   \
        const struct DDS_Duration_t * max_wait);                              \
                                                                              \
    NDDSUSERDllExport XMQCDllExport                                           \
    DDS_ReturnCode_t TReplier ## _send_reply(                                 \
        TReplier* self, TRep* reply,                                          \
        const struct DDS_SampleIdentity_t* related_request_info);             \
                                                                              \
    NDDSUSERDllExport XMQCDllExport                                           \
    TReq ## DataReader* TReplier ## _get_request_datareader(                  \
        TReplier* self);                                                      \
                                                                              \
    NDDSUSERDllExport XMQCDllExport                                           \
    TRep ##  DataWriter* TReplier ## _get_reply_datawriter(                   \
        TReplier* self);                                                      \
                                                                              \
    NDDSUSERDllExport XMQCDllExport                                           \
    DDS_ReturnCode_t TReplier ## _return_loan(                                \
        TReplier* self, struct TReq ## Seq *received_data,                    \
        struct DDS_SampleInfoSeq *info_seq);                                  \


#endif /* connext_c_replier_h */

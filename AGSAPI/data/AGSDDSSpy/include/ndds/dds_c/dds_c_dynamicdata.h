/* (c) Copyright 2003-2015, Real-Time Innovations, Inc. All rights reserved. */
/*
 * @(#)dds_c_dynamicdata.h    generated by: makeheader    Fri Feb 16 13:51:59 2018
 *
 *		built from:	dynamicdata.ifc
 */

#ifndef dds_c_dynamicdata_h
#define dds_c_dynamicdata_h



  #ifndef dds_c_infrastructure_h
    #include "dds_c/dds_c_infrastructure.h"
  #endif
  #ifndef dds_c_typecode_h
    #include "dds_c/dds_c_typecode.h"
  #endif
  #ifndef dds_c_data_h
    #include "dds_c/dds_c_data.h"
  #endif
  #ifndef dds_c_dll_h
    #include "dds_c/dds_c_dll.h"
  #endif

#ifdef __cplusplus
    extern "C" {
#endif

extern DDSCDllExport void DDS_DynamicData_enable_exp_impl();

typedef enum {
    /*e \dref_DynamicDataEncapsulationKind_CDR_BE
     */
    DDS_DYNAMIC_DATA_CDR_BE_ENCAPSULATION_KIND = 0,

    /*e \dref_DynamicDataEncapsulationKind_CDR_LE
     */
    DDS_DYNAMIC_DATA_CDR_LE_ENCAPSULATION_KIND = 1,

    /*i \dref_DynamicDataEncapsulationKind_PL_CDR_BE
     */
    DDS_DYNAMIC_DATA_PL_CDR_BE_ENCAPSULATION_KIND = 2,

    /*i \dref_DynamicDataEncapsulationKind_PL_CDR_LE
     */
    DDS_DYNAMIC_DATA_PL_CDR_LE_ENCAPSULATION_KIND = 3,

    /*i \dref_DynamicDataEncapsulationKind_DEFAULT
     */
    DDS_DYNAMIC_DATA_ENCAPSULATION_KIND_DEFAULT = 0x7FFFFFFF

} DDS_DynamicDataEncapsulationKind;

typedef enum {
    /*i \dref_DDS_DynamicDataStringEncodingKind_UNKNOWN
     */
    DDS_DYNAMIC_DATA_STRING_ENCODING_UNKNOWN_KIND = 0,

    /*i \dref_DDS_DynamicDataStringEncodingKind_UTF_8
     */
    DDS_DYNAMIC_DATA_STRING_ENCODING_UTF_8_KIND = 1,

    /*i \dref_DDS_DynamicDataStringEncodingKind_ISO_8859_1
     */
    DDS_DYNAMIC_DATA_STRING_ENCODING_ISO_8859_1_KIND = 2

} DDS_DynamicDataStringEncodingKind;


#define DDS_DynamicDataProperty_t_INITIALIZER \
  { 0L, PRES_LENGTH_UNLIMITED, 1024L, DDS_BOOLEAN_TRUE, \
    DDS_DYNAMIC_DATA_STRING_ENCODING_UTF_8_KIND }


struct DDS_DynamicDataProperty_t {
    /*e \dref_DynamicDataProperty_t_buffer_initial_size
     */
    DDS_Long buffer_initial_size;
    /*e \dref_DynamicDataProperty_t_buffer_max_size
     */
    DDS_Long buffer_max_size;
    /*i \dref_DynamicDataProperty_t_buffer_max_size_increment
     */
    DDS_Long buffer_max_size_increment;
    /*i \dref_DynamicDataProperty_t_buffer_check_size
     */
    DDS_Boolean buffer_check_size;
    /*i \dref_DDS_DynamicDataProperty_t_string_character_encoding
     */
    DDS_DynamicDataStringEncodingKind string_character_encoding;

  #ifdef RTI_CPP
    /*e 
     */
    DDS_DynamicDataProperty_t() : 
        buffer_initial_size(0L),
        buffer_max_size(DDS_LENGTH_UNLIMITED),
        buffer_max_size_increment(1024L),
        buffer_check_size(DDS_BOOLEAN_TRUE),
        string_character_encoding(DDS_DYNAMIC_DATA_STRING_ENCODING_UTF_8_KIND)
    {
        /* empty */
    }
  #endif
};


#define DDS_DynamicDataTypeSerializationProperty_t_INITIALIZER \
  { DDS_BOOLEAN_FALSE, 0xffffffff, 0xffffffff, DDS_BOOLEAN_FALSE, DDS_BOOLEAN_FALSE}


struct DDS_DynamicDataTypeSerializationProperty_t {
    /*e \dref_DynamicDataTypeSerializationProperty_t_use_42e_compatible_alignment
     */
    DDS_Boolean use_42e_compatible_alignment;

    /*e \dref_DynamicDataTypeSerializationProperty_t_max_size_serialized
     */
    DDS_UnsignedLong max_size_serialized;

    /*e \dref_DynamicDataTypeSerializationProperty_t_min_size_serialized
     */
    DDS_UnsignedLong min_size_serialized;

    /*e \dref_DynamicDataTypeSerializationProperty_t_trim_to_size
     */
    DDS_Boolean trim_to_size;
    
    /*i \dref_DynamicDataTypeSerializationProperty_t_enable_fast_deserialization
     */
    DDS_Boolean enable_fast_deserialization;

  #ifdef RTI_CPP
    /*e 
     */
    DDS_DynamicDataTypeSerializationProperty_t() : 
        use_42e_compatible_alignment(DDS_BOOLEAN_FALSE),
        max_size_serialized(0xffffffff),
        min_size_serialized(0xffffffff),
        trim_to_size(DDS_BOOLEAN_FALSE),
        enable_fast_deserialization(DDS_BOOLEAN_FALSE)
    {
        /* empty */
    }
  #endif
};

 extern DDSCDllVariable const struct DDS_DynamicDataProperty_t
DDS_DYNAMIC_DATA_PROPERTY_DEFAULT;


#ifdef RTI_CPP
#define DDS_DYNAMICDATA_DLL_EXPORT DDSCPPDllExport
#else
#define DDS_DYNAMICDATA_DLL_EXPORT DDSCDllExport
#endif /* RTI_CPP */

  #ifndef dds_c_dynamicdata_impl_h
    #include "dds_c/dds_c_dynamicdata_impl.h"
  #endif


typedef DDS_Long DDS_DynamicDataMemberId;


struct DDS_DynamicDataInfo {
    /*e \dref_DynamicDataInfo_member_count
     */
    DDS_Long member_count;

    /*e \dref_DynamicDataInfo_stored_size
     */
    DDS_Long stored_size;

    /*i \dref_DynamicDataInfo_encapsulation_kind
     */
    DDS_DynamicDataEncapsulationKind encapsulation_kind;

    /*i \dref_DynamicDataInfo_is_optimized_storage
     */
    DDS_Boolean is_optimized_storage;
};


struct DDS_DynamicDataMemberInfo {
    /*e \dref_DynamicDataMemberInfo_member_id
     */
    DDS_DynamicDataMemberId member_id;

    /*e \dref_DynamicDataMemberInfo_member_name
     */
    const char *member_name;

    /*e \dref_DynamicDataMemberInfo_member_exists
     */
    DDS_Boolean member_exists; /* in data sample */

    /*e \dref_DynamicDataMemberInfo_member_kind
     */
    DDS_TCKind member_kind;

    /*i \dref_DynamicDataMemberInfo_representation_count
     */
    DDS_UnsignedLong representation_count; /* For sparse can be >1 */

    /*e \dref_DynamicDataMemberInfo_element_count
     */
    DDS_UnsignedLong element_count;       /* For array and sequence */

    /*e \dref_DynamicDataMemberInfo_element_kind
     */
    DDS_TCKind element_kind; /* For array and sequence */
};


#ifdef RTI_CPP
struct DDS_DynamicDataSeq;
class DDSDynamicDataReader;
class DDSDynamicDataWriter;
class DDSDynamicDataTypeSupport;
#endif

struct DDS_DynamicDataOptionalMemberTree;

struct DDS_DynamicDataOptionalMemberNode;

struct DDS_DynamicDataCache {
    DDS_Long member_count; /* init to -1 if need to count */
    DDS_Long last_offset;

    DDS_UnsignedLong cache_length, max_cache_length;
    DDS_Long * position_cache;
    DDS_UnsignedShort * tcindex_cache;
};

typedef enum {
    /*i \dref_DynamicDataStorageKind_INVALID (for unused sections)
     */
    DDS_DYNAMIC_DATA_INVALID_STORAGE_KIND = 0,

    /*i \dref_DynamicDataStorageKind_SPARSE
     */
    DDS_DYNAMIC_DATA_SPARSE_STORAGE_KIND = 1,

    /*i \dref_DynamicDataStorageKind_COMPACT
     */
    DDS_DYNAMIC_DATA_COMPACT_STORAGE_KIND = 2

} DDS_DynamicDataStorageKind;

struct DDS_DynamicDataFormatSection {
    DDS_DynamicDataStorageKind storage_kind;
    DDS_UnsignedLong end_position; /* i.e. cumulative size */
    DDS_Long first_member, last_member;
};


  #define DDS_DYNAMIC_DATA_FORMAT_MAX_SECTION_COUNT     2

struct DDS_DynamicDataBufferFormat {
    DDS_DynamicDataEncapsulationKind encapsulation_kind;
    DDS_Long section_count;
    struct DDS_DynamicDataFormatSection section[DDS_DYNAMIC_DATA_FORMAT_MAX_SECTION_COUNT];
};

struct DDS_DynamicDataBuffer {
    char *_buffer;
    DDS_UnsignedLong _size;
    DDS_Long _initial_alignment;
    DDS_Boolean _owned_buffer;
    
    DDS_Boolean parametrizedBuffer;

    struct DDS_DynamicDataBufferFormat _format;
    struct DDS_DynamicDataProperty_t _props;
    struct DDS_DynamicDataTypeSerializationProperty_t _serProps;

    /* The largest member_id that has value that is set in the DynamicData
       buffer, regardless of whether it is in the sparse section or the compact
       section of the buffer */
    DDS_Long _last_set_member_id;
};


struct DDS_DYNAMICDATA_DLL_EXPORT DDS_DynamicData {
    DDS_TypeCode *_type;
    DDS_Boolean _owned_type, _bound_member;
    DDS_Long _bound_member_id;
    struct DDS_DynamicData *_parent; /* if bound to member */

    struct DDS_DynamicDataBuffer _buffer;
    struct DDS_DynamicDataCache _cache; /* mutable */
    DDS_Long _collectionStartIndex;

    /* to support optional members in dynamic data */
    struct DDS_DynamicDataOptionalMemberTree *_optionalMemberTree;
    struct DDS_DynamicDataOptionalMemberNode *_currentParentNode;

    #ifdef RTI_CPP
private:
    DDS_DynamicData(const DDS_DynamicData &);
    
public:

    typedef DDS_DynamicDataSeq Seq;
    typedef DDSDynamicDataReader DataReader;
    typedef DDSDynamicDataWriter DataWriter;
    typedef DDSDynamicDataTypeSupport TypeSupport;


    /*e \dref_DynamicData_new
     */
    DDS_DynamicData(
        const DDS_TypeCode * type,
        const DDS_DynamicDataProperty_t & property);

    /*e \dref_DynamicData_is_valid
     */
    DDS_Boolean is_valid() const;

    /*e \dref_DynamicData_copy
     */
    DDS_ReturnCode_t copy(const DDS_DynamicData & src);

    /*e \dref_DynamicData_equal
     */
    DDS_Boolean equal(const DDS_DynamicData & other) const;


    /*e \dref_DynamicData_operatorEqual
     */
    DDS_DynamicData & operator = (const DDS_DynamicData & src);

    /*e \dref_DynamicData_operatorEqualEqual
     */
    DDS_Boolean operator == (const DDS_DynamicData & other) const;

    /*e \dref_DynamicData_clear_all_members
     */
    DDS_ReturnCode_t clear_all_members();

    /*i \dref_DynamicData_clear_nonkey_members
     */
    DDS_ReturnCode_t clear_nonkey_members();

    /*e \dref_DynamicData_clear_optional_member
     */
    DDS_ReturnCode_t clear_optional_member(
        const char * member_name,
        DDS_DynamicDataMemberId member_id);

    /*i \dref_DynamicData_clear_member
     */
    DDS_ReturnCode_t clear_member(
        const char * member_name,
        DDS_DynamicDataMemberId member_id);


    /*i \dref_DynamicData_compact
     */
    DDS_ReturnCode_t compact();


    /*e \dref_DynamicData_set_buffer
     */
    DDS_ReturnCode_t set_buffer(DDS_Octet * storage, DDS_Long size);
    
    /*e \dref_DynamicData_get_estimated_max_buffer_size
     */
    DDS_ReturnCode_t get_estimated_max_buffer_size(DDS_Long & size) const;

    /*i \dref_DynamicData_ensure_buffer_size
     */
    DDS_ReturnCode_t ensure_buffer_size(DDS_Long required_size);

    /*e \dref_DynamicData_from_cdr_buffer
     */    
    DDS_ReturnCode_t from_cdr_buffer(
            const char * buffer, unsigned int length);

    /*e \dref_DynamicData_to_cdr_buffer
     */    
    DDS_ReturnCode_t to_cdr_buffer(
            char * buffer, unsigned int & length);

    /*e \dref_DynamicData_to_string
     */    
    DDS_ReturnCode_t to_string(
            char *str,
            DDS_UnsignedLong& str_size, 
            const DDS_PrintFormatProperty& property);

    /****** Conversions, info ******/

    /*e \dref_DynamicData_print
     */
    DDS_ReturnCode_t print(FILE *fp, int indent) const;

    /*i \dref_DynamicData_to_stream
     */
    DDS_ReturnCode_t to_stream(RTICdrStream & stream) const;

    /*i \dref_DynamicData_from_stream
     */
    DDS_ReturnCode_t from_stream(RTICdrStream & stream);

    /*i \dref_DynamicData_get_serialized_size
     */
    DDS_Long get_serialized_size(DDS_DynamicDataEncapsulationKind encapsulation_kind) const;

    /*e \dref_DynamicData_get_info
     */
    void get_info(DDS_DynamicDataInfo & info_out) const;

    /*i \dref_DynamicData_to_key_stream
     */
    DDS_ReturnCode_t to_key_stream(RTICdrStream & stream) const;

    /*i \dref_DynamicData_from_key_stream
     */
    DDS_ReturnCode_t from_key_streamI(RTICdrStream & stream);

    /*i \dref_DynamicData_get_hashcode
     */
    DDS_Long get_hashcodeI() const;

    /****** Type-binding operations ******/

    /*e \dref_DynamicData_bind_type
     */
    DDS_ReturnCode_t bind_type(const DDS_TypeCode *type);

    /*e \dref_DynamicData_unbind_type
     */
    DDS_ReturnCode_t unbind_type();


    /*e \dref_DynamicData_bind_complex_member
     */
    DDS_ReturnCode_t bind_complex_member(
        DDS_DynamicData & value_out, /* inout */
        const char * member_name,
        DDS_DynamicDataMemberId member_id);

    /*e \dref_DynamicData_unbind_complex_member
     */
    DDS_ReturnCode_t unbind_complex_member(
        DDS_DynamicData & value);

    /****** Data type queries ******/

    /*e \dref_DynamicData_get_type
     */
    const DDS_TypeCode * get_type() const;

    /*e \dref_DynamicData_get_type_kind
     */
    DDS_TCKind get_type_kind() const;

    /*e \dref_DynamicData_get_member_count
     */
    DDS_UnsignedLong get_member_count() const;

    /*e \dref_DynamicData_member_exists
     */
    DDS_Boolean member_exists(
        const char * member_name,
        DDS_DynamicDataMemberId member_id) const;

    /*e \dref_DynamicData_member_exists_in_type
     */
    DDS_Boolean member_exists_in_type(
        const char * member_name,
        DDS_DynamicDataMemberId member_id) const;


    /*e \dref_DynamicData_get_member_info
     */
    DDS_ReturnCode_t get_member_info(
        DDS_DynamicDataMemberInfo & info, /*out*/
        const char * member_name,
        DDS_DynamicDataMemberId member_id) const;

    /*i \dref_DynamicData_get_member_representation_count
     */
    DDS_UnsignedLong get_member_representation_count(const char * member_name) const;

    /*i \dref_DynamicData_get_member_representation_info
     */
    DDS_ReturnCode_t get_member_representation_info(
        DDS_DynamicDataMemberInfo & info, /*out*/
        const char * member_name,
        DDS_UnsignedLong representation_index) const;

    /*e \dref_DynamicData_get_member_info_by_index
     */
    DDS_ReturnCode_t get_member_info_by_index(
        struct DDS_DynamicDataMemberInfo & info, /*out*/
        DDS_UnsignedLong index) const;

    /*e \dref_DynamicData_get_member_type
     */
    DDS_ReturnCode_t get_member_type(
        const DDS_TypeCode *& type_out,
        const char * member_name,
        DDS_DynamicDataMemberId member_id) const;

    /*e \dref_DynamicData_is_member_key
     */
    DDS_ReturnCode_t is_member_key(
        DDS_Boolean & is_key_out,
        const char * member_name,
        DDS_DynamicDataMemberId member_id) const;

    /****** Data access: get ******/

    /*e \dref_DynamicData_get_long
     */
    DDS_ReturnCode_t get_long(
        DDS_Long & value_out,
        const char * member_name,
        DDS_DynamicDataMemberId member_id) const;

    /*e \dref_DynamicData_get_short
     */
    DDS_ReturnCode_t get_short(
        DDS_Short & value_out,
        const char * member_name,
        DDS_DynamicDataMemberId member_id) const;

    /*e \dref_DynamicData_get_ulong
     */
    DDS_ReturnCode_t get_ulong(
        DDS_UnsignedLong & value_out,
        const char * member_name,
        DDS_DynamicDataMemberId member_id) const;

    /*e \dref_DynamicData_get_ushort
     */
    DDS_ReturnCode_t get_ushort(
        DDS_UnsignedShort & value_out,
        const char * member_name,
        DDS_DynamicDataMemberId member_id) const;

    /*e \dref_DynamicData_get_float
     */
    DDS_ReturnCode_t get_float(
        DDS_Float & value_out,
        const char * member_name,
        DDS_DynamicDataMemberId member_id) const;

    /*e \dref_DynamicData_get_double
     */
    DDS_ReturnCode_t get_double(
        DDS_Double & value_out,
        const char * member_name,
        DDS_DynamicDataMemberId member_id) const;

    /*e \dref_DynamicData_get_boolean
     */
    DDS_ReturnCode_t get_boolean(
        DDS_Boolean & value_out,
        const char * member_name,
        DDS_DynamicDataMemberId member_id) const;

    /*e \dref_DynamicData_get_char
     */
    DDS_ReturnCode_t get_char(
        DDS_Char & value_out,
        const char * member_name,
        DDS_DynamicDataMemberId member_id) const;

    /*e \dref_DynamicData_get_octet
     */
    DDS_ReturnCode_t get_octet(
        DDS_Octet & value_out,
        const char * member_name,
        DDS_DynamicDataMemberId member_id) const;

    /*e \dref_DynamicData_get_longlong
     */
    DDS_ReturnCode_t get_longlong(
        DDS_LongLong & value_out,
        const char * member_name,
        DDS_DynamicDataMemberId member_id) const;

    /*e \dref_DynamicData_get_ulonglong
     */
    DDS_ReturnCode_t get_ulonglong(
        DDS_UnsignedLongLong & value_out,
        const char * member_name,
        DDS_DynamicDataMemberId member_id) const;

    /*e \dref_DynamicData_get_longdouble
     */
    DDS_ReturnCode_t get_longdouble(
        DDS_LongDouble & value_out,
        const char * member_name,
        DDS_DynamicDataMemberId member_id) const;

    /*e \dref_DynamicData_get_wchar
     */
    DDS_ReturnCode_t get_wchar(
        DDS_Wchar & value_out,
        const char * member_name,
        DDS_DynamicDataMemberId member_id) const;

    /*e \dref_DynamicData_get_string
     */
    DDS_ReturnCode_t get_string(
        char *& value, /* inout */
        DDS_UnsignedLong * size, /* inout */
        const char * member_name,
        DDS_DynamicDataMemberId member_id) const;

    /*e \dref_DynamicData_get_wstring
     */
    DDS_ReturnCode_t get_wstring(
        DDS_Wchar *& value, /* inout */
        DDS_UnsignedLong * size, /* inout */
        const char * member_name,
        DDS_DynamicDataMemberId member_id) const;

    /*i \dref_DynamicData_loan_string
     */
    DDS_ReturnCode_t loan_stringI(
        const char *& value, /* out */
        DDS_UnsignedLong * size, /* out */
        const char * member_name,
        DDS_DynamicDataMemberId member_id) const;

    /*i \dref_DynamicData_loan_wstring
     */
    DDS_ReturnCode_t loan_wstringI(
        const DDS_Wchar *& value, /* out */
        DDS_UnsignedLong * size, /* out */
        const char * member_name,
        DDS_DynamicDataMemberId member_id) const;

    /*i \dref_DynamicData_loan_serialized_buffer
     */
    DDS_ReturnCode_t loan_serialized_bufferI(
        const DDS_Octet *& value, /* out */
        DDS_UnsignedLong * size)  /* out */ const;

    /*e \dref_DynamicData_get_complex_member
     */
    DDS_ReturnCode_t get_complex_member(
        DDS_DynamicData & value_out, /* inout */
        const char * member_name,
        DDS_DynamicDataMemberId member_id) const;


    /*i \dref_DynamicData_is_zero_copy_supported
     */
    DDS_Boolean is_zero_copy_supported() const;


    /*i \dref_DynamicData_is_native_format
     */
    DDS_Boolean is_native_format() const;


    /*e \dref_DynamicData_get_long_array
     */
    DDS_ReturnCode_t get_long_array(
        DDS_Long * array, /* out */
        DDS_UnsignedLong * length, /* inout */
        const char * member_name,
        DDS_DynamicDataMemberId member_id) const;

    /*e \dref_DynamicData_get_short_array
     */
    DDS_ReturnCode_t get_short_array(
        DDS_Short * array, /* out */
        DDS_UnsignedLong * length, /* inout */
        const char * member_name,
        DDS_DynamicDataMemberId member_id) const;

    /*e \dref_DynamicData_get_ulong_array
     */
    DDS_ReturnCode_t get_ulong_array(
        DDS_UnsignedLong * array, /* out */
        DDS_UnsignedLong * length, /* inout */
        const char * member_name,
        DDS_DynamicDataMemberId member_id) const;

    /*e \dref_DynamicData_get_ushort_array
     */
    DDS_ReturnCode_t get_ushort_array(
        DDS_UnsignedShort * array, /* out */
        DDS_UnsignedLong * length, /* inout */
        const char * member_name,
        DDS_DynamicDataMemberId member_id) const;

    /*e \dref_DynamicData_get_float_array
     */
    DDS_ReturnCode_t get_float_array(
        DDS_Float * array, /* out */
        DDS_UnsignedLong * length, /* inout */
        const char * member_name,
        DDS_DynamicDataMemberId member_id) const;

    /*e \dref_DynamicData_get_double_array
     */
    DDS_ReturnCode_t get_double_array(
        DDS_Double * array, /* out */
        DDS_UnsignedLong * length, /* inout */
        const char * member_name,
        DDS_DynamicDataMemberId member_id) const;

    /*e \dref_DynamicData_get_boolean_array
     */
    DDS_ReturnCode_t get_boolean_array(
        DDS_Boolean * array, /* out */
        DDS_UnsignedLong * length, /* inout */
        const char * member_name,
        DDS_DynamicDataMemberId member_id) const;

    /*e \dref_DynamicData_get_char_array
     */
    DDS_ReturnCode_t get_char_array(
        DDS_Char * array, /* out */
        DDS_UnsignedLong * length, /* inout */
        const char * member_name,
        DDS_DynamicDataMemberId member_id) const;

    /*e \dref_DynamicData_get_octet_array
     */
    DDS_ReturnCode_t get_octet_array(
        DDS_Octet * array, /* out */
        DDS_UnsignedLong * length, /* inout */
        const char * member_name,
        DDS_DynamicDataMemberId member_id) const;

    /*e \dref_DynamicData_get_longlong_array
     */
    DDS_ReturnCode_t get_longlong_array(
        DDS_LongLong * array, /* out */
        DDS_UnsignedLong * length, /* inout */
        const char * member_name,
        DDS_DynamicDataMemberId member_id) const;

    /*e \dref_DynamicData_get_ulonglong_array
     */
    DDS_ReturnCode_t get_ulonglong_array(
        DDS_UnsignedLongLong * array, /* out */
        DDS_UnsignedLong * length, /* inout */
        const char * member_name,
        DDS_DynamicDataMemberId member_id) const;

    /*e \dref_DynamicData_get_longdouble_array
     */
    DDS_ReturnCode_t get_longdouble_array(
        DDS_LongDouble * array, /* out */
        DDS_UnsignedLong * length, /* inout */
        const char * member_name,
        DDS_DynamicDataMemberId member_id) const;

    /*e \dref_DynamicData_get_wchar_array
     */
    DDS_ReturnCode_t get_wchar_array(
        DDS_Wchar * array, /* out */
        DDS_UnsignedLong * length, /* inout */
        const char * member_name,
        DDS_DynamicDataMemberId member_id) const;


    /*e \dref_DynamicData_get_long_seq
     */
    DDS_ReturnCode_t get_long_seq(
        DDS_LongSeq & seq, /* inout */
        const char * member_name,
        DDS_DynamicDataMemberId member_id) const;

    /*e \dref_DynamicData_get_short_seq
     */
    DDS_ReturnCode_t get_short_seq(
        DDS_ShortSeq & seq, /* inout */
        const char * member_name,
        DDS_DynamicDataMemberId member_id) const;

    /*e \dref_DynamicData_get_ulong_seq
     */
    DDS_ReturnCode_t get_ulong_seq(
        DDS_UnsignedLongSeq & seq, /* inout */
        const char * member_name,
        DDS_DynamicDataMemberId member_id) const;

    /*e \dref_DynamicData_get_ushort_seq
     */
    DDS_ReturnCode_t get_ushort_seq(
        DDS_UnsignedShortSeq & seq, /* inout */
        const char * member_name,
        DDS_DynamicDataMemberId member_id) const;

    /*e \dref_DynamicData_get_long_seq
     */
    DDS_ReturnCode_t get_float_seq(
        DDS_FloatSeq & seq, /* inout */
        const char * member_name,
        DDS_DynamicDataMemberId member_id) const;

    /*e \dref_DynamicData_get_double_seq
     */
    DDS_ReturnCode_t get_double_seq(
        DDS_DoubleSeq & seq, /* inout */
        const char * member_name,
        DDS_DynamicDataMemberId member_id) const;

    /*e \dref_DynamicData_get_boolean_seq
     */
    DDS_ReturnCode_t get_boolean_seq(
        DDS_BooleanSeq & seq, /* inout */
        const char * member_name,
        DDS_DynamicDataMemberId member_id) const;

    /*e \dref_DynamicData_get_char_seq
     */
    DDS_ReturnCode_t get_char_seq(
        DDS_CharSeq & seq, /* inout */
        const char * member_name,
        DDS_DynamicDataMemberId member_id) const;

    /*e \dref_DynamicData_get_octet_seq
     */
    DDS_ReturnCode_t get_octet_seq(
        DDS_OctetSeq & seq, /* inout */
        const char * member_name,
        DDS_DynamicDataMemberId member_id) const;

    /*e \dref_DynamicData_get_longlong_seq
     */
    DDS_ReturnCode_t get_longlong_seq(
        DDS_LongLongSeq & seq, /* inout */
        const char * member_name,
        DDS_DynamicDataMemberId member_id) const;

    /*e \dref_DynamicData_get_ulonglong_seq
     */
    DDS_ReturnCode_t get_ulonglong_seq(
        DDS_UnsignedLongLongSeq & seq, /* inout */
        const char * member_name,
        DDS_DynamicDataMemberId member_id) const;

    /*e \dref_DynamicData_get_longdouble_seq
     */
    DDS_ReturnCode_t get_longdouble_seq(
        DDS_LongDoubleSeq & seq, /* inout */
        const char * member_name,
        DDS_DynamicDataMemberId member_id) const;

    /*e \dref_DynamicData_get_wchar_seq
     */
    DDS_ReturnCode_t get_wchar_seq(
        DDS_WcharSeq & seq, /* inout */
        const char * member_name,
        DDS_DynamicDataMemberId member_id) const;


    /*i \dref_DynamicData_get_serialized_member
     */
    DDS_ReturnCode_t get_serialized_member(
        DDS_Octet *& bytes, /* out */
        DDS_UnsignedLong * length, /* inout */
        const char * member_name,
        DDS_DynamicDataMemberId member_id) const;

    /****** Data access: set ******/

    /*e \dref_DynamicData_set_long
     */
    DDS_ReturnCode_t set_long(
        const char * member_name,
        DDS_DynamicDataMemberId member_id,
        DDS_Long value);

    /*e \dref_DynamicData_set_short
     */
    DDS_ReturnCode_t set_short(
        const char * member_name,
        DDS_DynamicDataMemberId member_id,
        DDS_Short value);

    /*e \dref_DynamicData_set_ulong
     */
    DDS_ReturnCode_t set_ulong(
        const char * member_name,
        DDS_DynamicDataMemberId member_id,
        DDS_UnsignedLong value);

    /*e \dref_DynamicData_set_ushort
     */
    DDS_ReturnCode_t set_ushort(
        const char * member_name,
        DDS_DynamicDataMemberId member_id,
        DDS_UnsignedShort value);

    /*e \dref_DynamicData_set_float
     */
    DDS_ReturnCode_t set_float(
        const char * member_name,
        DDS_DynamicDataMemberId member_id,
        DDS_Float value);

    /*e \dref_DynamicData_set_double
     */
    DDS_ReturnCode_t set_double(
        const char * member_name,
        DDS_DynamicDataMemberId member_id,
        DDS_Double value);

    /*e \dref_DynamicData_set_boolean
     */
    DDS_ReturnCode_t set_boolean(
        const char * member_name,
        DDS_DynamicDataMemberId member_id,
        DDS_Boolean value);

    /*e \dref_DynamicData_set_char
     */
    DDS_ReturnCode_t set_char(
        const char * member_name,
        DDS_DynamicDataMemberId member_id,
        DDS_Char value);

    /*e \dref_DynamicData_set_octet
     */
    DDS_ReturnCode_t set_octet(
        const char * member_name,
        DDS_DynamicDataMemberId member_id,
        DDS_Octet value);

    /*e \dref_DynamicData_set_longlong
     */
    DDS_ReturnCode_t set_longlong(
        const char * member_name,
        DDS_DynamicDataMemberId member_id,
        DDS_LongLong value);

    /*e \dref_DynamicData_set_ulonglong
     */
    DDS_ReturnCode_t set_ulonglong(
        const char * member_name,
        DDS_DynamicDataMemberId member_id,
        DDS_UnsignedLongLong value);

    /*e \dref_DynamicData_set_longdouble
     */
    DDS_ReturnCode_t set_longdouble(
        const char * member_name,
        DDS_DynamicDataMemberId member_id,
        DDS_LongDouble value);

    /*e \dref_DynamicData_set_wchar
     */
    DDS_ReturnCode_t set_wchar(
        const char * member_name,
        DDS_DynamicDataMemberId member_id,
        DDS_Wchar value);

    /*e \dref_DynamicData_set_string
     */
    DDS_ReturnCode_t set_string(
        const char * member_name,
        DDS_DynamicDataMemberId member_id,
        const char * value);

    /*e \dref_DynamicData_set_wstring
     */
    DDS_ReturnCode_t set_wstring(
        const char * member_name,
        DDS_DynamicDataMemberId member_id,
        const DDS_Wchar * value);


    /*e \dref_DynamicData_set_complex_member
     */
    DDS_ReturnCode_t set_complex_member(
        const char * member_name,
        DDS_DynamicDataMemberId member_id,
        const DDS_DynamicData & value);


    /*e \dref_DynamicData_set_long_array
     */
    DDS_ReturnCode_t set_long_array(
        const char * member_name,
        DDS_DynamicDataMemberId member_id,
        DDS_UnsignedLong length,
        const DDS_Long * array);

    /*e \dref_DynamicData_set_short_array
     */
    DDS_ReturnCode_t set_short_array(
        const char * member_name,
        DDS_DynamicDataMemberId member_id,
        DDS_UnsignedLong length,
        const DDS_Short * array);

    /*e \dref_DynamicData_set_ulong_array
     */
    DDS_ReturnCode_t set_ulong_array(
        const char * member_name,
        DDS_DynamicDataMemberId member_id,
        DDS_UnsignedLong length,
        const DDS_UnsignedLong * array);

    /*e \dref_DynamicData_set_ushort_array
     */
    DDS_ReturnCode_t set_ushort_array(
        const char * member_name,
        DDS_DynamicDataMemberId member_id,
        DDS_UnsignedLong length,
        const DDS_UnsignedShort * array);

    /*e \dref_DynamicData_set_float_array
     */
    DDS_ReturnCode_t set_float_array(
        const char * member_name,
        DDS_DynamicDataMemberId member_id,
        DDS_UnsignedLong length,
        const DDS_Float * array);

    /*e \dref_DynamicData_set_double_array
     */
    DDS_ReturnCode_t set_double_array(
        const char * member_name,
        DDS_DynamicDataMemberId member_id,
        DDS_UnsignedLong length,
        const DDS_Double * array);

    /*e \dref_DynamicData_set_boolean_array
     */
    DDS_ReturnCode_t set_boolean_array(
        const char * member_name,
        DDS_DynamicDataMemberId member_id,
        DDS_UnsignedLong length,
        const DDS_Boolean * array);

    /*e \dref_DynamicData_set_char_array
     */
    DDS_ReturnCode_t set_char_array(
        const char * member_name,
        DDS_DynamicDataMemberId member_id,
        DDS_UnsignedLong length,
        const DDS_Char * array);

    /*e \dref_DynamicData_set_octet_array
     */
    DDS_ReturnCode_t set_octet_array(
        const char * member_name,
        DDS_DynamicDataMemberId member_id,
        DDS_UnsignedLong length,
        const DDS_Octet * array);

    /*e \dref_DynamicData_set_longlong_array
     */
    DDS_ReturnCode_t set_longlong_array(
        const char * member_name,
        DDS_DynamicDataMemberId member_id,
        DDS_UnsignedLong length,
        const DDS_LongLong * array);

    /*e \dref_DynamicData_set_ulonglong_array
     */
    DDS_ReturnCode_t set_ulonglong_array(
        const char * member_name,
        DDS_DynamicDataMemberId member_id,
        DDS_UnsignedLong length,
        const DDS_UnsignedLongLong * array);

    /*e \dref_DynamicData_set_longdouble_array
     */
    DDS_ReturnCode_t set_longdouble_array(
        const char * member_name,
        DDS_DynamicDataMemberId member_id,
        DDS_UnsignedLong length,
        const DDS_LongDouble * array);

    /*e \dref_DynamicData_set_wchar_array
     */
    DDS_ReturnCode_t set_wchar_array(
        const char * member_name,
        DDS_DynamicDataMemberId member_id,
        DDS_UnsignedLong length,
        const DDS_Wchar * array);


    /*e \dref_DynamicData_set_long_seq
     */
    DDS_ReturnCode_t set_long_seq(
        const char * member_name,
        DDS_DynamicDataMemberId member_id,
        const DDS_LongSeq & value);

    /*e \dref_DynamicData_set_short_seq
     */
    DDS_ReturnCode_t set_short_seq(
        const char * member_name,
        DDS_DynamicDataMemberId member_id,
        const DDS_ShortSeq & value);

    /*e \dref_DynamicData_set_ulong_seq
     */
    DDS_ReturnCode_t set_ulong_seq(
        const char * member_name,
        DDS_DynamicDataMemberId member_id,
        const DDS_UnsignedLongSeq & value);

    /*e \dref_DynamicData_set_ushort_seq
     */
    DDS_ReturnCode_t set_ushort_seq(
        const char * member_name,
        DDS_DynamicDataMemberId member_id,
        const DDS_UnsignedShortSeq & value);

    /*e \dref_DynamicData_set_float_seq
     */
    DDS_ReturnCode_t set_float_seq(
        const char * member_name,
        DDS_DynamicDataMemberId member_id,
        const DDS_FloatSeq & value);

    /*e \dref_DynamicData_set_double_seq
     */
    DDS_ReturnCode_t set_double_seq(
        const char * member_name,
        DDS_DynamicDataMemberId member_id,
        const DDS_DoubleSeq & value);

    /*e \dref_DynamicData_set_boolean_seq
     */
    DDS_ReturnCode_t set_boolean_seq(
        const char * member_name,
        DDS_DynamicDataMemberId member_id,
        const DDS_BooleanSeq & value);

    /*e \dref_DynamicData_set_char_seq
     */
    DDS_ReturnCode_t set_char_seq(
        const char * member_name,
        DDS_DynamicDataMemberId member_id,
        const DDS_CharSeq & value);

    /*e \dref_DynamicData_set_octet_seq
     */
    DDS_ReturnCode_t set_octet_seq(
        const char * member_name,
        DDS_DynamicDataMemberId member_id,
        const DDS_OctetSeq & value);

    /*e \dref_DynamicData_set_longlong_seq
     */
    DDS_ReturnCode_t set_longlong_seq(
        const char * member_name,
        DDS_DynamicDataMemberId member_id,
        const DDS_LongLongSeq & value);

    /*e \dref_DynamicData_set_ulonglong_seq
     */
    DDS_ReturnCode_t set_ulonglong_seq(
        const char * member_name,
        DDS_DynamicDataMemberId member_id,
        const DDS_UnsignedLongLongSeq & value);

    /*e \dref_DynamicData_set_longdouble_seq
     */
    DDS_ReturnCode_t set_longdouble_seq(
        const char * member_name,
        DDS_DynamicDataMemberId member_id,
        const DDS_LongDoubleSeq & value);

    /*e \dref_DynamicData_set_wchar_seq
     */
    DDS_ReturnCode_t set_wchar_seq(
        const char * member_name,
        DDS_DynamicDataMemberId member_id,
        const DDS_WcharSeq & value);

    /*e \dref_DynamicData_delete
     */
    ~DDS_DynamicData();
    #endif /*RTI_CPP*/
};

typedef struct DDS_DynamicData DDS_DynamicData;


#define DDS_DYNAMIC_DATA_MEMBER_ID_UNSPECIFIED  0

extern DDSCDllExport
DDS_Boolean DDS_DynamicData_initialize(
    DDS_DynamicData * self,
    const DDS_TypeCode * type,
    const struct DDS_DynamicDataProperty_t * property);

extern DDSCDllExport
DDS_Boolean DDS_DynamicData_initialize_ex(
    DDS_DynamicData * self,
    const DDS_TypeCode * type,
    const struct DDS_DynamicDataProperty_t * properties,
    DDS_Boolean copy_type);

extern DDSCDllExport
DDS_Boolean DDS_DynamicData_is_valid(const DDS_DynamicData * self);

extern DDSCDllExport
DDS_DynamicData *DDS_DynamicData_new(
    const DDS_TypeCode * type,
    const struct DDS_DynamicDataProperty_t * property);

extern DDSCDllExport
void DDS_DynamicData_finalize(
    DDS_DynamicData * self);

extern DDSCDllExport
void DDS_DynamicData_delete(
    DDS_DynamicData * self);

extern DDSCDllExport
DDS_ReturnCode_t DDS_DynamicData_copy(
    DDS_DynamicData * self,
    const DDS_DynamicData * src);

extern DDSCDllExport
DDS_Boolean DDS_DynamicData_equal(
    const DDS_DynamicData * self,
    const DDS_DynamicData * other);

extern DDSCDllExport
DDS_ReturnCode_t DDS_DynamicData_clear_all_members(
    DDS_DynamicData * self);

extern DDSCDllExport
DDS_ReturnCode_t DDS_DynamicData_clear_nonkey_members(
    DDS_DynamicData * self);

extern DDSCDllExport
DDS_ReturnCode_t DDS_DynamicData_clear_optional_member(
    DDS_DynamicData * self,
    const char * member_name,
    DDS_DynamicDataMemberId member_id);

extern DDSCDllExport
DDS_ReturnCode_t DDS_DynamicData_clear_member(
    DDS_DynamicData * self,
    const char * member_name,
    DDS_DynamicDataMemberId member_id);

extern DDSCDllExport
DDS_ReturnCode_t DDS_DynamicData_compact(
    DDS_DynamicData * self);

extern DDSCDllExport
DDS_ReturnCode_t DDS_DynamicData_set_buffer(
    DDS_DynamicData * self,
    DDS_Octet * storage,
    DDS_Long size);

extern DDSCDllExport
DDS_ReturnCode_t DDS_DynamicData_set_and_lock_buffer(
    DDS_DynamicData * self,
    DDS_Octet * storage,
    DDS_Long size);

extern DDSCDllExport
const char * DDS_DynamicData_get_storage_buffer(
    DDS_DynamicData * self,
    DDS_UnsignedLong * size);

extern DDSCDllExport
DDS_Boolean DDS_DynamicData_is_lock(
    DDS_DynamicData * self);

extern DDSCDllExport
DDS_ReturnCode_t DDS_DynamicData_get_estimated_max_buffer_size(
    const DDS_DynamicData * self, DDS_Long * size);

extern DDSCDllExport
DDS_ReturnCode_t DDS_DynamicData_ensure_buffer_size(
    DDS_DynamicData * self,
    DDS_Long required_size);

extern DDSCDllExport
DDS_ReturnCode_t DDS_DynamicData_print(
    const DDS_DynamicData * self,
    FILE *fp,
    int indent);

extern DDSCDllExport
DDS_ReturnCode_t DDS_DynamicData_to_stream(
    const DDS_DynamicData * self,
    struct RTICdrStream * stream);

extern DDSCDllExport
DDS_ReturnCode_t DDS_DynamicData_from_stream(
    DDS_DynamicData * self,
    struct RTICdrStream * stream);

extern DDSCDllExport
DDS_ReturnCode_t DDS_DynamicData_from_cdr_buffer(
    DDS_DynamicData * self,
    const char * buffer,
    unsigned int length);

extern DDSCDllExport
DDS_ReturnCode_t DDS_DynamicData_to_cdr_buffer(
    DDS_DynamicData * self,
    char * buffer,
    unsigned int * length);

extern DDSCDllExport
DDS_ReturnCode_t DDS_DynamicData_to_string(
        DDS_DynamicData *self,
        char *str,
        DDS_UnsignedLong *str_size, 
        const struct DDS_PrintFormatProperty *property);

extern DDSCDllExport
DDS_Long DDS_DynamicData_get_serialized_size(
    const DDS_DynamicData * self,
    DDS_DynamicDataEncapsulationKind encapsulation_kind);

extern DDSCDllExport
void DDS_DynamicData_get_info(
    const DDS_DynamicData * self,
    struct DDS_DynamicDataInfo * info_out);

extern DDSCDllExport
DDS_ReturnCode_t DDS_DynamicData_to_key_stream(
    const DDS_DynamicData * self,
    struct RTICdrStream * stream);

extern DDSCDllExport
DDS_ReturnCode_t DDS_DynamicData_from_key_streamI(
    DDS_DynamicData * self,
    struct RTICdrStream * stream);

extern DDSCDllExport
DDS_Long DDS_DynamicData_get_hashcodeI(
    const DDS_DynamicData * self);

extern DDSCDllExport
DDS_ReturnCode_t DDS_DynamicData_bind_type(
    DDS_DynamicData * self,
    const DDS_TypeCode *type);

extern DDSCDllExport
DDS_ReturnCode_t DDS_DynamicData_unbind_type(
    DDS_DynamicData * self);

extern DDSCDllExport
DDS_ReturnCode_t DDS_DynamicData_bind_complex_member(/*to_?*/
    DDS_DynamicData * self,
    DDS_DynamicData * value_out, /* inout */
    const char * member_name,
    DDS_DynamicDataMemberId member_id);

extern DDSCDllExport
DDS_ReturnCode_t DDS_DynamicData_unbind_complex_member(
    DDS_DynamicData * self,
    DDS_DynamicData * value);

extern DDSCDllExport
const DDS_TypeCode * DDS_DynamicData_get_type(
    const DDS_DynamicData * self);

extern DDSCDllExport
DDS_TCKind DDS_DynamicData_get_type_kind(
    const DDS_DynamicData * self);

extern DDSCDllExport
DDS_UnsignedLong DDS_DynamicData_get_member_count(
    const DDS_DynamicData * self);

extern DDSCDllExport
DDS_Boolean DDS_DynamicData_member_exists(
    const DDS_DynamicData * self,
    const char * member_name,
    DDS_DynamicDataMemberId member_id);

extern DDSCDllExport
DDS_Boolean DDS_DynamicData_member_exists_in_type(
    const DDS_DynamicData * self,
    const char * member_name,
    DDS_DynamicDataMemberId member_id);

extern DDSCDllExport
DDS_ReturnCode_t DDS_DynamicData_get_member_info(
    const DDS_DynamicData * self,
    struct DDS_DynamicDataMemberInfo * info, /*out*/
    const char * member_name,
    DDS_DynamicDataMemberId member_id);

extern DDSCDllExport
DDS_UnsignedLong DDS_DynamicData_get_member_representation_count(
    const DDS_DynamicData * self,
    const char * member_name);

extern DDSCDllExport
DDS_ReturnCode_t DDS_DynamicData_get_member_representation_info(
    const DDS_DynamicData * self,
    struct DDS_DynamicDataMemberInfo * info, /*out*/
    const char * member_name,
    DDS_UnsignedLong representation_index);

extern DDSCDllExport
DDS_ReturnCode_t DDS_DynamicData_get_member_info_by_index(
    const DDS_DynamicData * self,
    struct DDS_DynamicDataMemberInfo * info, /*out*/
    DDS_UnsignedLong index);

extern DDSCDllExport
DDS_ReturnCode_t DDS_DynamicData_get_member_type(
    const DDS_DynamicData * self,
    const DDS_TypeCode ** type_out,
    const char * member_name,
    DDS_DynamicDataMemberId member_id);

extern DDSCDllExport
DDS_ReturnCode_t DDS_DynamicData_is_member_key(
    const DDS_DynamicData * self,
    DDS_Boolean * is_key_out,
    const char * member_name,
    DDS_DynamicDataMemberId member_id);

extern DDSCDllExport
DDS_ReturnCode_t DDS_DynamicData_get_long(
    const DDS_DynamicData * self,
    DDS_Long * value_out,
    const char * member_name,
    DDS_DynamicDataMemberId member_id);

extern DDSCDllExport
DDS_ReturnCode_t DDS_DynamicData_get_short(
    const DDS_DynamicData * self,
    DDS_Short * value_out,
    const char * member_name,
    DDS_DynamicDataMemberId member_id);

extern DDSCDllExport
DDS_ReturnCode_t DDS_DynamicData_get_ulong(
    const DDS_DynamicData * self,
    DDS_UnsignedLong * value_out,
    const char * member_name,
    DDS_DynamicDataMemberId member_id);

extern DDSCDllExport
DDS_ReturnCode_t DDS_DynamicData_get_ushort(
    const DDS_DynamicData * self,
    DDS_UnsignedShort * value_out,
    const char * member_name,
    DDS_DynamicDataMemberId member_id);

extern DDSCDllExport
DDS_ReturnCode_t DDS_DynamicData_get_float(
    const DDS_DynamicData * self,
    DDS_Float * value_out,
    const char * member_name,
    DDS_DynamicDataMemberId member_id);

extern DDSCDllExport
DDS_ReturnCode_t DDS_DynamicData_get_double(
    const DDS_DynamicData * self,
    DDS_Double * value_out,
    const char * member_name,
    DDS_DynamicDataMemberId member_id);

extern DDSCDllExport
DDS_ReturnCode_t DDS_DynamicData_get_boolean(
    const DDS_DynamicData * self,
    DDS_Boolean * value_out,
    const char * member_name,
    DDS_DynamicDataMemberId member_id);

extern DDSCDllExport
DDS_ReturnCode_t DDS_DynamicData_get_char(
    const DDS_DynamicData * self,
    DDS_Char * value_out,
    const char * member_name,
    DDS_DynamicDataMemberId member_id);

extern DDSCDllExport
DDS_ReturnCode_t DDS_DynamicData_get_octet(
    const DDS_DynamicData * self,
    DDS_Octet * value_out,
    const char * member_name,
    DDS_DynamicDataMemberId member_id);

extern DDSCDllExport
DDS_ReturnCode_t DDS_DynamicData_get_longlong(
    const DDS_DynamicData * self,
    DDS_LongLong * value_out,
    const char * member_name,
    DDS_DynamicDataMemberId member_id);

extern DDSCDllExport
DDS_ReturnCode_t DDS_DynamicData_get_ulonglong(
    const DDS_DynamicData * self,
    DDS_UnsignedLongLong * value_out,
    const char * member_name,
    DDS_DynamicDataMemberId member_id);

extern DDSCDllExport
DDS_ReturnCode_t DDS_DynamicData_get_longdouble(
    const DDS_DynamicData * self,
    DDS_LongDouble * value_out,
    const char * member_name,
    DDS_DynamicDataMemberId member_id);

extern DDSCDllExport
DDS_ReturnCode_t DDS_DynamicData_get_wchar(
    const DDS_DynamicData * self,
    DDS_Wchar * value_out,
    const char * member_name,
    DDS_DynamicDataMemberId member_id);

extern DDSCDllExport
DDS_ReturnCode_t DDS_DynamicData_get_string(
    const DDS_DynamicData * self,
    char ** value, /* inout */
    DDS_UnsignedLong * size, /* inout */
    const char * member_name,
    DDS_DynamicDataMemberId member_id);

extern DDSCDllExport
DDS_ReturnCode_t DDS_DynamicData_get_wstring(
    const DDS_DynamicData * self,
    DDS_Wchar ** value, /* inout */
    DDS_UnsignedLong * size, /* inout */
    const char * member_name,
    DDS_DynamicDataMemberId member_id);

extern DDSCDllExport
DDS_ReturnCode_t DDS_DynamicData_loan_stringI(
    const DDS_DynamicData * self,
    const char ** value, /* out */
    DDS_UnsignedLong * size, /* out */
    const char * member_name,
    DDS_DynamicDataMemberId member_id);

extern DDSCDllExport
DDS_ReturnCode_t DDS_DynamicData_loan_wstringI(
    const DDS_DynamicData * self,
    const DDS_Wchar ** value, /* out */
    DDS_UnsignedLong * size, /* out */
    const char * member_name,
    DDS_DynamicDataMemberId member_id);

extern DDSCDllExport
DDS_ReturnCode_t DDS_DynamicData_loan_serialized_bufferI(
    const DDS_DynamicData * self,
    const DDS_Octet ** value, /* out */
    DDS_UnsignedLong * size); /* out */

extern DDSCDllExport
DDS_ReturnCode_t DDS_DynamicData_get_complex_member(
    const DDS_DynamicData * self,
    DDS_DynamicData * value_out, /* inout */
    const char * member_name,
    DDS_DynamicDataMemberId member_id);

extern DDSCDllExport
DDS_Boolean DDS_DynamicData_is_zero_copy_supported(
    const DDS_DynamicData * self);

extern DDSCDllExport
DDS_Boolean DDS_DynamicData_is_native_format(
    const DDS_DynamicData * self);

extern DDSCDllExport
DDS_ReturnCode_t DDS_DynamicData_get_long_array(
    const DDS_DynamicData * self,
    DDS_Long * array, /* out */
    DDS_UnsignedLong * length, /* inout */
    const char * member_name,
    DDS_DynamicDataMemberId member_id);

extern DDSCDllExport
DDS_ReturnCode_t DDS_DynamicData_get_short_array(
    const DDS_DynamicData * self,
    DDS_Short * array, /* out */
    DDS_UnsignedLong * length, /* inout */
    const char * member_name,
    DDS_DynamicDataMemberId member_id);

extern DDSCDllExport
DDS_ReturnCode_t DDS_DynamicData_get_ulong_array(
    const DDS_DynamicData * self,
    DDS_UnsignedLong * array, /* out */
    DDS_UnsignedLong * length, /* inout */
    const char * member_name,
    DDS_DynamicDataMemberId member_id);

extern DDSCDllExport
DDS_ReturnCode_t DDS_DynamicData_get_ushort_array(
    const DDS_DynamicData * self,
    DDS_UnsignedShort * array, /* out */
    DDS_UnsignedLong * length, /* inout */
    const char * member_name,
    DDS_DynamicDataMemberId member_id);

extern DDSCDllExport
DDS_ReturnCode_t DDS_DynamicData_get_float_array(
    const DDS_DynamicData * self,
    DDS_Float * array, /* out */
    DDS_UnsignedLong * length, /* inout */
    const char * member_name,
    DDS_DynamicDataMemberId member_id);

extern DDSCDllExport
DDS_ReturnCode_t DDS_DynamicData_get_double_array(
    const DDS_DynamicData * self,
    DDS_Double * array, /* out */
    DDS_UnsignedLong * length, /* inout */
    const char * member_name,
    DDS_DynamicDataMemberId member_id);

extern DDSCDllExport
DDS_ReturnCode_t DDS_DynamicData_get_boolean_array(
    const DDS_DynamicData * self,
    DDS_Boolean * array, /* out */
    DDS_UnsignedLong * length, /* inout */
    const char * member_name,
    DDS_DynamicDataMemberId member_id);

extern DDSCDllExport
DDS_ReturnCode_t DDS_DynamicData_get_char_array(
    const DDS_DynamicData * self,
    DDS_Char * array, /* out */
    DDS_UnsignedLong * length, /* inout */
    const char * member_name,
    DDS_DynamicDataMemberId member_id);

extern DDSCDllExport
DDS_ReturnCode_t DDS_DynamicData_get_octet_array(
    const DDS_DynamicData * self,
    DDS_Octet * array, /* out */
    DDS_UnsignedLong * length, /* inout */
    const char * member_name,
    DDS_DynamicDataMemberId member_id);

extern DDSCDllExport
DDS_ReturnCode_t DDS_DynamicData_get_longlong_array(
    const DDS_DynamicData * self,
    DDS_LongLong * array, /* out */
    DDS_UnsignedLong * length, /* inout */
    const char * member_name,
    DDS_DynamicDataMemberId member_id);

extern DDSCDllExport
DDS_ReturnCode_t DDS_DynamicData_get_ulonglong_array(
    const DDS_DynamicData * self,
    DDS_UnsignedLongLong * array, /* out */
    DDS_UnsignedLong * length, /* inout */
    const char * member_name,
    DDS_DynamicDataMemberId member_id);

extern DDSCDllExport
DDS_ReturnCode_t DDS_DynamicData_get_longdouble_array(
    const DDS_DynamicData * self,
    DDS_LongDouble * array, /* out */
    DDS_UnsignedLong * length, /* inout */
    const char * member_name,
    DDS_DynamicDataMemberId member_id);

extern DDSCDllExport
DDS_ReturnCode_t DDS_DynamicData_get_wchar_array(
    const DDS_DynamicData * self,
    DDS_Wchar * array, /* out */
    DDS_UnsignedLong * length, /* inout */
    const char * member_name,
    DDS_DynamicDataMemberId member_id);

extern DDSCDllExport
DDS_ReturnCode_t DDS_DynamicData_get_long_seq(
    const DDS_DynamicData * self,
    struct DDS_LongSeq * seq, /* inout */
    const char * member_name,
    DDS_DynamicDataMemberId member_id);

extern DDSCDllExport
DDS_ReturnCode_t DDS_DynamicData_get_short_seq(
    const DDS_DynamicData * self,
    struct DDS_ShortSeq * seq, /* inout */
    const char * member_name,
    DDS_DynamicDataMemberId member_id);

extern DDSCDllExport
DDS_ReturnCode_t DDS_DynamicData_get_ulong_seq(
    const DDS_DynamicData * self,
    struct DDS_UnsignedLongSeq * seq, /* inout */
    const char * member_name,
    DDS_DynamicDataMemberId member_id);

extern DDSCDllExport
DDS_ReturnCode_t DDS_DynamicData_get_ushort_seq(
    const DDS_DynamicData * self,
    struct DDS_UnsignedShortSeq * seq, /* inout */
    const char * member_name,
    DDS_DynamicDataMemberId member_id);

extern DDSCDllExport
DDS_ReturnCode_t DDS_DynamicData_get_float_seq(
    const DDS_DynamicData * self,
    struct DDS_FloatSeq * seq, /* inout */
    const char * member_name,
    DDS_DynamicDataMemberId member_id);

extern DDSCDllExport
DDS_ReturnCode_t DDS_DynamicData_get_double_seq(
    const DDS_DynamicData * self,
    struct DDS_DoubleSeq * seq, /* inout */
    const char * member_name,
    DDS_DynamicDataMemberId member_id);

extern DDSCDllExport
DDS_ReturnCode_t DDS_DynamicData_get_boolean_seq(
    const DDS_DynamicData * self,
    struct DDS_BooleanSeq * seq, /* inout */
    const char * member_name,
    DDS_DynamicDataMemberId member_id);

extern DDSCDllExport
DDS_ReturnCode_t DDS_DynamicData_get_char_seq(
    const DDS_DynamicData * self,
    struct DDS_CharSeq * seq, /* inout */
    const char * member_name,
    DDS_DynamicDataMemberId member_id);

extern DDSCDllExport
DDS_ReturnCode_t DDS_DynamicData_get_octet_seq(
    const DDS_DynamicData * self,
    struct DDS_OctetSeq * seq, /* inout */
    const char * member_name,
    DDS_DynamicDataMemberId member_id);

extern DDSCDllExport
DDS_ReturnCode_t DDS_DynamicData_get_longlong_seq(
    const DDS_DynamicData * self,
    struct DDS_LongLongSeq * seq, /* inout */
    const char * member_name,
    DDS_DynamicDataMemberId member_id);

extern DDSCDllExport
DDS_ReturnCode_t DDS_DynamicData_get_ulonglong_seq(
    const DDS_DynamicData * self,
    struct DDS_UnsignedLongLongSeq * seq, /* inout */
    const char * member_name,
    DDS_DynamicDataMemberId member_id);

extern DDSCDllExport
DDS_ReturnCode_t DDS_DynamicData_get_longdouble_seq(
    const DDS_DynamicData * self,
    struct DDS_LongDoubleSeq * seq, /* inout */
    const char * member_name,
    DDS_DynamicDataMemberId member_id);

extern DDSCDllExport
DDS_ReturnCode_t DDS_DynamicData_get_wchar_seq(
    const DDS_DynamicData * self,
    struct DDS_WcharSeq * seq, /* inout */
    const char * member_name,
    DDS_DynamicDataMemberId member_id);

extern DDSCDllExport
DDS_ReturnCode_t DDS_DynamicData_get_serialized_member(
    const DDS_DynamicData * self,
    DDS_Octet ** bytes, /* out */
    DDS_UnsignedLong * length, /* inout */
    const char * member_name,
    DDS_DynamicDataMemberId member_id);

extern DDSCDllExport
DDS_ReturnCode_t DDS_DynamicData_set_long(
    DDS_DynamicData * self,
    const char * member_name,
    DDS_DynamicDataMemberId member_id,
    DDS_Long value);

extern DDSCDllExport
DDS_ReturnCode_t DDS_DynamicData_set_short(
    DDS_DynamicData * self,
    const char * member_name,
    DDS_DynamicDataMemberId member_id,
    DDS_Short value);

extern DDSCDllExport
DDS_ReturnCode_t DDS_DynamicData_set_ulong(
    DDS_DynamicData * self,
    const char * member_name,
    DDS_DynamicDataMemberId member_id,
    DDS_UnsignedLong value);

extern DDSCDllExport
DDS_ReturnCode_t DDS_DynamicData_set_ushort(
    DDS_DynamicData * self,
    const char * member_name,
    DDS_DynamicDataMemberId member_id,
    DDS_UnsignedShort value);

extern DDSCDllExport
DDS_ReturnCode_t DDS_DynamicData_set_float(
    DDS_DynamicData * self,
    const char * member_name,
    DDS_DynamicDataMemberId member_id,
    DDS_Float value);

extern DDSCDllExport
DDS_ReturnCode_t DDS_DynamicData_set_double(
    DDS_DynamicData * self,
    const char * member_name,
    DDS_DynamicDataMemberId member_id,
    DDS_Double value);

extern DDSCDllExport
DDS_ReturnCode_t DDS_DynamicData_set_boolean(
    DDS_DynamicData * self,
    const char * member_name,
    DDS_DynamicDataMemberId member_id,
    DDS_Boolean value);

extern DDSCDllExport
DDS_ReturnCode_t DDS_DynamicData_set_char(
    DDS_DynamicData * self,
    const char * member_name,
    DDS_DynamicDataMemberId member_id,
    DDS_Char value);

extern DDSCDllExport
DDS_ReturnCode_t DDS_DynamicData_set_octet(
    DDS_DynamicData * self,
    const char * member_name,
    DDS_DynamicDataMemberId member_id,
    DDS_Octet value);

extern DDSCDllExport
DDS_ReturnCode_t DDS_DynamicData_set_longlong(
    DDS_DynamicData * self,
    const char * member_name,
    DDS_DynamicDataMemberId member_id,
    DDS_LongLong value);

extern DDSCDllExport
DDS_ReturnCode_t DDS_DynamicData_set_ulonglong(
    DDS_DynamicData * self,
    const char * member_name,
    DDS_DynamicDataMemberId member_id,
    DDS_UnsignedLongLong value);

extern DDSCDllExport
DDS_ReturnCode_t DDS_DynamicData_set_longdouble(
    DDS_DynamicData * self,
    const char * member_name,
    DDS_DynamicDataMemberId member_id,
    DDS_LongDouble value);

extern DDSCDllExport
DDS_ReturnCode_t DDS_DynamicData_set_wchar(
    DDS_DynamicData * self,
    const char * member_name,
    DDS_DynamicDataMemberId member_id,
    DDS_Wchar value);

extern DDSCDllExport
DDS_ReturnCode_t DDS_DynamicData_set_string(
    DDS_DynamicData * self,
    const char * member_name,
    DDS_DynamicDataMemberId member_id,
    const char * value);

extern DDSCDllExport
DDS_ReturnCode_t DDS_DynamicData_set_wstring(
    DDS_DynamicData * self,
    const char * member_name,
    DDS_DynamicDataMemberId member_id,
    const DDS_Wchar * value);

extern DDSCDllExport
DDS_ReturnCode_t DDS_DynamicData_set_complex_member(
    DDS_DynamicData * self,
    const char * member_name,
    DDS_DynamicDataMemberId member_id,
    const DDS_DynamicData * value);

extern DDSCDllExport
DDS_ReturnCode_t DDS_DynamicData_set_long_array(
    DDS_DynamicData * self,
    const char * member_name,
    DDS_DynamicDataMemberId member_id,
    DDS_UnsignedLong length,
    const DDS_Long * array);

extern DDSCDllExport
DDS_ReturnCode_t DDS_DynamicData_set_short_array(
    DDS_DynamicData * self,
    const char * member_name,
    DDS_DynamicDataMemberId member_id,
    DDS_UnsignedLong length,
    const DDS_Short * array);

extern DDSCDllExport
DDS_ReturnCode_t DDS_DynamicData_set_ulong_array(
    DDS_DynamicData * self,
    const char * member_name,
    DDS_DynamicDataMemberId member_id,
    DDS_UnsignedLong length,
    const DDS_UnsignedLong * array);

extern DDSCDllExport
DDS_ReturnCode_t DDS_DynamicData_set_ushort_array(
    DDS_DynamicData * self,
    const char * member_name,
    DDS_DynamicDataMemberId member_id,
    DDS_UnsignedLong length,
    const DDS_UnsignedShort * array);

extern DDSCDllExport
DDS_ReturnCode_t DDS_DynamicData_set_float_array(
    DDS_DynamicData * self,
    const char * member_name,
    DDS_DynamicDataMemberId member_id,
    DDS_UnsignedLong length,
    const DDS_Float * array);

extern DDSCDllExport
DDS_ReturnCode_t DDS_DynamicData_set_double_array(
    DDS_DynamicData * self,
    const char * member_name,
    DDS_DynamicDataMemberId member_id,
    DDS_UnsignedLong length,
    const DDS_Double * array);

extern DDSCDllExport
DDS_ReturnCode_t DDS_DynamicData_set_boolean_array(
    DDS_DynamicData * self,
    const char * member_name,
    DDS_DynamicDataMemberId member_id,
    DDS_UnsignedLong length,
    const DDS_Boolean * array);

extern DDSCDllExport
DDS_ReturnCode_t DDS_DynamicData_set_char_array(
    DDS_DynamicData * self,
    const char * member_name,
    DDS_DynamicDataMemberId member_id,
    DDS_UnsignedLong length,
    const DDS_Char * array);

extern DDSCDllExport
DDS_ReturnCode_t DDS_DynamicData_set_octet_array(
    DDS_DynamicData * self,
    const char * member_name,
    DDS_DynamicDataMemberId member_id,
    DDS_UnsignedLong length,
    const DDS_Octet * array);

extern DDSCDllExport
DDS_ReturnCode_t DDS_DynamicData_set_longlong_array(
    DDS_DynamicData * self,
    const char * member_name,
    DDS_DynamicDataMemberId member_id,
    DDS_UnsignedLong length,
    const DDS_LongLong * array);

extern DDSCDllExport
DDS_ReturnCode_t DDS_DynamicData_set_ulonglong_array(
    DDS_DynamicData * self,
    const char * member_name,
    DDS_DynamicDataMemberId member_id,
    DDS_UnsignedLong length,
    const DDS_UnsignedLongLong * array);

extern DDSCDllExport
DDS_ReturnCode_t DDS_DynamicData_set_longdouble_array(
    DDS_DynamicData * self,
    const char * member_name,
    DDS_DynamicDataMemberId member_id,
    DDS_UnsignedLong length,
    const DDS_LongDouble * array);

extern DDSCDllExport
DDS_ReturnCode_t DDS_DynamicData_set_wchar_array(
    DDS_DynamicData * self,
    const char * member_name,
    DDS_DynamicDataMemberId member_id,
    DDS_UnsignedLong length,
    const DDS_Wchar * array);

extern DDSCDllExport
DDS_ReturnCode_t DDS_DynamicData_set_long_seq(
    DDS_DynamicData * self,
    const char * member_name,
    DDS_DynamicDataMemberId member_id,
    const struct DDS_LongSeq * value);

extern DDSCDllExport
DDS_ReturnCode_t DDS_DynamicData_set_short_seq(
    DDS_DynamicData * self,
    const char * member_name,
    DDS_DynamicDataMemberId member_id,
    const struct DDS_ShortSeq * value);

extern DDSCDllExport
DDS_ReturnCode_t DDS_DynamicData_set_ulong_seq(
    DDS_DynamicData * self,
    const char * member_name,
    DDS_DynamicDataMemberId member_id,
    const struct DDS_UnsignedLongSeq * value);

extern DDSCDllExport
DDS_ReturnCode_t DDS_DynamicData_set_ushort_seq(
    DDS_DynamicData * self,
    const char * member_name,
    DDS_DynamicDataMemberId member_id,
    const struct DDS_UnsignedShortSeq * value);

extern DDSCDllExport
DDS_ReturnCode_t DDS_DynamicData_set_float_seq(
    DDS_DynamicData * self,
    const char * member_name,
    DDS_DynamicDataMemberId member_id,
    const struct DDS_FloatSeq * value);

extern DDSCDllExport
DDS_ReturnCode_t DDS_DynamicData_set_double_seq(
    DDS_DynamicData * self,
    const char * member_name,
    DDS_DynamicDataMemberId member_id,
    const struct DDS_DoubleSeq * value);

extern DDSCDllExport
DDS_ReturnCode_t DDS_DynamicData_set_boolean_seq(
    DDS_DynamicData * self,
    const char * member_name,
    DDS_DynamicDataMemberId member_id,
    const struct DDS_BooleanSeq * value);

extern DDSCDllExport
DDS_ReturnCode_t DDS_DynamicData_set_char_seq(
    DDS_DynamicData * self,
    const char * member_name,
    DDS_DynamicDataMemberId member_id,
    const struct DDS_CharSeq * value);

extern DDSCDllExport
DDS_ReturnCode_t DDS_DynamicData_set_octet_seq(
    DDS_DynamicData * self,
    const char * member_name,
    DDS_DynamicDataMemberId member_id,
    const struct DDS_OctetSeq * value);

extern DDSCDllExport
DDS_ReturnCode_t DDS_DynamicData_set_longlong_seq(
    DDS_DynamicData * self,
    const char * member_name,
    DDS_DynamicDataMemberId member_id,
    const struct DDS_LongLongSeq * value);

extern DDSCDllExport
DDS_ReturnCode_t DDS_DynamicData_set_ulonglong_seq(
    DDS_DynamicData * self,
    const char * member_name,
    DDS_DynamicDataMemberId member_id,
    const struct DDS_UnsignedLongLongSeq * value);

extern DDSCDllExport
DDS_ReturnCode_t DDS_DynamicData_set_longdouble_seq(
    DDS_DynamicData * self,
    const char * member_name,
    DDS_DynamicDataMemberId member_id,
    const struct DDS_LongDoubleSeq * value);

extern DDSCDllExport
DDS_ReturnCode_t DDS_DynamicData_set_wchar_seq(
    DDS_DynamicData * self,
    const char * member_name,
    DDS_DynamicDataMemberId member_id,
    const struct DDS_WcharSeq * value);


#ifdef DOXYGEN_DOCUMENTATION_ONLY

/*e \dref_DynamicDataSeq
 */
struct DDS_DynamicDataSeq {};

#endif

#ifdef DOXYGEN_DOCUMENTATION_ONLY

/*ce \dref_DynamicDataWriter
 */
typedef struct DDS_DynamicDataWriter
DDS_DynamicDataWriter;

#endif

#ifdef DOXYGEN_DOCUMENTATION_ONLY

/*ce \dref_DynamicDataReader
 */
typedef struct DDS_DynamicDataReader
DDS_DynamicDataReader;

#endif



#define DDS_DynamicDataTypeProperty_t_INITIALIZER \
  { DDS_DynamicDataProperty_t_INITIALIZER, \
    DDS_DynamicDataTypeSerializationProperty_t_INITIALIZER }


struct DDS_DynamicDataTypeProperty_t {
    /*e \dref_DynamicDataTypeProperty_t_data
     */
    struct DDS_DynamicDataProperty_t data;

    /*e \dref_DynamicDataTypeProperty_t_serialization
     */
    struct DDS_DynamicDataTypeSerializationProperty_t serialization;

    /* Note: in C++, the default constructor works just fine
       (see the constructors of DDS_DynamicDataProperty_t and
       DDS_DynamicDataTypeSerializationProperty_t) */
};

 extern DDSCDllVariable const struct DDS_DynamicDataTypeProperty_t
DDS_DYNAMIC_DATA_TYPE_PROPERTY_DEFAULT;


struct DDS_DynamicDataTypeSupport {
    struct DDS_DynamicDataPluginSupport *_impl;
};

extern DDSCDllExport
DDS_Boolean DDS_DynamicDataTypeSupport_initialize(
    struct DDS_DynamicDataTypeSupport * self,
    const DDS_TypeCode * type,
    const struct DDS_DynamicDataTypeProperty_t * props);

extern DDSCDllExport
struct DDS_DynamicDataTypeSupport *DDS_DynamicDataTypeSupport_new(
    const DDS_TypeCode * type,
    const struct DDS_DynamicDataTypeProperty_t * props);

extern DDSCDllExport
DDS_Boolean DDS_DynamicDataTypeSupport_initialize_rawI(
    struct DDS_DynamicDataTypeSupport * self,
    DDS_UnsignedLong max_serialized_size,
    DDS_Boolean is_keyed,
    const struct DDS_DynamicDataTypeProperty_t * props);

extern DDSCDllExport
struct DDS_DynamicDataTypeSupport *DDS_DynamicDataTypeSupport_new_rawI(
    DDS_UnsignedLong max_serialized_size,
    DDS_Boolean is_keyed,
    const struct DDS_DynamicDataTypeProperty_t * props);

extern DDSCDllExport
void DDS_DynamicDataTypeSupport_finalize(
    struct DDS_DynamicDataTypeSupport * self);

extern DDSCDllExport
void DDS_DynamicDataTypeSupport_delete(
    struct DDS_DynamicDataTypeSupport * self);

extern DDSCDllExport
DDS_ReturnCode_t DDS_DynamicDataTypeSupport_register_type(
    struct DDS_DynamicDataTypeSupport * self,
    DDS_DomainParticipant* participant,
    const char* type_name);

extern DDSCDllExport
DDS_ReturnCode_t DDS_DynamicDataTypeSupport_unregister_type(
    struct DDS_DynamicDataTypeSupport * self,
    DDS_DomainParticipant* participant,
    const char* type_name);

extern DDSCDllExport
const char* DDS_DynamicDataTypeSupport_get_type_name(
    const struct DDS_DynamicDataTypeSupport * self);

extern DDSCDllExport
const struct DDS_TypeCode *DDS_DynamicDataTypeSupport_get_data_type(
    const struct DDS_DynamicDataTypeSupport *self);

extern DDSCDllExport
DDS_DynamicData* DDS_DynamicDataTypeSupport_create_data(
    struct DDS_DynamicDataTypeSupport * self);

extern DDSCDllExport
DDS_DynamicData* DDS_DynamicDataTypeSupport_create_data_ex(
    struct DDS_DynamicDataTypeSupport * self,
    DDS_Boolean allocatePointers);

extern DDSCDllExport
DDS_ReturnCode_t DDS_DynamicDataTypeSupport_delete_data(
    struct DDS_DynamicDataTypeSupport * self,
    DDS_DynamicData* a_data);

extern DDSCDllExport
DDS_ReturnCode_t DDS_DynamicDataTypeSupport_delete_data_ex(
    struct DDS_DynamicDataTypeSupport * self,
    DDS_DynamicData* a_data,
    DDS_Boolean deletePointers);

extern DDSCDllExport
void DDS_DynamicDataTypeSupport_print_data(
    const struct DDS_DynamicDataTypeSupport * self,
    const DDS_DynamicData* a_data);

extern DDSCDllExport
DDS_ReturnCode_t DDS_DynamicDataTypeSupport_copy_data(
    const struct DDS_DynamicDataTypeSupport * self,
    DDS_DynamicData* dest,
    const DDS_DynamicData* source);

extern DDSCDllExport
DDS_ReturnCode_t DDS_DynamicDataTypeSupport_initialize_data(
    const struct DDS_DynamicDataTypeSupport * self,
    DDS_DynamicData* a_data);

extern DDSCDllExport
DDS_ReturnCode_t DDS_DynamicDataTypeSupport_initialize_data_ex(
    const struct DDS_DynamicDataTypeSupport * self,
    DDS_DynamicData* a_data, DDS_Boolean allocatePointers);

extern DDSCDllExport
DDS_ReturnCode_t DDS_DynamicDataTypeSupport_finalize_data(
    const struct DDS_DynamicDataTypeSupport * self,
    DDS_DynamicData* a_data);

extern DDSCDllExport
DDS_ReturnCode_t DDS_DynamicDataTypeSupport_finalize_data_ex(
    const struct DDS_DynamicDataTypeSupport * self,
    DDS_DynamicData* a_data, DDS_Boolean deletePointers);



#if defined(RTI_WIN32) || defined(RTI_WINCE)
  #pragma warning(push)
  #pragma warning(disable:4190)
#elif defined(RTI_DARWIN)
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wreturn-type-c-linkage"
#endif

DDS_SEQUENCE(DDS_DynamicDataSeq, DDS_DynamicData);

#if defined(RTI_WIN32) || defined(RTI_WINCE)
  /* restore extern "C"-related warning */
  #pragma warning(pop)
#elif defined(RTI_DARWIN)
  #pragma clang diagnostic pop
#endif

#ifndef RTI_CPP
DDS_DATAWRITER_C(DDS_DynamicDataWriter, DDS_DynamicData);

/*ce \dref_DynamicDataWriter_create_data_w_property
 */
DDS_DynamicData* DDS_DynamicDataWriter_create_data_w_property(
        DDS_DynamicDataWriter* writer, 
        const struct DDS_DynamicDataProperty_t * property);

DDS_DATAREADER_C(DDS_DynamicDataReader, DDS_DynamicDataSeq, DDS_DynamicData);

/*ce \dref_DynamicDataReader_create_data_w_property
 */
DDS_DynamicData* DDS_DynamicDataReader_create_data_w_property(
        DDS_DynamicDataReader* reader, 
        const struct DDS_DynamicDataProperty_t * property);

#endif

#ifdef __cplusplus
    }	/* extern "C" */
#endif


#endif /* dds_c_dynamicdata_h */

/* (c) Copyright 2003-2015, Real-Time Innovations, Inc. All rights reserved. */
/*
 * @(#)cdr_stream_impl.h    generated by: makeheader    Fri Feb 16 13:51:31 2018
 *
 *		built from:	stream_impl.ifc
 */

#ifndef cdr_stream_impl_h
#define cdr_stream_impl_h


 #ifndef osapi_type_h
    #include "osapi/osapi_type.h"
 #endif
 #ifndef osapi_type_h
    #include "osapi/osapi_type.h"
 #endif
 #ifndef osapi_alignment_h
    #include "osapi/osapi_alignment.h"
 #endif
 #ifndef osapi_bufferUtils_h
    #include "osapi/osapi_bufferUtils.h"
 #endif
 #ifndef reda_buffer_h
    #include "reda/reda_buffer.h"
 #endif
 
#ifdef __cplusplus
    extern "C" {
#endif

struct RTICdrStreamXTypesState {
    /* Set to RTI_TRUE to not serialize the RTI_CDR_PID_LIST_END
     * paramaterId
     * 
     * The only situation in which this flag is set to TRUE is during the
     * serialization of a base type when using struct inheritance in a mutable
     * type.
     */
    RTIBool skipListEndId;
    /* Indicates whether or not to use extended ID encapsulation for 
       non primitive fields.
     */
    RTIBool useExtendedId;
    /* Indicates if a sample is unassignable
     */
    RTIBool unassignable;
};

struct RTICdrStreamState {
    char * buffer;
    char * relativeBuffer;
    int bufferLength;
};

struct RTICdrStream {
    /*i
      An 8 byte aligned offset from the realbuff pointer.
      CDR assums that the initial position in the stream is 8 byte aligned.
    */
    char *_buffer;
    /*i 
      Memory address from which we will do the alignment 
    */
    char *_relativeBuffer;
    /* Only used in resetAlignment */
    char * _tmpRelativeBuffer;
    /*i
      Total allocated length of the buffer.
    */ 
    int _bufferLength;
    /*i
      Current position in the buffer.
    */
    char *_currentPosition;
    /*i
      If RTI_TRUE, then deserialize methods will flip contents
     */
    RTIBool _needByteSwap;
    /*i
      Endianess of the stream
    */
    RTICdrEndian _endian;
    /*i
      Native endianess of the system
    */
    RTICdrEndian _nativeEndian;
    /*i
      A 32 bit buffer for storing bits of bit-fields
    */
    RTICdrUnsignedLong _bitBuffer;
    /*i
      Current length of the bitBuffer
    */
    int _bitBufferLength;
    /*i
      data encapsulation kind identifier
    */
    RTICdrUnsignedShort _encapsulationKind;
    /*i
      data encapsulation options of specific kind
    */
    RTICdrUnsignedShort _encapsulationOptions;
    /*i
     * Indicates whether or not the CDR stream is dirty. This flag is used to
     * support the generation batches serialized with 4.2e alignment.
     */
    RTIBool _dirty;
    /*i 
      Clear memory on alignment
    */
    RTIBool _zeroOnAlign;
    /*i 
      Pointer to user data
    */ 
    void *_userData;
    /*i
    */
    struct RTICdrStreamXTypesState _xTypesState;
};



#ifdef RTI_ENDIAN_LITTLE
    #define RTICdrStream_setEndianMacro(me, endian)                        \
        (((me)->_endian = (endian)),                                       \
         ((me)->_needByteSwap = ((endian) == RTI_CDR_ENDIAN_LITTLE) ?      \
            RTI_FALSE:                                                     \
            RTI_TRUE),                                                     \
         ((me)->_encapsulationKind = ((endian) == RTI_CDR_ENDIAN_LITTLE) ? \
            RTI_CDR_ENCAPSULATION_ID_CDR_LE:                               \
            RTI_CDR_ENCAPSULATION_ID_CDR_BE))
#else
    #define RTICdrStream_setEndianMacro(me, endian)                     \
        (((me)->_endian = (endian)),                                    \
         ((me)->_needByteSwap = ((endian) == RTI_CDR_ENDIAN_BIG) ?      \
            RTI_FALSE:                                                  \
            RTI_TRUE),                                                  \
         ((me)->_encapsulationKind = ((endian) == RTI_CDR_ENDIAN_BIG) ? \
            RTI_CDR_ENCAPSULATION_ID_CDR_BE:                            \
            RTI_CDR_ENCAPSULATION_ID_CDR_LE))
#endif /* RTI_ENDIAN_LITTLE */

#ifndef RTI_PRECONDITION_TEST
  #define RTICdrStream_setEndian RTICdrStream_setEndianMacro
#endif /* RTI_PRECONDITION_TEST */

#define RTICdrStream_getEndianMacro(me) \
        ((me)->_endian)

#ifndef RTI_PRECONDITION_TEST
  #define RTICdrStream_getEndian RTICdrStream_getEndianMacro
#endif /* RTI_PRECONDITION_TEST */

#define RTICdrStreamState_init(me) \
    RTIOsapiMemory_zero((me), sizeof(struct RTICdrStreamState))

#ifdef RTI_ENDIAN_LITTLE
  #define RTICdrStream_initMacro(me) \
    RTICdrStream_setEndianMacro((me), RTI_CDR_ENDIAN_LITTLE); \
    (me)->_nativeEndian = RTI_CDR_ENDIAN_LITTLE;\
    (me)->_encapsulationOptions = RTI_CDR_ENCAPSULATION_OPTIONS_NONE; \
    (me)->_zeroOnAlign = RTI_FALSE
#else
  #define RTICdrStream_initMacro(me) \
    RTICdrStream_setEndianMacro((me), RTI_CDR_ENDIAN_BIG); \
    (me)->_nativeEndian = RTI_CDR_ENDIAN_BIG; \
    (me)->_encapsulationOptions = RTI_CDR_ENCAPSULATION_OPTIONS_NONE; \
    (me)->_zeroOnAlign = RTI_FALSE
#endif

#define RTICdrStream_initFromStreamMacro(me, srcStream) \
    (me)->_needByteSwap = (srcStream)->_needByteSwap; \
    (me)->_endian = (srcStream)->_endian; \
    (me)->_nativeEndian = (srcStream)->_nativeEndian; \
    (me)->_encapsulationKind = (srcStream)->_encapsulationKind; \
    (me)->_encapsulationOptions = (srcStream)->_encapsulationOptions; \
    (me)->_zeroOnAlign = (srcStream)->_zeroOnAlign;

#define RTICdrStream_setMacro(me, buffer, length) \
    (me)->_buffer = (buffer); \
    (me)->_relativeBuffer = (me)->_buffer; \
    (me)->_bufferLength = (length); \
    (me)->_currentPosition = (me)->_buffer; \
    (me)->_bitBuffer = 0; \
    (me)->_bitBufferLength = 0; \
    (me)->_dirty = RTI_FALSE; \
    (me)->_userData = NULL; \
    (me)->_xTypesState.skipListEndId = RTI_FALSE; \
    (me)->_xTypesState.useExtendedId = RTI_FALSE; \
    (me)->_xTypesState.unassignable = RTI_FALSE
#ifndef RTI_PRECONDITION_TEST
  #define RTICdrStream_set RTICdrStream_setMacro
#endif /* RTI_PRECONDITION_TEST */

/* cast required to quiet VS2005 compiler warnings */
#define RTICdrStream_getCurrentPositionOffsetMacro(me) \
    ((RTI_INT32)((me)->_currentPosition - (me)->_buffer))
#ifndef RTI_PRECONDITION_TEST
  #define RTICdrStream_getCurrentPositionOffset \
     RTICdrStream_getCurrentPositionOffsetMacro
#endif /* RTI_PRECONDITION_TEST */

/* cast required to quiet VS2005 compiler warnings */
#define RTICdrStream_getRelativeCurrentPositionOffsetMacro(me) \
    ((RTI_INT32)((me)->_currentPosition - (me)->_relativeBuffer))
#ifndef RTI_PRECONDITION_TEST
  #define RTICdrStream_getRelativeCurrentPositionOffset \
     RTICdrStream_getRelativeCurrentPositionOffsetMacro
#endif /* RTI_PRECONDITION_TEST */

#define RTICdrStream_setCurrentPositionOffsetFast(me, offset)  \
    (me)->_currentPosition = (me)->_buffer + (offset)

#define RTICdrStream_getRemainderMacro(me) \
  ((me)->_bufferLength - RTICdrStream_getCurrentPositionOffsetMacro(me))
#ifndef RTI_PRECONDITION_TEST
  #define RTICdrStream_getRemainder RTICdrStream_getRemainderMacro
#endif /* RTI_PRECONDITION_TEST */

#define RTICdrStream_getCurrentPositionMacro(me) \
  ((me)->_currentPosition)
#ifndef RTI_PRECONDITION_TEST
  #define RTICdrStream_getCurrentPosition \
     RTICdrStream_getCurrentPositionMacro
#endif /* RTI_PRECONDITION_TEST */

#define RTICdrStream_setCurrentPositionMacro(me, newPosition) \
  ((me)->_currentPosition = (newPosition))
#ifndef RTI_PRECONDITION_TEST
  #define RTICdrStream_setCurrentPosition \
     RTICdrStream_setCurrentPositionMacro
#endif /* RTI_PRECONDITION_TEST */

#define RTICdrStream_getBufferMacro(me) \
  ((me)->_buffer)
#ifndef RTI_PRECONDITION_TEST
  #define RTICdrStream_getBuffer \
     RTICdrStream_getBufferMacro
#endif /* RTI_PRECONDITION_TEST */

#define RTICdrStream_getBufferLengthMacro(me) \
  ((me)->_bufferLength)
#ifndef RTI_PRECONDITION_TEST
  #define RTICdrStream_getBufferLength \
     RTICdrStream_getBufferLengthMacro
#endif /* RTI_PRECONDITION_TEST */

#define RTICdrStream_setBufferLengthMacro(me, newLength) \
  ((me)->_bufferLength = (newLength))
#ifndef RTI_PRECONDITION_TEST
  #define RTICdrStream_setBufferLength \
     RTICdrStream_setBufferLengthMacro
#endif /* RTI_PRECONDITION_TEST */

#define RTICdrStream_checkSizeMacro(me, size) \
  ((RTICdrStream_getCurrentPositionOffset((me)) >        \
    (int)((me)->_bufferLength - (size))) ? RTI_FALSE : RTI_TRUE)
#ifndef RTI_PRECONDITION_TEST
  #define RTICdrStream_checkSize RTICdrStream_checkSizeMacro
#endif /* RTI_PRECONDITION_TEST */

#define RTICdrStream_pushStateMacro(me, state, newLength) \
  (state)->buffer = (me)->_buffer; \
  (state)->relativeBuffer = (me)->_relativeBuffer; \
  (state)->bufferLength = (me)->_bufferLength; \
  if ((newLength) < 0) { \
      (me)->_bufferLength -= (int)((me)->_currentPosition - (me)->_buffer); \
  } else { \
      (me)->_bufferLength = (newLength); \
  } \
  (me)->_buffer = (me)->_currentPosition; \
  (me)->_relativeBuffer = (me)->_currentPosition
  
#ifndef RTI_PRECONDITION_TEST
  #define RTICdrStream_pushState \
     RTICdrStream_pushStateMacro
#endif /* RTI_PRECONDITION_TEST */

#define RTICdrStream_popStateMacro(me, state) \
  (me)->_bufferLength = (state)->bufferLength; \
  (me)->_buffer = (state)->buffer;           \
  (me)->_relativeBuffer = (state)->relativeBuffer
#ifndef RTI_PRECONDITION_TEST
  #define RTICdrStream_popState \
     RTICdrStream_popStateMacro
#endif /* RTI_PRECONDITION_TEST */

#define RTICdrStream_popStateNoAlignMacro(me, state) \
  (me)->_bufferLength = (state)->bufferLength; \
  (me)->_buffer = (state)->buffer
#ifndef RTI_PRECONDITION_TEST
  #define RTICdrStream_popStateNoAlign \
     RTICdrStream_popStateNoAlignMacro
#endif /* RTI_PRECONDITION_TEST */

/*
 * CORE-7296: we keep resetAlignment and resetAlignmentWithOffset separate
 * to prioritize performance over avoiding code duplication.
 */
#define RTICdrStream_resetAlignmentMacro(me) \
    (((me)->_tmpRelativeBuffer = (me)->_relativeBuffer), \
     ((me)->_relativeBuffer = (me)->_currentPosition), \
     ((me)->_tmpRelativeBuffer))
#ifndef RTI_PRECONDITION_TEST
  #define RTICdrStream_resetAlignment \
     RTICdrStream_resetAlignmentMacro
#endif /* RTI_PRECONDITION_TEST */

#define RTICdrStream_resetAlignmentWithOffsetMacro(me,offset) \
    (((me)->_tmpRelativeBuffer = (me)->_relativeBuffer), \
    ((me)->_relativeBuffer = ((me)->_currentPosition - (offset))), \
    (me)->_tmpRelativeBuffer)
#ifndef RTI_PRECONDITION_TEST
  #define RTICdrStream_resetAlignmentWithOffset \
     RTICdrStream_resetAlignmentWithOffsetMacro
#endif /* RTI_PRECONDITION_TEST */

#define RTICdrStream_restoreAlignmentMacro(me,position) \
    (me)->_relativeBuffer = (position)
#ifndef RTI_PRECONDITION_TEST
  #define RTICdrStream_restoreAlignment \
     RTICdrStream_restoreAlignmentMacro
#endif /* RTI_PRECONDITION_TEST */

#define RTICdrStream_isDirtyMacro(me) \
    ((me)->_dirty)
#ifndef RTI_PRECONDITION_TEST
  #define RTICdrStream_isDirty \
     RTICdrStream_isDirtyMacro
#endif /* RTI_PRECONDITION_TEST */

#define RTICdrStream_setDirtyBitMacro(me, value) \
    (me)->_dirty = (value)
#ifndef RTI_PRECONDITION_TEST
  #define RTICdrStream_setDirtyBit \
     RTICdrStream_setDirtyBitMacro
#endif /* RTI_PRECONDITION_TEST */

#define RTICdrStream_isZeroOnAlignMacro(me) \
    ((me)->_zeroOnAlign)
#ifndef RTI_PRECONDITION_TEST
  #define RTICdrStream_isZeroOnAlign \
     RTICdrStream_isZeroOnAlignMacro
#endif /* RTI_PRECONDITION_TEST */

#define RTICdrStream_setZeroOnAlignMacro(me, value) \
    (me)->_zeroOnAlign = (value)
#ifndef RTI_PRECONDITION_TEST
  #define RTICdrStream_setZeroOnAlign \
     RTICdrStream_setZeroOnAlignMacro
#endif /* RTI_PRECONDITION_TEST */

/* ----------------------------------------------------------------- */

#define RTICdrStream_alignFastMacro(me, align)  \
    (me)->_currentPosition = (me)->_relativeBuffer +    \
     RTIOsapiAlignment_alignSizeUp(            \
        RTICdrStream_getRelativeCurrentPositionOffset((me)), (align))
#ifndef RTI_PRECONDITION_TEST
  #define RTICdrStream_alignFast RTICdrStream_alignFastMacro
#endif /* RTI_PRECONDITION_TEST */



  typedef RTI_UINT8 RTICdr1Byte;
  typedef RTI_UINT16 RTICdr2Byte;
  typedef RTI_UINT32 RTICdr4Byte;
  typedef struct { char bytes[8]; } RTICdr8Byte;
  typedef struct { char bytes[16]; } RTICdr16Byte;



#define RTICdrStream_skipNByteFastMacro(me, n)            \
    ((me)->_currentPosition+=n)

#define RTICdrStream_serialize1ByteFastMacro(me, in)      \
    *((me)->_currentPosition++) = *((char *)(in))
				    
#define RTICdrStream_deserialize1ByteFastMacro(me, out)   \
    *((char *)(out)) = *((me)->_currentPosition++)

#define RTICdrStream_serialize1ByteFromStreamFastMacro(me, in) \
    *((me)->_currentPosition++) = *((in)->_currentPosition++)

#define RTICdrStream_equal1ByteFromStreamFastMacro(me, other) \
    (*((me)->_currentPosition) == *((other)->_currentPosition))

#define RTICdrStream_equalZero1ByteFastMacro(me)          \
    (*((me)->_currentPosition) == 0)

#define RTICdrStream_serialize1ByteFrom2BytesFastMacro(me, in) \
    (((me)->_needByteSwap) ?                              \
     (void)(                                              \
      *((me)->_currentPosition++) = *((char *)(in)    )   \
     ) :                                                  \
     (void)(                                              \
      *(RTICdr1Byte *)((me)->_currentPosition) = *((char *)(in)+1),\
      (me)->_currentPosition += RTI_CDR_OCTET_SIZE        \
     )                                                    \
    )

#define RTICdrStream_deserialize1ByteTo2BytesFastMacro(me, out)   \
    (((me)->_needByteSwap) ?                              \
     (void)(                                              \
      *((char *)(out) + 1) = 0,                           \
      *((char *)(out)    ) = *((me)->_currentPosition++)  \
     ) :                                                  \
     (void)(                                              \
      *((char*)(out) + 1) = *(RTICdr1Byte *)((me)->_currentPosition), \
      *((char*)(out)    ) = 0,                                        \
      (me)->_currentPosition += RTI_CDR_OCTET_SIZE        \
     )                                                    \
    )

#define RTICdrStream_serialize1ByteFrom4BytesFastMacro(me, in) \
    (((me)->_needByteSwap) ?                              \
     (void)(                                              \
      *((me)->_currentPosition++) = *((char *)(in)    )   \
     ) :                                                  \
     (void)(                                              \
      *(RTICdr1Byte *)((me)->_currentPosition) = *((char *)(in)+3),\
      (me)->_currentPosition += RTI_CDR_OCTET_SIZE        \
     )                                                    \
   )

#define RTICdrStream_deserialize1ByteTo4BytesFastMacro(me, out)   \
    (((me)->_needByteSwap) ?                              \
     (void)(                                              \
      *((char *)(out) + 1) = 0,                           \
      *((char *)(out)    ) = *((me)->_currentPosition++)  \
     ) :                                                  \
     (void)(                                              \
      *((char*)(out) + 3) = *(RTICdr1Byte *)((me)->_currentPosition), \
      *((char*)(out) + 2) = 0,                                        \
      *((char*)(out) + 1) = 0,                                        \
      *((char*)(out)    ) = 0,                                        \
      (me)->_currentPosition += RTI_CDR_OCTET_SIZE        \
     )                                                    \
    )

#define RTICdrStream_serialize2ByteFastMacro(me, in)      \
    (((me)->_needByteSwap) ?                              \
     (void)(                                              \
      *((me)->_currentPosition++) = *((char *)(in) + 1),  \
      *((me)->_currentPosition++) = *((char *)(in)    )   \
     ) :                                                  \
     (void)(                                              \
      *(RTICdr2Byte *)((me)->_currentPosition) = (*(in)), \
      (me)->_currentPosition += RTI_CDR_SHORT_SIZE        \
     )                                                    \
    )

#define RTICdrStream_deserialize2ByteFastMacro(me, out)   \
    (((me)->_needByteSwap) ?                              \
     (void)(                                              \
      *((char *)(out) + 1) = *((me)->_currentPosition++), \
      *((char *)(out)    ) = *((me)->_currentPosition++)  \
     ) :                                                  \
     (void)(                                              \
      *(out) = *(RTICdr2Byte *)((me)->_currentPosition),  \
      (me)->_currentPosition += RTI_CDR_SHORT_SIZE        \
     )                                                    \
    )

#define RTICdrStream_serialize2ByteFromStreamFastMacro(me, in) \
    (((me)->_needByteSwap == (in)->_needByteSwap) ?       \
     (void)(                                              \
      *(RTICdr2Byte *)((me)->_currentPosition) = *(RTICdr2Byte *)((in)->_currentPosition), \
      (me)->_currentPosition += RTI_CDR_SHORT_SIZE,       \
      (in)->_currentPosition += RTI_CDR_SHORT_SIZE        \
     ) :                                                  \
     (void)(                                              \
      *((me)->_currentPosition + 1) = *((in)->_currentPosition++), \
      *((me)->_currentPosition    ) = *((in)->_currentPosition++), \
      (me)->_currentPosition += RTI_CDR_SHORT_SIZE        \
     )                                                    \
    )

#define RTICdrStream_equal2ByteFromStreamFastMacro(me, other) \
    (((me)->_needByteSwap == (other)->_needByteSwap) ?    \
     (*(RTICdr2Byte *)((me)->_currentPosition) == *(RTICdr2Byte *)((other)->_currentPosition) \
     ) : \
     ((*((me)->_currentPosition + 1) == *((other)->_currentPosition    )) && \
      (*((me)->_currentPosition    ) == *((other)->_currentPosition + 1))))

#define RTICdrStream_equalZero2ByteFastMacro(me)          \
    (*(RTICdr2Byte *)((me)->_currentPosition) == 0)

#define RTICdrStream_serialize4ByteFastMacro(me, in)      \
    (((me)->_needByteSwap) ?                              \
     (void)(                                              \
      *((me)->_currentPosition++) = *((char *)(in) + 3),  \
      *((me)->_currentPosition++) = *((char *)(in) + 2),  \
      *((me)->_currentPosition++) = *((char *)(in) + 1),  \
      *((me)->_currentPosition++) = *((char *)(in)    )   \
     ) :                                                  \
     (void)(                                              \
      *(RTICdr4Byte *)((me)->_currentPosition) = (*(in)), \
      (me)->_currentPosition += RTI_CDR_LONG_SIZE         \
     )                                                    \
    )

#define RTICdrStream_deserialize4ByteFastMacro(me, out)   \
    (((me)->_needByteSwap) ?                              \
     (void)(                                              \
      *((char *)(out) + 3) = *((me)->_currentPosition++), \
      *((char *)(out) + 2) = *((me)->_currentPosition++), \
      *((char *)(out) + 1) = *((me)->_currentPosition++), \
      *((char *)(out)    ) = *((me)->_currentPosition++)  \
     ) :                                                  \
     (void)(                                              \
      *(out) = *(RTICdr4Byte *)((me)->_currentPosition),  \
      (me)->_currentPosition += RTI_CDR_LONG_SIZE         \
     )                                                    \
    )

#define RTICdrStream_serialize4ByteFromStreamFastMacro(me, in) \
    (((me)->_needByteSwap == (in)->_needByteSwap) ?       \
     (void)(                                              \
      *(RTICdr4Byte *)((me)->_currentPosition) = *(RTICdr4Byte *)((in)->_currentPosition), \
      (me)->_currentPosition += RTI_CDR_LONG_SIZE,        \
      (in)->_currentPosition += RTI_CDR_LONG_SIZE         \
     ) :                                                  \
     (void)(                                              \
      *((me)->_currentPosition + 3) = *((in)->_currentPosition++), \
      *((me)->_currentPosition + 2) = *((in)->_currentPosition++), \
      *((me)->_currentPosition + 1) = *((in)->_currentPosition++), \
      *((me)->_currentPosition    ) = *((in)->_currentPosition++), \
      (me)->_currentPosition += RTI_CDR_LONG_SIZE         \
     )                                                    \
    )

#define RTICdrStream_equal4ByteFromStreamFastMacro(me, other) \
    (((me)->_needByteSwap == (other)->_needByteSwap) ?    \
     (*(RTICdr4Byte *)((me)->_currentPosition) == *(RTICdr4Byte *)((other)->_currentPosition) \
     ) : \
     ((*((me)->_currentPosition + 3) == *((other)->_currentPosition    )) && \
      (*((me)->_currentPosition + 2) == *((other)->_currentPosition + 1)) && \
      (*((me)->_currentPosition + 1) == *((other)->_currentPosition + 2)) && \
      (*((me)->_currentPosition    ) == *((other)->_currentPosition + 3))))

#define RTICdrStream_equalZero4ByteFastMacro(me)          \
    (*(RTICdr4Byte *)((me)->_currentPosition) == 0)

#define RTICdrStream_serialize8ByteFastMacro(me, in)      \
    (((me)->_needByteSwap) ?                              \
     (void)(                                              \
      *((me)->_currentPosition++) = *((char *)(in) + 7),  \
      *((me)->_currentPosition++) = *((char *)(in) + 6),  \
      *((me)->_currentPosition++) = *((char *)(in) + 5),  \
      *((me)->_currentPosition++) = *((char *)(in) + 4),  \
      *((me)->_currentPosition++) = *((char *)(in) + 3),  \
      *((me)->_currentPosition++) = *((char *)(in) + 2),  \
      *((me)->_currentPosition++) = *((char *)(in) + 1),  \
      *((me)->_currentPosition++) = *((char *)(in)    )   \
     ) :                                                  \
     (void)(                                              \
      *(RTICdr8Byte *)((me)->_currentPosition) = (*(in)), \
      (me)->_currentPosition += RTI_CDR_LONG_LONG_SIZE    \
     )                                                    \
    )

#define RTICdrStream_deserialize8ByteFastMacro(me, out)   \
    (((me)->_needByteSwap) ?                              \
     (void)(                                              \
      *((char *)(out) + 7) = *((me)->_currentPosition++), \
      *((char *)(out) + 6) = *((me)->_currentPosition++), \
      *((char *)(out) + 5) = *((me)->_currentPosition++), \
      *((char *)(out) + 4) = *((me)->_currentPosition++), \
      *((char *)(out) + 3) = *((me)->_currentPosition++), \
      *((char *)(out) + 2) = *((me)->_currentPosition++), \
      *((char *)(out) + 1) = *((me)->_currentPosition++), \
      *((char *)(out)    ) = *((me)->_currentPosition++)  \
     ) :                                                  \
     (void)(                                              \
      *(out) = *(RTICdr8Byte *)((me)->_currentPosition),  \
      (me)->_currentPosition += RTI_CDR_LONG_LONG_SIZE    \
     )                                                    \
    )

#define RTICdrStream_serialize8ByteFromStreamFastMacro(me, in) \
    (((me)->_needByteSwap == (in)->_needByteSwap) ?       \
     (void)(                                              \
      *(RTICdr8Byte *)((me)->_currentPosition) = *(RTICdr8Byte *)((in)->_currentPosition), \
      (me)->_currentPosition += RTI_CDR_LONG_LONG_SIZE,   \
      (in)->_currentPosition += RTI_CDR_LONG_LONG_SIZE    \
     ) :                                                  \
     (void)(                                              \
      *((me)->_currentPosition + 7) = *((in)->_currentPosition++), \
      *((me)->_currentPosition + 6) = *((in)->_currentPosition++), \
      *((me)->_currentPosition + 5) = *((in)->_currentPosition++), \
      *((me)->_currentPosition + 4) = *((in)->_currentPosition++), \
      *((me)->_currentPosition + 3) = *((in)->_currentPosition++), \
      *((me)->_currentPosition + 2) = *((in)->_currentPosition++), \
      *((me)->_currentPosition + 1) = *((in)->_currentPosition++), \
      *((me)->_currentPosition    ) = *((in)->_currentPosition++), \
      (me)->_currentPosition += RTI_CDR_LONG_LONG_SIZE    \
     )                                                    \
    )

#define RTICdrStream_equal8ByteFromStreamFastMacro(me, other) \
    (((me)->_needByteSwap == (other)->_needByteSwap) ?    \
     /*(*(RTICdr8Byte *)((me)->_currentPosition) == *(RTICdr8Byte *)((other)->_currentPosition)*/ \
     (RTIOsapiMemory_compare((me)->_currentPosition, (other)->_currentPosition, 8) == 0 \
     ) : \
     ((*((me)->_currentPosition + 7) == *((other)->_currentPosition    )) && \
      (*((me)->_currentPosition + 6) == *((other)->_currentPosition + 1)) && \
      (*((me)->_currentPosition + 5) == *((other)->_currentPosition + 2)) && \
      (*((me)->_currentPosition + 4) == *((other)->_currentPosition + 3)) && \
      (*((me)->_currentPosition + 3) == *((other)->_currentPosition + 4)) && \
      (*((me)->_currentPosition + 2) == *((other)->_currentPosition + 5)) && \
      (*((me)->_currentPosition + 1) == *((other)->_currentPosition + 6)) && \
      (*((me)->_currentPosition    ) == *((other)->_currentPosition + 7))))

#define RTICdrStream_equalZero8ByteFastMacro(me)          \
    ((*(RTICdr4Byte *)((me)->_currentPosition) == 0) &&   \
     (*(RTICdr4Byte *)((me)->_currentPosition + 4) == 0))

#define RTICdrStream_serialize16ByteFastMacro(me, in)     \
    (((me)->_needByteSwap) ?                              \
     (void)(                                              \
      *((me)->_currentPosition++) = *((char *)(in) + 15), \
      *((me)->_currentPosition++) = *((char *)(in) + 14), \
      *((me)->_currentPosition++) = *((char *)(in) + 13), \
      *((me)->_currentPosition++) = *((char *)(in) + 12), \
      *((me)->_currentPosition++) = *((char *)(in) + 11), \
      *((me)->_currentPosition++) = *((char *)(in) + 10), \
      *((me)->_currentPosition++) = *((char *)(in) +  9), \
      *((me)->_currentPosition++) = *((char *)(in) +  8), \
      *((me)->_currentPosition++) = *((char *)(in) +  7), \
      *((me)->_currentPosition++) = *((char *)(in) +  6), \
      *((me)->_currentPosition++) = *((char *)(in) +  5), \
      *((me)->_currentPosition++) = *((char *)(in) +  4), \
      *((me)->_currentPosition++) = *((char *)(in) +  3), \
      *((me)->_currentPosition++) = *((char *)(in) +  2), \
      *((me)->_currentPosition++) = *((char *)(in) +  1), \
      *((me)->_currentPosition++) = *((char *)(in)     )  \
     ) :                                                  \
     (void)(                                              \
      *(RTICdr16Byte *)((me)->_currentPosition) = (*(in)), \
      (me)->_currentPosition += RTI_CDR_LONG_DOUBLE_SIZE  \
     )                                                    \
    )

#define RTICdrStream_deserialize16ByteFastMacro(me, out)   \
    (((me)->_needByteSwap) ?                               \
     (void)(                                               \
      *((char *)(out) + 15) = *((me)->_currentPosition++), \
      *((char *)(out) + 14) = *((me)->_currentPosition++), \
      *((char *)(out) + 13) = *((me)->_currentPosition++), \
      *((char *)(out) + 12) = *((me)->_currentPosition++), \
      *((char *)(out) + 11) = *((me)->_currentPosition++), \
      *((char *)(out) + 10) = *((me)->_currentPosition++), \
      *((char *)(out) +  9) = *((me)->_currentPosition++), \
      *((char *)(out) +  8) = *((me)->_currentPosition++), \
      *((char *)(out) +  7) = *((me)->_currentPosition++), \
      *((char *)(out) +  6) = *((me)->_currentPosition++), \
      *((char *)(out) +  5) = *((me)->_currentPosition++), \
      *((char *)(out) +  4) = *((me)->_currentPosition++), \
      *((char *)(out) +  3) = *((me)->_currentPosition++), \
      *((char *)(out) +  2) = *((me)->_currentPosition++), \
      *((char *)(out) +  1) = *((me)->_currentPosition++), \
      *((char *)(out)     ) = *((me)->_currentPosition++)  \
     ) :                                                   \
     (void)(                                               \
      *(out) = *(RTICdr16Byte *)((me)->_currentPosition),  \
      (me)->_currentPosition += RTI_CDR_LONG_DOUBLE_SIZE   \
     )                                                     \
    )

#define RTICdrStream_serialize16ByteFromStreamFastMacro(me, in) \
    (((me)->_needByteSwap == (in)->_needByteSwap) ?       \
     (void)(                                              \
      *(RTICdr16Byte *)((me)->_currentPosition) = *(RTICdr16Byte *)((in)->_currentPosition), \
      (me)->_currentPosition += RTI_CDR_LONG_DOUBLE_SIZE, \
      (in)->_currentPosition += RTI_CDR_LONG_DOUBLE_SIZE  \
     ) :                                                  \
     (void)(                                              \
      *((me)->_currentPosition + 15) = *((in)->_currentPosition++), \
      *((me)->_currentPosition + 14) = *((in)->_currentPosition++), \
      *((me)->_currentPosition + 13) = *((in)->_currentPosition++), \
      *((me)->_currentPosition + 12) = *((in)->_currentPosition++), \
      *((me)->_currentPosition + 11) = *((in)->_currentPosition++), \
      *((me)->_currentPosition + 10) = *((in)->_currentPosition++), \
      *((me)->_currentPosition +  9) = *((in)->_currentPosition++), \
      *((me)->_currentPosition +  8) = *((in)->_currentPosition++), \
      *((me)->_currentPosition +  7) = *((in)->_currentPosition++), \
      *((me)->_currentPosition +  6) = *((in)->_currentPosition++), \
      *((me)->_currentPosition +  5) = *((in)->_currentPosition++), \
      *((me)->_currentPosition +  4) = *((in)->_currentPosition++), \
      *((me)->_currentPosition +  3) = *((in)->_currentPosition++), \
      *((me)->_currentPosition +  2) = *((in)->_currentPosition++), \
      *((me)->_currentPosition +  1) = *((in)->_currentPosition++), \
      *((me)->_currentPosition     ) = *((in)->_currentPosition++), \
      (me)->_currentPosition += RTI_CDR_LONG_DOUBLE_SIZE  \
     )                                                    \
    )

#define RTICdrStream_equal16ByteFromStreamFastMacro(me, other) \
    (((me)->_needByteSwap == (other)->_needByteSwap) ?    \
     /*(*(RTICdr16Byte *)((me)->_currentPosition) == *(RTICdr16Byte *)((other)->_currentPosition)*/ \
     (RTIOsapiMemory_compare((me)->_currentPosition, (other)->_currentPosition, 16) == 0 \
     ) : \
     ((*((me)->_currentPosition + 15) == *((other)->_currentPosition     )) && \
      (*((me)->_currentPosition + 14) == *((other)->_currentPosition +  1)) && \
      (*((me)->_currentPosition + 13) == *((other)->_currentPosition +  2)) && \
      (*((me)->_currentPosition + 12) == *((other)->_currentPosition +  3)) && \
      (*((me)->_currentPosition + 11) == *((other)->_currentPosition +  4)) && \
      (*((me)->_currentPosition + 10) == *((other)->_currentPosition +  5)) && \
      (*((me)->_currentPosition +  9) == *((other)->_currentPosition +  6)) && \
      (*((me)->_currentPosition +  8) == *((other)->_currentPosition +  7)) && \
      (*((me)->_currentPosition +  7) == *((other)->_currentPosition +  8)) && \
      (*((me)->_currentPosition +  6) == *((other)->_currentPosition +  9)) && \
      (*((me)->_currentPosition +  5) == *((other)->_currentPosition + 10)) && \
      (*((me)->_currentPosition +  4) == *((other)->_currentPosition + 11)) && \
      (*((me)->_currentPosition +  3) == *((other)->_currentPosition + 12)) && \
      (*((me)->_currentPosition +  2) == *((other)->_currentPosition + 13)) && \
      (*((me)->_currentPosition +  1) == *((other)->_currentPosition + 14)) && \
      (*((me)->_currentPosition     ) == *((other)->_currentPosition + 15))))

#define RTICdrStream_equalZero16ByteFastMacro(me)         \
    ((*(RTICdr4Byte *)((me)->_currentPosition) == 0) &&   \
     (*(RTICdr4Byte *)((me)->_currentPosition + 4) == 0) && \
     (*(RTICdr4Byte *)((me)->_currentPosition + 8) == 0) && \
     (*(RTICdr4Byte *)((me)->_currentPosition + 12) == 0))

#ifndef RTI_PRECONDITION_TEST
  #define RTICdrStream_skipNByteFast RTICdrStream_skipNByteFastMacro
  #define RTICdrStream_serialize1ByteFast RTICdrStream_serialize1ByteFastMacro
  #define RTICdrStream_deserialize1ByteFast \
    RTICdrStream_deserialize1ByteFastMacro
  #define RTICdrStream_serialize2ByteFast RTICdrStream_serialize2ByteFastMacro
  #define RTICdrStream_deserialize2ByteFast \
    RTICdrStream_deserialize2ByteFastMacro
  #define RTICdrStream_serialize4ByteFast RTICdrStream_serialize4ByteFastMacro
  #define RTICdrStream_deserialize4ByteFast \
    RTICdrStream_deserialize4ByteFastMacro
  #define RTICdrStream_serialize8ByteFast RTICdrStream_serialize8ByteFastMacro
  #define RTICdrStream_deserialize8ByteFast \
    RTICdrStream_deserialize8ByteFastMacro
  #define RTICdrStream_serialize16ByteFast RTICdrStream_serialize16ByteFastMacro
  #define RTICdrStream_deserialize16ByteFast \
    RTICdrStream_deserialize16ByteFastMacro

  #define RTICdrStream_serialize1ByteFromStreamFast \
    RTICdrStream_serialize1ByteFromStreamFastMacro
  #define RTICdrStream_equal1ByteFromStreamFast \
    RTICdrStream_equal1ByteFromStreamFastMacro
  #define RTICdrStream_equalZero1ByteFast \
    RTICdrStream_equalZero1ByteFastMacro
  #define RTICdrStream_serialize2ByteFromStreamFast \
    RTICdrStream_serialize2ByteFromStreamFastMacro
  #define RTICdrStream_equal2ByteFromStreamFast \
    RTICdrStream_equal2ByteFromStreamFastMacro
  #define RTICdrStream_equalZero2ByteFast \
    RTICdrStream_equalZero2ByteFastMacro
  #define RTICdrStream_serialize4ByteFromStreamFast \
    RTICdrStream_serialize4ByteFromStreamFastMacro
  #define RTICdrStream_equal4ByteFromStreamFast \
    RTICdrStream_equal4ByteFromStreamFastMacro
  #define RTICdrStream_equalZero4ByteFast \
    RTICdrStream_equalZero4ByteFastMacro
  #define RTICdrStream_serialize8ByteFromStreamFast \
    RTICdrStream_serialize8ByteFromStreamFastMacro
  #define RTICdrStream_equal8ByteFromStreamFast \
    RTICdrStream_equal8ByteFromStreamFastMacro
  #define RTICdrStream_equalZero8ByteFast \
    RTICdrStream_equalZero8ByteFastMacro
  #define RTICdrStream_serialize16ByteFromStreamFast \
    RTICdrStream_serialize16ByteFromStreamFastMacro
  #define RTICdrStream_equal16ByteFromStreamFast \
    RTICdrStream_equal16ByteFromStreamFastMacro
  #define RTICdrStream_equalZero16ByteFast \
    RTICdrStream_equalZero16ByteFastMacro

  #define RTICdrStream_serialize1ByteFrom2BytesFast RTICdrStream_serialize1ByteFrom2BytesFastMacro
  #define RTICdrStream_deserialize1ByteTo2BytesFast RTICdrStream_deserialize1ByteTo2BytesFastMacro
  #define RTICdrStream_serialize1ByteFrom4BytesFast RTICdrStream_serialize1ByteFrom4BytesFastMacro
  #define RTICdrStream_deserialize1ByteTo4BytesFast RTICdrStream_deserialize1ByteTo4BytesFastMacro
#else

  RTICdrDllExport
  void RTICdrStream_skipNByteFast(struct RTICdrStream *me,
                                  const RTICdrUnsignedLong n);

  RTICdrDllExport
  void RTICdrStream_serialize1ByteFast(struct RTICdrStream *me,
				       const RTICdr1Byte *in);
  RTICdrDllExport
  void RTICdrStream_deserialize1ByteFast(struct RTICdrStream *me,
					 RTICdr1Byte *out);
  RTICdrDllExport
  void RTICdrStream_serialize2ByteFast(struct RTICdrStream *me,
				       const RTICdr2Byte *in);
  RTICdrDllExport
  void RTICdrStream_deserialize2ByteFast(struct RTICdrStream *me,
					 RTICdr2Byte *out);
  RTICdrDllExport
  void RTICdrStream_serialize4ByteFast(struct RTICdrStream *me,
				       const RTICdr4Byte* in);
  RTICdrDllExport
  void RTICdrStream_deserialize4ByteFast(struct RTICdrStream *me,
					 RTICdr4Byte* out);
  RTICdrDllExport
  void RTICdrStream_serialize8ByteFast(struct RTICdrStream *me,
				       const RTICdr8Byte* in);
  RTICdrDllExport
  void RTICdrStream_deserialize8ByteFast(struct RTICdrStream *me,
					 RTICdr8Byte *out);

  RTICdrDllExport
  void RTICdrStream_serialize16ByteFast(struct RTICdrStream *me,
					const RTICdr16Byte* in);
  RTICdrDllExport
  void RTICdrStream_deserialize16ByteFast(struct RTICdrStream *me,
					  RTICdr16Byte *out);

  RTICdrDllExport
  void RTICdrStream_serialize1ByteFromStreamFast(struct RTICdrStream *me,
                                                 struct RTICdrStream *in);
  RTICdrDllExport
  RTIBool RTICdrStream_equal1ByteFromStreamFast(const struct RTICdrStream *me,
                                                const struct RTICdrStream *other);
  RTICdrDllExport
  RTIBool RTICdrStream_equalZero1ByteFast(const struct RTICdrStream *me);

  RTICdrDllExport
  void RTICdrStream_serialize2ByteFromStreamFast(struct RTICdrStream *me,
                                                 struct RTICdrStream *in);
  RTICdrDllExport
  RTIBool RTICdrStream_equal2ByteFromStreamFast(const struct RTICdrStream *me,
                                                const struct RTICdrStream *other);
  RTICdrDllExport
  RTIBool RTICdrStream_equalZero2ByteFast(const struct RTICdrStream *me);

  RTICdrDllExport
  void RTICdrStream_serialize4ByteFromStreamFast(struct RTICdrStream *me,
                                                 struct RTICdrStream *in);
  RTICdrDllExport
  RTIBool RTICdrStream_equal4ByteFromStreamFast(const struct RTICdrStream *me,
                                                const struct RTICdrStream *other);
  RTICdrDllExport
  RTIBool RTICdrStream_equalZero4ByteFast(const struct RTICdrStream *me);

  RTICdrDllExport
  void RTICdrStream_serialize8ByteFromStreamFast(struct RTICdrStream *me,
                                                 struct RTICdrStream *in);
  RTICdrDllExport
  RTIBool RTICdrStream_equal8ByteFromStreamFast(const struct RTICdrStream *me,
                                                const struct RTICdrStream *other);
  RTICdrDllExport
  RTIBool RTICdrStream_equalZero8ByteFast(const struct RTICdrStream *me);

  RTICdrDllExport
  void RTICdrStream_serialize16ByteFromStreamFast(struct RTICdrStream *me,
                                                  struct RTICdrStream *in);
  RTICdrDllExport
  RTIBool RTICdrStream_equal16ByteFromStreamFast(const struct RTICdrStream *me,
                                                 const struct RTICdrStream *other);
  RTICdrDllExport
  RTIBool RTICdrStream_equalZero16ByteFast(const struct RTICdrStream *me);

  RTICdrDllExport 
  void RTICdrStream_serialize1ByteFrom2BytesFast(struct RTICdrStream *me,
					 	 const RTICdr2Byte *in);

  RTICdrDllExport 
  void RTICdrStream_deserialize1ByteTo2BytesFast(struct RTICdrStream *me,
					 	 RTICdr2Byte *out);

  RTICdrDllExport 
  void RTICdrStream_serialize1ByteFrom4BytesFast(struct RTICdrStream *me,
					 	 const RTICdr4Byte *in);

  RTICdrDllExport 
  void RTICdrStream_deserialize1ByteTo4BytesFast(struct RTICdrStream *me,
					 	 RTICdr4Byte *out);

#endif /* RTI_PRECONDITION_TEST */



     
#define RTICdrStream_flushBitsBuffer(me)                                    \
    ((RTICdrStream_serialize4Byte((me), (RTICdr4Byte *)(&(me)->_bitBuffer)) \
        == RTI_TRUE) ?                                                      \
     ((me)->_bitBufferLength = 0, (me)->_bitBuffer = 0, RTI_TRUE) :         \
     	(RTI_FALSE))
     
#define RTICdrStream_resetBitsBuffer(me)                                    \
    ((me)->_bitBufferLength = 0,                                            \
     (me)->_bitBuffer = 0, RTI_TRUE)

#define RTICdrStream_setBitsMacro(me, val, bitSize)         \
    ((me)->_bitBuffer = ((bitSize) >= 32) ?                 \
        *(val) :                                            \
        ((me)->_bitBuffer +                                 \
            ((*(val) & ((1 << (bitSize))-1))                \
            << (me)->_bitBufferLength)),                    \
    (me)->_bitBufferLength = ((bitSize) >= 32) ?            \
        (bitSize) :                                         \
        ((me)->_bitBufferLength + (bitSize)))
     
#define RTICdrStream_getBitsMacro(me, val, bitSize)         \
    (*(val) = ((bitSize) >=  32) ?                          \
        (me)->_bitBuffer :                                  \
        ((me)->_bitBuffer >>                                \
            (me)->_bitBufferLength) & ((1 << (bitSize))-1), \
    (me)->_bitBufferLength = ((bitSize) >= 32) ?            \
        (bitSize) :                                         \
        ((me)->_bitBufferLength + (bitSize)))

#define RTICdrStream_skipBitsMacro(me, bitSize)             \
    ((me)->_bitBufferLength = ((bitSize) >= 32) ?           \
        (bitSize) :                                         \
        ((me)->_bitBufferLength + (bitSize)))
     
#define RTICdrStream_serializeBits(me, val, bitSize)                    \
    ((((bitSize) + (me)->_bitBufferLength <= 32) ||                     \
         (RTICdrStream_flushBitsBuffer(me) == RTI_TRUE)) ?              \
        (RTICdrStream_setBitsMacro((me), (val), (bitSize)), RTI_TRUE) : \
     RTI_FALSE)
     

#define RTICdrStream_deserializeBits(me, val, bitSize)                \
    ((((me)->_bitBufferLength != 0 &&                                 \
       (bitSize) + (me)->_bitBufferLength <= 32)                      \
      || ((me)->_bitBufferLength = 0,                                 \
          RTICdrStream_deserialize4Byte((me), &(me)->_bitBuffer)) ) ? \
     (RTICdrStream_getBitsMacro((me), (val), (bitSize)), RTI_TRUE) :  \
     RTI_FALSE)

#define RTICdrStream_skipBits(me, bitSize)                            \
    (                                                                 \
     (                                                                \
      ((me)->_bitBufferLength != 0 && (bitSize) + (me)->_bitBufferLength <= 32) \
      ||                                                              \
      ((me)->_bitBufferLength = 0, RTICdrStream_skipNByte((me),4))    \
    ) ?                                                               \
     (RTICdrStream_skipBitsMacro((me), (bitSize)), RTI_TRUE) :        \
     RTI_FALSE)

#define RTICdrStream_skipBitsAndGetLength(me, bitSize)                \
    (                                                                 \
    char *previousPosition = me->_currentPosition;                    \
    RTICdrStream_skipBits(me, bitSize);                               \
    return me->_currentPosition - previousPosition;                   \
    )




   #define RTICdrStream_serializeCharFast(me, in) \
     RTICdrStream_serialize1ByteFast((me), (const RTICdr1Byte *)(in))

   #define RTICdrStream_deserializeCharFast(me, out) \
     RTICdrStream_deserialize1ByteFast((me), (RTICdr1Byte *)(out))

   #define RTICdrStream_serializeCharFromStreamFast(me, in) \
     RTICdrStream_serialize1ByteFromStreamFast((me), (in))

   #define RTICdrStream_equalCharFromStreamFast(me, in) \
     RTICdrStream_equal1ByteFromStreamFast((me), (in))

   #define RTICdrStream_skipCharFast(me) \
     RTICdrStream_skipNByteFast((me), RTI_CDR_CHAR_SIZE)

   #define RTICdrStream_serializeWcharFast(me, in) \
     RTICdrStream_serialize4ByteFast((me), (const RTICdr4Byte *)(in))

   #define RTICdrStream_deserializeWcharFast(me, out) \
     RTICdrStream_deserialize4ByteFast((me), (RTICdr4Byte *)(out))

   #define RTICdrStream_serializeWcharFromStreamFast(me, in) \
     RTICdrStream_serialize4ByteFromStreamFast((me), (in))

   #define RTICdrStream_equalWcharFromStreamFast(me, in) \
     RTICdrStream_equal4ByteFromStreamFast((me), (in))

   #define RTICdrStream_skipWcharFast(me) \
     RTICdrStream_skipNByteFast((me), RTI_CDR_WCHAR_SIZE)

   #define RTICdrStream_serializeOctetFast(me, in) \
     RTICdrStream_serialize1ByteFast((me), (const RTICdr1Byte *)(in))

   #define RTICdrStream_deserializeOctetFast(me, out) \
     RTICdrStream_deserialize1ByteFast((me), (RTICdr1Byte *)(out))

   #define RTICdrStream_serializeOctetFromStreamFast(me, in) \
     RTICdrStream_serialize1ByteFromStreamFast((me), (in))

   #define RTICdrStream_equalOctetFromStreamFast(me, in) \
     RTICdrStream_equal1ByteFromStreamFast((me), (in))

   #define RTICdrStream_skipOctetFast(me) \
     RTICdrStream_skipNByteFast((me), RTI_CDR_OCTET_SIZE)

   #define RTICdrStream_serializeShortFast(me, in) \
     RTICdrStream_serialize2ByteFast((me), (const RTICdr2Byte *)(in))

   #define RTICdrStream_deserializeShortFast(me, out) \
     RTICdrStream_deserialize2ByteFast((me), (RTICdr2Byte *)(out))

   #define RTICdrStream_serializeShortFromStreamFast(me, in) \
     RTICdrStream_serialize2ByteFromStreamFast((me), (in))

   #define RTICdrStream_equalShortFromStreamFast(me, in) \
     RTICdrStream_equal2ByteFromStreamFast((me), (in))

   #define RTICdrStream_skipShortFast(me) \
     RTICdrStream_skipNByteFast((me), RTI_CDR_SHORT_SIZE)

   #define RTICdrStream_serializeUnsignedShortFast(me, in) \
     RTICdrStream_serialize2ByteFast((me), (const RTICdr2Byte *)(in))

   #define RTICdrStream_deserializeUnsignedShortFast(me, out) \
     RTICdrStream_deserialize2ByteFast((me), (RTICdr2Byte *)(out))

   #define RTICdrStream_serializeUnsignedShortFromStreamFast(me, in) \
     RTICdrStream_serialize2ByteFromStreamFast((me), (in))

   #define RTICdrStream_equalUnsignedShortFromStreamFast(me, in) \
     RTICdrStream_equal2ByteFromStreamFast((me), (in))

   #define RTICdrStream_skipUnsignedShortFast(me) \
     RTICdrStream_skipNByteFast((me), RTI_CDR_UNSIGNED_SHORT_SIZE)

   #define RTICdrStream_serializeLongFast(me, in) \
     RTICdrStream_serialize4ByteFast((me), (const RTICdr4Byte *)(in))

   #define RTICdrStream_deserializeLongFast(me, out) \
     RTICdrStream_deserialize4ByteFast((me), (RTICdr4Byte *)(out))

   #define RTICdrStream_serializeLongFromStreamFast(me, in) \
     RTICdrStream_serialize4ByteFromStreamFast((me), (in))

   #define RTICdrStream_equalLongFromStreamFast(me, in) \
     RTICdrStream_equal4ByteFromStreamFast((me), (in))

   #define RTICdrStream_skipLongFast(me) \
     RTICdrStream_skipNByteFast((me), RTI_CDR_LONG_SIZE)

   #define RTICdrStream_serializeUnsignedLongFast(me, in) \
     RTICdrStream_serialize4ByteFast((me), (const RTICdr4Byte *)(in))

   #define RTICdrStream_deserializeUnsignedLongFast(me, out) \
     RTICdrStream_deserialize4ByteFast((me), (RTICdr4Byte *)(out))

   #define RTICdrStream_serializeUnsignedLongFromStreamFast(me, in) \
     RTICdrStream_serialize4ByteFromStreamFast((me), (in))

   #define RTICdrStream_equalUnsignedLongFromStreamFast(me, in) \
     RTICdrStream_equal4ByteFromStreamFast((me), (in))

   #define RTICdrStream_skipUnsignedLongFast(me) \
     RTICdrStream_skipNByteFast((me), RTI_CDR_UNSIGNED_LONG_SIZE)

   #define RTICdrStream_serializeLongLongFast(me, in) \
     RTICdrStream_serialize8ByteFast((me), (const RTICdr8Byte *)(in))

   #define RTICdrStream_deserializeLongLongFast(me, out) \
     RTICdrStream_deserialize8ByteFast((me), (RTICdr8Byte *)(out))

   #define RTICdrStream_serializeLongLongFromStreamFast(me, in) \
     RTICdrStream_serialize8ByteFromStreamFast((me), (in))

   #define RTICdrStream_equalLongLongFromStreamFast(me, in) \
     RTICdrStream_equal8ByteFromStreamFast((me), (in))

   #define RTICdrStream_skipLongLongFast(me) \
     RTICdrStream_skipNByteFast((me), RTI_CDR_LONG_LONG_SIZE)

   #define RTICdrStream_serializeUnsignedLongLongFast(me, in) \
     RTICdrStream_serialize8ByteFast((me), (const RTICdr8Byte *)(in))

   #define RTICdrStream_deserializeUnsignedLongLongFast(me, out) \
     RTICdrStream_deserialize8ByteFast((me), (RTICdr8Byte *)(out))

   #define RTICdrStream_serializeUnsignedLongLongFromStreamFast(me, in) \
     RTICdrStream_serialize8ByteFromStreamFast((me), (in))

   #define RTICdrStream_equalUnsignedLongLongFromStreamFast(me, in) \
     RTICdrStream_equal8ByteFromStreamFast((me), (in))

   #define RTICdrStream_skipUnsignedLongLongFast(me) \
     RTICdrStream_skipNByteFast((me), RTI_CDR_UNSIGNED_LONG_LONG_SIZE)

   #define RTICdrStream_serializeFloatFast(me, in) \
     RTICdrStream_serialize4ByteFast((me), (const RTICdr4Byte *)(in))

   #define RTICdrStream_deserializeFloatFast(me, out) \
     RTICdrStream_deserialize4ByteFast((me), (RTICdr4Byte *)(out))

   #define RTICdrStream_serializeFloatFromStreamFast(me, in) \
     RTICdrStream_serialize4ByteFromStreamFast((me), (in))

   #define RTICdrStream_equalFloatFromStreamFast(me, in) \
     RTICdrStream_equal4ByteFromStreamFast((me), (in))

   #define RTICdrStream_skipFloatFast(me) \
     RTICdrStream_skipNByteFast((me), RTI_CDR_FLOAT_SIZE)

   #define RTICdrStream_serializeDoubleFromStreamFast(me, in) \
     RTICdrStream_serialize8ByteFromStreamFast((me), (in))

   #define RTICdrStream_equalDoubleFromStreamFast(me, in) \
     RTICdrStream_equal8ByteFromStreamFast((me), (in))

   #define RTICdrStream_skipDoubleFast(me) \
     RTICdrStream_skipNByteFast((me), RTI_CDR_DOUBLE_SIZE)

   #define RTICdrStream_serializeLongDoubleFast(me, in) \
     RTICdrStream_serialize16ByteFast((me), (const RTICdr16Byte *)(in))

   #define RTICdrStream_deserializeLongDoubleFast(me, out) \
     RTICdrStream_deserialize16ByteFast((me), (RTICdr16Byte *)(out))

   #define RTICdrStream_serializeLongDoubleFromStreamFast(me, in) \
     RTICdrStream_serialize16ByteFromStreamFast((me), (in))

   #define RTICdrStream_equalLongDoubleFromStreamFast(me, in) \
     RTICdrStream_equal16ByteFromStreamFast((me), (in))

   #define RTICdrStream_skipLongDoubleFast(me) \
     RTICdrStream_skipNByteFast((me), RTI_CDR_LONG_DOUBLE_SIZE)

   #define RTICdrStream_serializeBooleanFast(me, in) \
     RTICdrStream_serialize1ByteFast((me), (const RTICdr1Byte *)(in))

   #define RTICdrStream_deserializeBooleanFast(me, out) \
     RTICdrStream_deserialize1ByteFast((me), (RTICdr1Byte *)(out))

   #define RTICdrStream_serializeBooleanFromStreamFast(me, in) \
     RTICdrStream_serialize1ByteFromStreamFast((me), (in))

   #define RTICdrStream_equalBooleanFromStreamFast(me, in) \
     RTICdrStream_equal1ByteFromStreamFast((me), (in))

   #define RTICdrStream_skipBooleanFast(me) \
     RTICdrStream_skipNByteFast((me), RTI_CDR_BOOLEAN_SIZE)

   #define RTICdrStream_serializeEnumFast(me, in) \
     RTICdrStream_serialize4ByteFast((me), (const RTICdr4Byte *)(in))

   #define RTICdrStream_deserializeEnumFast(me, out) \
     RTICdrStream_deserialize4ByteFast((me), (RTICdr4Byte *)(out))

   #define RTICdrStream_serializeEnumFromStreamFast(me, in) \
     RTICdrStream_serialize4ByteFromStreamFast((me), (in))

   #define RTICdrStream_equalEnumFromStreamFast(me, in) \
     RTICdrStream_equal4ByteFromStreamFast((me), (in))

   #define RTICdrStream_skipEnumFast(me) \
     RTICdrStream_skipNByteFast((me), RTI_CDR_ENUM_SIZE)

   #define RTICdrStream_serializeBooleanFrom2BytesFast(me,in) \
	RTICdrStream_serialize1ByteFrom2BytesFast((me), (const RTICdr2Byte *)(in))

   #define RTICdrStream_deserializeBooleanTo2BytesFast(me,out) \
	RTICdrStream_deserialize1ByteTo2BytesFast((me), (const RTICdr2Byte *)(out))

   #define RTICdrStream_serializeBooleanFrom4BytesFast(me,in) \
	RTICdrStream_serialize1ByteFrom4BytesFast((me), (const RTICdr4Byte *)(in))

   #define RTICdrStream_deserializeBooleanTo4BytesFast(me,out) \
	RTICdrStream_deserialize1ByteTo4BytesFast((me), (const RTICdr4Byte *)(out))
	



  #define RTICdrStream_skipNByte(me, n)                                  \
    ((RTICdrStream_align((me), n) &&                                  \
      RTICdrStream_checkSize((me), n)) ?                              \
     (RTICdrStream_skipNByteFast((me), n),                               \
      RTI_TRUE) : RTI_FALSE)

  #define RTICdrStream_serialize1Byte(me, in)                           \
    ((RTICdrStream_align((me), 1) &&                                    \
      RTICdrStream_checkSize((me), 1)) ?                                \
     (RTICdrStream_serialize1ByteFast((me), (const RTICdr1Byte *)(in)), \
      RTI_TRUE) : RTI_FALSE)

  #define RTICdrStream_deserialize1Byte(me, in)                       \
    ((RTICdrStream_align((me), 1) &&                                  \
      RTICdrStream_checkSize((me), 1)) ?                              \
     (RTICdrStream_deserialize1ByteFast((me), (RTICdr1Byte *)(in)),   \
      RTI_TRUE) : RTI_FALSE)

  #define RTICdrStream_serialize1ByteFromStream(me, in)                 \
    ((RTICdrStream_align((me), 1) &&                                    \
      RTICdrStream_checkSize((me), 1) &&                                \
      RTICdrStream_align((in), 1) &&                                    \
      RTICdrStream_checkSize((in), 1)) ?                                \
     (RTICdrStream_serialize1ByteFromStreamFast((me), (in)),            \
      RTI_TRUE) : RTI_FALSE)

  #define RTICdrStream_equal1ByteFromStream(me, other)                  \
    ((RTICdrStream_align((me), 1) &&                                    \
      RTICdrStream_checkSize((me), 1) &&                                \
      RTICdrStream_align((other), 1) &&                                 \
      RTICdrStream_checkSize((other), 1)) ?                             \
     (RTICdrStream_equal1ByteFromStreamFast((me), (other))              \
     ) : RTI_FALSE)

  #define RTICdrStream_equalZero1Byte(me)                               \
    ((RTICdrStream_align((me), 1) &&                                    \
      RTICdrStream_checkSize((me), 1)) ?                                \
     (RTICdrStream_equalZero1ByteFast((me))) : RTI_FALSE)

  #define RTICdrStream_serialize1ByteFrom2Bytes(me, in)                           \
    ((RTICdrStream_align((me), 1) &&                                              \
      RTICdrStream_checkSize((me), 1)) ?                                          \
     (RTICdrStream_serialize1ByteFrom2BytesFast((me), (const RTICdr2Byte *)(in)), \
      RTI_TRUE) : RTI_FALSE)

  #define RTICdrStream_deserialize1ByteTo2Bytes(me, in)                     \
    ((RTICdrStream_align((me), 1) &&                                        \
      RTICdrStream_checkSize((me), 1)) ?                                    \
     (RTICdrStream_deserialize1ByteTo2BytesFast((me), (RTICdr2Byte *)(in)), \
      RTI_TRUE) : RTI_FALSE)

  #define RTICdrStream_serialize1ByteFrom4Bytes(me, in)                           \
    ((RTICdrStream_align((me), 1) &&                                              \
      RTICdrStream_checkSize((me), 1)) ?                                          \
     (RTICdrStream_serialize1ByteFrom4BytesFast((me), (const RTICdr4Byte *)(in)), \
      RTI_TRUE) : RTI_FALSE)

  #define RTICdrStream_deserialize1ByteTo4Bytes(me, in)                     \
    ((RTICdrStream_align((me), 1) &&                                        \
      RTICdrStream_checkSize((me), 1)) ?                                    \
     (RTICdrStream_deserialize1ByteTo4BytesFast((me), (RTICdr4Byte *)(in)), \
      RTI_TRUE) : RTI_FALSE)

  #define RTICdrStream_serialize2Byte(me, in)                           \
    ((RTICdrStream_align((me), 2) &&                                    \
      RTICdrStream_checkSize((me), 2)) ?                                \
     (RTICdrStream_serialize2ByteFast((me), (const RTICdr2Byte *)(in)), \
      RTI_TRUE) : RTI_FALSE)

  #define RTICdrStream_deserialize2Byte(me, in)                       \
    ((RTICdrStream_align((me), 2) &&                                  \
      RTICdrStream_checkSize((me), 2)) ?                              \
     (RTICdrStream_deserialize2ByteFast((me), (RTICdr2Byte *)(in)),   \
      RTI_TRUE) : RTI_FALSE)

  #define RTICdrStream_serialize2ByteFromStream(me, in)                 \
    ((RTICdrStream_align((me), 2) &&                                    \
      RTICdrStream_checkSize((me), 2) &&                                \
      RTICdrStream_align((in), 2) &&                                    \
      RTICdrStream_checkSize((in), 2)) ?                                \
     (RTICdrStream_serialize2ByteFromStreamFast((me), (in)),            \
      RTI_TRUE) : RTI_FALSE)

  #define RTICdrStream_equal2ByteFromStream(me, other)                  \
    ((RTICdrStream_align((me), 2) &&                                    \
      RTICdrStream_checkSize((me), 2) &&                                \
      RTICdrStream_align((other), 2) &&                                 \
      RTICdrStream_checkSize((other), 2)) ?                             \
     (RTICdrStream_equal2ByteFromStreamFast((me), (other))              \
     ) : RTI_FALSE)

  #define RTICdrStream_equalZero2Byte(me)                               \
    ((RTICdrStream_align((me), 2) &&                                    \
      RTICdrStream_checkSize((me), 2)) ?                                \
     (RTICdrStream_equalZero2ByteFast((me))) : RTI_FALSE)

  #define RTICdrStream_serialize4Byte(me, in)                           \
    ((RTICdrStream_align((me), 4) &&                                    \
      RTICdrStream_checkSize((me), 4)) ?                                \
     (RTICdrStream_serialize4ByteFast((me), (const RTICdr4Byte *)(in)), \
      RTI_TRUE) : RTI_FALSE)

  #define RTICdrStream_deserialize4Byte(me, in)                       \
    ((RTICdrStream_align((me), 4) &&                                  \
      RTICdrStream_checkSize((me), 4)) ?                              \
     (RTICdrStream_deserialize4ByteFast((me), (RTICdr4Byte *)(in)),   \
      RTI_TRUE) : RTI_FALSE)

  #define RTICdrStream_serialize4ByteFromStream(me, in)                 \
    ((RTICdrStream_align((me), 4) &&                                    \
      RTICdrStream_checkSize((me), 4) &&                                \
      RTICdrStream_align((in), 4) &&                                    \
      RTICdrStream_checkSize((in), 4)) ?                                \
     (RTICdrStream_serialize4ByteFromStreamFast((me), (in)),            \
      RTI_TRUE) : RTI_FALSE)

  #define RTICdrStream_equal4ByteFromStream(me, other)                  \
    ((RTICdrStream_align((me), 4) &&                                    \
      RTICdrStream_checkSize((me), 4) &&                                \
      RTICdrStream_align((other), 4) &&                                 \
      RTICdrStream_checkSize((other), 4)) ?                             \
     (RTICdrStream_equal4ByteFromStreamFast((me), (other))              \
     ) : RTI_FALSE)

  #define RTICdrStream_equalZero4Byte(me)                               \
    ((RTICdrStream_align((me), 4) &&                                    \
      RTICdrStream_checkSize((me), 4)) ?                                \
     (RTICdrStream_equalZero4ByteFast((me))) : RTI_FALSE)

  #define RTICdrStream_serialize8Byte(me, in)                           \
    ((RTICdrStream_align((me), 8) &&                                    \
      RTICdrStream_checkSize((me), 8)) ?                                \
     (RTICdrStream_serialize8ByteFast((me), (const RTICdr8Byte *)(in)), \
      RTI_TRUE) : RTI_FALSE)

  #define RTICdrStream_deserialize8Byte(me, in)                       \
    ((RTICdrStream_align((me), 8) &&                                  \
      RTICdrStream_checkSize((me), 8)) ?                              \
     (RTICdrStream_deserialize8ByteFast((me), (RTICdr8Byte *)(in)),   \
      RTI_TRUE) : RTI_FALSE)

  #define RTICdrStream_serialize8ByteFromStream(me, in)                 \
    ((RTICdrStream_align((me), 8) &&                                    \
      RTICdrStream_checkSize((me), 8) &&                                \
      RTICdrStream_align((in), 8) &&                                    \
      RTICdrStream_checkSize((in), 8)) ?                                \
     (RTICdrStream_serialize8ByteFromStreamFast((me), (in)),            \
      RTI_TRUE) : RTI_FALSE)

  #define RTICdrStream_equal8ByteFromStream(me, other)                  \
    ((RTICdrStream_align((me), 8) &&                                    \
      RTICdrStream_checkSize((me), 8) &&                                \
      RTICdrStream_align((other), 8) &&                                 \
      RTICdrStream_checkSize((other), 8)) ?                             \
     (RTICdrStream_equal8ByteFromStreamFast((me), (other))              \
     ) : RTI_FALSE)

  #define RTICdrStream_equalZero8Byte(me)                               \
    ((RTICdrStream_align((me), 8) &&                                    \
      RTICdrStream_checkSize((me), 8)) ?                                \
     (RTICdrStream_equalZero8ByteFast((me))) : RTI_FALSE)

  #define RTICdrStream_serialize16Byte(me, in)                            \
    ((RTICdrStream_align((me), 8) &&                                      \
      RTICdrStream_checkSize((me), 16)) ?                                 \
     (RTICdrStream_serialize16ByteFast((me), (const RTICdr16Byte *)(in)), \
      RTI_TRUE) : RTI_FALSE)

  #define RTICdrStream_deserialize16Byte(me, in)                      \
    ((RTICdrStream_align((me), 8) &&                                  \
      RTICdrStream_checkSize((me), 16)) ?                             \
     (RTICdrStream_deserialize16ByteFast((me), (RTICdr16Byte *)(in)), \
      RTI_TRUE) : RTI_FALSE)

  #define RTICdrStream_serialize16ByteFromStream(me, in)                 \
    ((RTICdrStream_align((me), 8) &&                                     \
      RTICdrStream_checkSize((me), 16) &&                                \
      RTICdrStream_align((in), 8) &&                                     \
      RTICdrStream_checkSize((in), 16)) ?                                \
     (RTICdrStream_serialize16ByteFromStreamFast((me), (in)),            \
      RTI_TRUE) : RTI_FALSE)

  #define RTICdrStream_equal16ByteFromStream(me, other)                  \
    ((RTICdrStream_align((me), 8) &&                                     \
      RTICdrStream_checkSize((me), 16) &&                                \
      RTICdrStream_align((other), 8) &&                                  \
      RTICdrStream_checkSize((other), 16)) ?                             \
     (RTICdrStream_equal16ByteFromStreamFast((me), (other))              \
     ) : RTI_FALSE)

  #define RTICdrStream_equalZero16Byte(me)                               \
    ((RTICdrStream_align((me), 8) &&                                     \
      RTICdrStream_checkSize((me), 16)) ?                                \
     (RTICdrStream_equalZero16ByteFast((me))) : RTI_FALSE)

  #define RTICdrStream_serializeChar RTICdrStream_serialize1Byte
  #define RTICdrStream_deserializeChar RTICdrStream_deserialize1Byte
  #define RTICdrStream_serializeCharFromStream RTICdrStream_serialize1ByteFromStream
  #define RTICdrStream_equalCharFromStream RTICdrStream_equal1ByteFromStream
  #define RTICdrStream_skipChar(me) RTICdrStream_skipNByte((me), RTI_CDR_CHAR_SIZE)
  #define RTICdrStream_skipCharAndGetLength(me) RTICdrStream_skipChar(me); return RTI_CDR_CHAR_SIZE;

  #define RTICdrStream_serializeWchar RTICdrStream_serialize4Byte
  #define RTICdrStream_deserializeWchar RTICdrStream_deserialize4Byte
  #define RTICdrStream_serializeWcharFromStream RTICdrStream_serialize4ByteFromStream
  #define RTICdrStream_equalWcharFromStream RTICdrStream_equal4ByteFromStream
  #define RTICdrStream_skipWchar(me) RTICdrStream_skipNByte((me), RTI_CDR_WCHAR_SIZE)
  #define RTICdrStream_skipWcharAndGetLength(me) RTICdrStream_skipWchar(me); return RTI_CDR_WCHAR_SIZE;
                        
  #define RTICdrStream_serializeOctet RTICdrStream_serialize1Byte
  #define RTICdrStream_deserializeOctet RTICdrStream_deserialize1Byte
  #define RTICdrStream_serializeOctetFromStream RTICdrStream_serialize1ByteFromStream
  #define RTICdrStream_equalOctetFromStream RTICdrStream_equal1ByteFromStream
  #define RTICdrStream_skipOctet(me) RTICdrStream_skipNByte((me), RTI_CDR_OCTET_SIZE)
  #define RTICdrStream_skipOctetAndGetLength(me) RTICdrStream_skipOctet(me); return RTI_CDR_OCTET_SIZE;

  #define RTICdrStream_serializeShort RTICdrStream_serialize2Byte
  #define RTICdrStream_deserializeShort RTICdrStream_deserialize2Byte
  #define RTICdrStream_serializeShortFromStream RTICdrStream_serialize2ByteFromStream
  #define RTICdrStream_equalShortFromStream RTICdrStream_equal2ByteFromStream
  #define RTICdrStream_skipShort(me) RTICdrStream_skipNByte((me), RTI_CDR_SHORT_SIZE)
  #define RTICdrStream_skipShortAndGetLength(me) RTICdrStream_skipShort(me); return RTI_CDR_SHORT_SIZE;

  #define RTICdrStream_serializeUnsignedShort RTICdrStream_serialize2Byte
  #define RTICdrStream_deserializeUnsignedShort RTICdrStream_deserialize2Byte
  #define RTICdrStream_serializeUnsignedShortFromStream RTICdrStream_serialize2ByteFromStream
  #define RTICdrStream_equalUnsignedShortFromStream RTICdrStream_equal2ByteFromStream
  #define RTICdrStream_skipUnsignedShort(me) RTICdrStream_skipNByte((me), RTI_CDR_UNSIGNED_SHORT_SIZE)
  #define RTICdrStream_skipUnsignedShortAndGetLength(me) RTICdrStream_skipUnsignedShort(me); return RTI_CDR_UNSIGNED_SHORT_SIZE;

  #define RTICdrStream_serializeLong RTICdrStream_serialize4Byte
  #define RTICdrStream_deserializeLong RTICdrStream_deserialize4Byte
  #define RTICdrStream_serializeLongFromStream RTICdrStream_serialize4ByteFromStream
  #define RTICdrStream_equalLongFromStream RTICdrStream_equal4ByteFromStream
  #define RTICdrStream_skipLong(me) RTICdrStream_skipNByte((me), RTI_CDR_LONG_SIZE)
  #define RTICdrStream_skipLongAndGetLength(me) RTICdrStream_skipLong(me); return RTI_CDR_LONG_SIZE;

  #define RTICdrStream_serializeUnsignedLong RTICdrStream_serialize4Byte
  #define RTICdrStream_deserializeUnsignedLong RTICdrStream_deserialize4Byte
  #define RTICdrStream_serializeUnsignedLongFromStream RTICdrStream_serialize4ByteFromStream
  #define RTICdrStream_equalUnsignedLongFromStream RTICdrStream_equal4ByteFromStream
  #define RTICdrStream_skipUnsignedLong(me) RTICdrStream_skipNByte((me), RTI_CDR_UNSIGNED_LONG_SIZE)
  #define RTICdrStream_skipUnsignedLongAndGetLength(me) RTICdrStream_skipUnsignedLong(me); return RTI_CDR_UNSIGNED_LONG_SIZE;

  #define RTICdrStream_serializeLongLong RTICdrStream_serialize8Byte
  #define RTICdrStream_deserializeLongLong RTICdrStream_deserialize8Byte
  #define RTICdrStream_serializeLongLongFromStream RTICdrStream_serialize8ByteFromStream
  #define RTICdrStream_equalLongLongFromStream RTICdrStream_equal8ByteFromStream
  #define RTICdrStream_skipLongLong(me) RTICdrStream_skipNByte((me), RTI_CDR_LONG_LONG_SIZE)
  #define RTICdrStream_skipLongLongAndGetLength(me) RTICdrStream_skipLongLong(me); return RTI_CDR_LONG_LONG_SIZE;

  #define RTICdrStream_serializeUnsignedLongLong RTICdrStream_serialize8Byte
  #define RTICdrStream_deserializeUnsignedLongLong RTICdrStream_deserialize8Byte
  #define RTICdrStream_serializeUnsignedLongLongFromStream RTICdrStream_serialize8ByteFromStream
  #define RTICdrStream_equalUnsignedLongLongFromStream RTICdrStream_equal8ByteFromStream
  #define RTICdrStream_skipUnsignedLongLong(me) RTICdrStream_skipNByte((me), RTI_CDR_UNSIGNED_LONG_LONG_SIZE)
  #define RTICdrStream_skipUnsignedLongLongAndGetLength(me) RTICdrStream_skipUnsignedLongLong(me); return RTI_CDR_UNSIGNED_LONG_LONG_SIZE;

  #define RTICdrStream_serializeFloat RTICdrStream_serialize4Byte
  #define RTICdrStream_deserializeFloat RTICdrStream_deserialize4Byte
  #define RTICdrStream_serializeFloatFromStream RTICdrStream_serialize4ByteFromStream
  #define RTICdrStream_equalFloatFromStream RTICdrStream_equal4ByteFromStream
  #define RTICdrStream_skipFloat(me) RTICdrStream_skipNByte((me), RTI_CDR_FLOAT_SIZE)
  #define RTICdrStream_skipFloatAndGetLength(me) RTICdrStream_skipFloat(me); return RTI_CDR_FLOAT_SIZE;

  #define RTICdrStream_serializeDouble(me, in)                            \
    ((RTICdrStream_align((me), RTI_CDR_DOUBLE_SIZE) &&                    \
      RTICdrStream_checkSize((me), RTI_CDR_DOUBLE_SIZE)) ?                \
     (RTICdrStream_serializeDoubleFast((me), (const RTICdrDouble *)(in)), \
      RTI_TRUE) : RTI_FALSE)

  #define RTICdrStream_deserializeDouble(me, out)                      \
    ((RTICdrStream_align((me), RTI_CDR_DOUBLE_SIZE) &&                 \
      RTICdrStream_checkSize((me), RTI_CDR_DOUBLE_SIZE)) ?             \
     (RTICdrStream_deserializeDoubleFast((me), (RTICdrDouble *)(out)), \
      RTI_TRUE) : RTI_FALSE)

  /* stream-only operations don't need to worry about cross-endian memory representation */
  #define RTICdrStream_serializeDoubleFromStream RTICdrStream_serialize8ByteFromStream
  #define RTICdrStream_equalDoubleFromStream RTICdrStream_equal8ByteFromStream

  #define RTICdrStream_skipDouble(me)                                  \
      RTICdrStream_skipNByte((me), RTI_CDR_DOUBLE_SIZE)

  #define RTICdrStream_skipDoubleAndGetLength(me) RTICdrStream_skipDouble(me); return RTI_CDR_DOUBLE_SIZE;

  #define RTICdrStream_serializeLongDouble RTICdrStream_serialize16Byte
  #define RTICdrStream_deserializeLongDouble RTICdrStream_deserialize16Byte
  #define RTICdrStream_serializeLongDoubleFromStream RTICdrStream_serialize16ByteFromStream
  #define RTICdrStream_equalLongDoubleFromStream RTICdrStream_equal16ByteFromStream

  #define RTICdrStream_skipLongDouble(me)                              \
    ((RTICdrStream_align((me), RTI_CDR_DOUBLE_SIZE) &&                 \
      RTICdrStream_checkSize((me), RTI_CDR_LONG_DOUBLE_SIZE)) ?        \
     (RTICdrStream_skipLongDoubleFast((me)),                           \
      RTI_TRUE) : RTI_FALSE)

  #define RTICdrStream_skipLongDoubleAndGetLength(me) RTICdrStream_skipLongDouble(me); return RTI_CDR_LONG_DOUBLE_SIZE;

  #define RTICdrStream_serializeBoolean RTICdrStream_serialize1Byte
  #define RTICdrStream_deserializeBoolean RTICdrStream_deserialize1Byte
  #define RTICdrStream_serializeBooleanFromStream RTICdrStream_serialize1ByteFromStream
  #define RTICdrStream_equalBooleanFromStream RTICdrStream_equal1ByteFromStream
  #define RTICdrStream_skipBoolean(me) RTICdrStream_skipNByte((me), RTI_CDR_BOOLEAN_SIZE)
  #define RTICdrStream_skipBooleanAndGetLength(me) RTICdrStream_skipBoolean(me); return RTI_CDR_BOOLEAN_SIZE;

  #define RTICdrStream_serializeEnum RTICdrStream_serialize4Byte
  #define RTICdrStream_deserializeEnum RTICdrStream_deserialize4Byte
  #define RTICdrStream_serializeEnumFromStream RTICdrStream_serialize4ByteFromStream
  #define RTICdrStream_equalEnumFromStream RTICdrStream_equal4ByteFromStream
  #define RTICdrStream_skipEnum(me) RTICdrStream_skipNByte((me), RTI_CDR_ENUM_SIZE)
  #define RTICdrStream_skipEnumAndGetLength(me) RTICdrStream_skipEnum(me); return RTI_CDR_ENUM_SIZE;

  #define RTICdrStream_serializeVariableSizedBoolean(me,in,size)                          \
	(size == 1 ? RTICdrStream_serialize1Byte(me,in) :                                 \
	     (size == 2 ? RTICdrStream_serialize1ByteFrom2Bytes(me,in) :                  \
                 (size == 4 ? RTICdrStream_serialize1ByteFrom4Bytes(me,in) : RTI_FALSE)))

  #define RTICdrStream_deserializeVariableSizedBoolean(me,in,size)                        \
	(size == 1 ? RTICdrStream_deserialize1Byte(me,in) :                               \
	     (size == 2 ? RTICdrStream_deserialize1ByteTo2Bytes(me,in) :                  \
                 (size == 4 ? RTICdrStream_deserialize1ByteTo4Bytes(me,in) : RTI_FALSE)))




#define RTICdrStream_serialize2ByteToBigEndianFromStreamMacro(me, in) ( \
  (((me)->_endian == RTI_CDR_ENDIAN_BIG && (me)->_needByteSwap == RTI_TRUE) ||  \
   ((me)->_endian == RTI_CDR_ENDIAN_LITTLE && (me)->_needByteSwap == RTI_FALSE)) ?  \
    ((void)(*((me)->_currentPosition++) = *((char *)(in) + 1),            \
            *((me)->_currentPosition++) = *((char *)(in)    ))) :         \
    ((void)(*((me)->_currentPosition++) = *((char *)(in)    ),            \
            *((me)->_currentPosition++) = *((char *)(in) + 1)))           \
  )

#define RTICdrStream_deserialize2ByteFromBigEndianFromStreamMacro(me, out) ( \
  (((me)->_endian == RTI_CDR_ENDIAN_BIG && (me)->_needByteSwap == RTI_TRUE) ||  \
   ((me)->_endian == RTI_CDR_ENDIAN_LITTLE && (me)->_needByteSwap == RTI_FALSE)) ?  \
    ((void)( *((char *)(out) + 1) = *((me)->_currentPosition++),        \
        *((char *)(out)    ) = *((me)->_currentPosition++)))   :        \
    ((void)(*((char *)(out)    ) = *((me)->_currentPosition++),         \
       *((char *)(out) + 1) = *((me)->_currentPosition++)))              \
  )

#define RTICdrStream_deserialize4ByteFromBigEndianFromStreamMacro(me, out) ( \
  (((me)->_endian == RTI_CDR_ENDIAN_BIG && (me)->_needByteSwap == RTI_TRUE) ||  \
   ((me)->_endian == RTI_CDR_ENDIAN_LITTLE && (me)->_needByteSwap == RTI_FALSE)) ?  \
    ((void)( *((char *)(out) + 3) = *((me)->_currentPosition++),        \
             *((char *)(out) + 2) = *((me)->_currentPosition++),        \
             *((char *)(out) + 1) = *((me)->_currentPosition++),        \
             *((char *)(out)    ) = *((me)->_currentPosition++)))   :   \
    ((void)( *((char *)(out)    ) = *((me)->_currentPosition++),        \
             *((char *)(out) + 1) = *((me)->_currentPosition++),        \
             *((char *)(out) + 2) = *((me)->_currentPosition++),        \
             *((char *)(out) + 3) = *((me)->_currentPosition++)))       \
  )

#define RTICdrStream_serialize4ByteToBigEndianFromStreamMacro(me, in) ( \
  (((me)->_endian == RTI_CDR_ENDIAN_BIG && (me)->_needByteSwap == RTI_TRUE) ||  \
   ((me)->_endian == RTI_CDR_ENDIAN_LITTLE && (me)->_needByteSwap == RTI_FALSE)) ?  \
    ((void)(*((me)->_currentPosition++) = *((char *)(in) + 3),            \
            *((me)->_currentPosition++) = *((char *)(in) + 2),            \
            *((me)->_currentPosition++) = *((char *)(in) + 1),            \
            *((me)->_currentPosition++) = *((char *)(in)    ))) :         \
    ((void)(*((me)->_currentPosition++) = *((char *)(in)    ),            \
            *((me)->_currentPosition++) = *((char *)(in) + 1),            \
            *((me)->_currentPosition++) = *((char *)(in) + 2),            \
            *((me)->_currentPosition++) = *((char *)(in) + 3)))           \
  )


#ifdef RTI_ENDIAN_LITTLE
/* Flip the bytes to ensure big-endian byte ordering */

#define RTICdrStream_serialize2ByteToBigEndianFastMacro(me, in) \
     ( (void)(*((me)->_currentPosition++) = *((char *)(in) + 1),         \
     *((me)->_currentPosition++) = *((char *)(in)    )))

#define RTICdrStream_deserialize2ByteFromBigEndianFastMacro(me, out)   \
     ((void)( *((char *)(out) + 1) = *((me)->_currentPosition++), \
      *((char *)(out)    ) = *((me)->_currentPosition++)))

#define RTICdrStream_serialize4ByteToBigEndianFastMacro(me, in)   \
      ((void)( *((me)->_currentPosition++) = *((char *)(in) + 3), \
               *((me)->_currentPosition++) = *((char *)(in) + 2), \
               *((me)->_currentPosition++) = *((char *)(in) + 1), \
               *((me)->_currentPosition++) = *((char *)(in)    ) ))

#define RTICdrStream_deserialize4ByteFromBigEndianFastMacro(me, out)   \
((void)( *((char *)(out) + 3) = *((me)->_currentPosition++), \
         *((char *)(out) + 2) = *((me)->_currentPosition++), \
         *((char *)(out) + 1) = *((me)->_currentPosition++), \
         *((char *)(out)    ) = *((me)->_currentPosition++) ))


#define RTICdrStream_serializeBigEndianTo4ByteFastMacro(me, in) \
      *((me)->_currentPosition++) = *((char *)(in) + 3);        \
      *((me)->_currentPosition++) = *((char *)(in) + 2);        \
      *((me)->_currentPosition++) = *((char *)(in) + 1);        \
      *((me)->_currentPosition++) = *((char *)(in)    )
#else
/* need to do it byte by byte because there is no alignment assumption */

#define RTICdrStream_serialize2ByteToBigEndianFastMacro(me, in) \
      ((void)(*((me)->_currentPosition++) = *((char *)(in)    ),        \
      *((me)->_currentPosition++) = *((char *)(in) + 1)))

#define RTICdrStream_deserialize2ByteFromBigEndianFastMacro(me, out) \
      ((void)(*((char *)(out)    ) = *((me)->_currentPosition++),           \
      *((char *)(out) + 1) = *((me)->_currentPosition++)))

#define RTICdrStream_serialize4ByteToBigEndianFastMacro(me, in) \
((void)( *((me)->_currentPosition++) = *((char *)(in)    ),        \
         *((me)->_currentPosition++) = *((char *)(in) + 1),        \
         *((me)->_currentPosition++) = *((char *)(in) + 2),        \
         *((me)->_currentPosition++) = *((char *)(in) + 3) ))

#define RTICdrStream_deserialize4ByteFromBigEndianFastMacro(me, out) \
((void)( *((char *)(out)    ) = *((me)->_currentPosition++),            \
         *((char *)(out) + 1) = *((me)->_currentPosition++),            \
         *((char *)(out) + 2) = *((me)->_currentPosition++),            \
         *((char *)(out) + 3) = *((me)->_currentPosition++) ))

#define RTICdrStream_serializeBigEndianTo4ByteFastMacro(me, in) \
      *((me)->_currentPosition++) = *((char *)(in)    );        \
      *((me)->_currentPosition++) = *((char *)(in) + 1);        \
      *((me)->_currentPosition++) = *((char *)(in) + 2);        \
      *((me)->_currentPosition++) = *((char *)(in) + 3)

#endif /* RTI_ENDIAN_LITTLE */

#define RTICdrStream_deserializeBigEndianFrom4ByteFastMacro(me, out) \
      ((me->_endian == RTI_CDR_ENDIAN_LITTLE) ?                          \
       (*((char *)(out) + 3) = *((me)->_currentPosition++),   \
        *((char *)(out) + 2) = *((me)->_currentPosition++),   \
        *((char *)(out) + 1) = *((me)->_currentPosition++),   \
        *((char *)(out)    ) = *((me)->_currentPosition++)) : \
       (*((char *)(out)    ) = *((me)->_currentPosition++),   \
        *((char *)(out) + 1) = *((me)->_currentPosition++),   \
        *((char *)(out) + 2) = *((me)->_currentPosition++),   \
        *((char *)(out) + 3) = *((me)->_currentPosition++)))

#ifndef RTI_PRECONDITION_TEST
  #define RTICdrStream_serialize2ByteToBigEndianFast \
     RTICdrStream_serialize2ByteToBigEndianFastMacro

  #define RTICdrStream_serialize4ByteToBigEndianFast \
     RTICdrStream_serialize4ByteToBigEndianFastMacro

  #define RTICdrStream_serializeBigEndianTo4ByteFast \
     RTICdrStream_serializeBigEndianTo4ByteFastMacro

  #define RTICdrStream_deserialize2ByteFromBigEndianFast \
     RTICdrStream_deserialize2ByteFromBigEndianFastMacro

  #define RTICdrStream_deserialize4ByteFromBigEndianFast \
     RTICdrStream_deserialize4ByteFromBigEndianFastMacro

  #define RTICdrStream_deserializeBigEndianFrom4ByteFast \
     RTICdrStream_deserializeBigEndianFrom4ByteFastMacro
#else
  RTICdrDllExport
  void RTICdrStream_serialize2ByteToBigEndianFast(struct RTICdrStream *me,
						  const RTICdr2Byte *in);

  RTICdrDllExport
  void RTICdrStream_deserialize2ByteFromBigEndianFast(struct RTICdrStream *me,
						      RTICdr2Byte *out);

  RTICdrDllExport
  void RTICdrStream_serialize4ByteToBigEndianFast(struct RTICdrStream *me,
						  const RTICdr4Byte *in);

  RTICdrDllExport
  void RTICdrStream_deserialize4ByteFromBigEndianFast(struct RTICdrStream *me,
						      RTICdr4Byte *out);

  RTICdrDllExport
  void RTICdrStream_serializeBigEndianTo4ByteFast(struct RTICdrStream *me,
						  const RTICdrOctet *in);

  RTICdrDllExport
  void RTICdrStream_deserializeBigEndianFrom4ByteFast(struct RTICdrStream *me,
						      RTICdrOctet *out);
#endif /* RTI_PRECONDITION_TEST */

/* fast methods */
#define RTICdrStream_serializeUnsignedShortToBigEndianFast \
  RTICdrStream_serialize2ByteToBigEndianFast

#define RTICdrStream_deserializeUnsignedShortFromBigEndianFast \
  RTICdrStream_deserialize2ByteFromBigEndianFast

#define RTICdrStream_serializeUnsignedLongToBigEndianFast \
  RTICdrStream_serialize4ByteToBigEndianFast

#define RTICdrStream_deserializeUnsignedLongFromBigEndianFast \
  RTICdrStream_deserialize4ByteFromBigEndianFast

#define RTICdrStream_serializeBigEndianToUnsignedLongFast \
  RTICdrStream_serializeBigEndianTo4ByteFast

#define RTICdrStream_deserializeBigEndianFromUnsignedLongFast \
  RTICdrStream_deserializeBigEndianFrom4ByteFast

#define RTICdrStream_serializeUnsignedShortToBigEndianFromStream \
  RTICdrStream_serialize2ByteToBigEndianFromStreamMacro

#define RTICdrStream_deserializeUnsignedShortFromBigEndianFromStream \
  RTICdrStream_deserialize2ByteFromBigEndianFromStreamMacro

#define RTICdrStream_serializeUnsignedLongToBigEndianFromStream \
  RTICdrStream_serialize4ByteToBigEndianFromStreamMacro

#define RTICdrStream_deserializeUnsignedLongFromBigEndianFromStream \
  RTICdrStream_deserialize4ByteFromBigEndianFromStreamMacro

/* verifiable to-big-endian methods */
#define RTICdrStream_serializeUnsignedShortToBigEndian(me, in) \
  (RTICdrStream_checkSize((me), 2) ?                                \
   (RTICdrStream_serializeUnsignedShortToBigEndianFromStream(me, in), \
   RTI_TRUE) : RTI_FALSE)

#define RTICdrStream_deserializeUnsignedShortFromBigEndian(me, in) \
  ( RTICdrStream_checkSize((me), 2) ?                                \
   (RTICdrStream_deserializeUnsignedShortFromBigEndianFromStream(me, in), \
   RTI_TRUE) : RTI_FALSE)

#define RTICdrStream_serializeUnsignedLongToBigEndian(me, in) \
  (RTICdrStream_checkSize((me), 4) ?                                \
   (RTICdrStream_serializeUnsignedLongToBigEndianFromStream(me, in), \
   RTI_TRUE) : RTI_FALSE)

#define RTICdrStream_deserializeUnsignedLongFromBigEndian(me, in) \
  ( RTICdrStream_checkSize((me), 4) ?                                \
   (RTICdrStream_deserializeUnsignedLongFromBigEndianFromStream(me, in), \
   RTI_TRUE) : RTI_FALSE)

/*********************************************************************/
#define RTICdrStream_setEndianFromEncapsulationDefault(me) \
((((me)->_encapsulationKind == RTI_CDR_ENCAPSULATION_ID_CDR_BE || (me)->_encapsulationKind == RTI_CDR_ENCAPSULATION_ID_PL_CDR_BE) && (me)->_endian != RTI_CDR_ENDIAN_BIG) ? \
((me)->_endian = RTI_CDR_ENDIAN_BIG, \
  (me)->_needByteSwap = ((me)->_nativeEndian == RTI_CDR_ENDIAN_BIG) ? RTI_FALSE : RTI_TRUE, RTI_TRUE) : \
((((me)->_encapsulationKind == RTI_CDR_ENCAPSULATION_ID_CDR_LE || (me)->_encapsulationKind == RTI_CDR_ENCAPSULATION_ID_PL_CDR_LE) && (me)->_endian != RTI_CDR_ENDIAN_LITTLE) ? \
  ((me)->_endian = RTI_CDR_ENDIAN_LITTLE, \
   (me)->_needByteSwap = ((me)->_nativeEndian == RTI_CDR_ENDIAN_BIG) ? RTI_TRUE : RTI_FALSE, RTI_TRUE) : \
  (((me)->_encapsulationKind != RTI_CDR_ENCAPSULATION_ID_CDR_BE && \
    (me)->_encapsulationKind != RTI_CDR_ENCAPSULATION_ID_PL_CDR_BE && \
    (me)->_encapsulationKind != RTI_CDR_ENCAPSULATION_ID_CDR_LE && \
    (me)->_encapsulationKind != RTI_CDR_ENCAPSULATION_ID_PL_CDR_LE) ? RTI_FALSE : RTI_TRUE)))

#define RTICdrStream_setEndianFromParameterEncapsulationDefault(me) \
(((me)->_encapsulationKind == RTI_CDR_ENCAPSULATION_ID_PL_CDR_BE && (me)->_endian != RTI_CDR_ENDIAN_BIG) ? \
 ((me)->_endian = RTI_CDR_ENDIAN_BIG, \
  (me)->_needByteSwap = ((me)->_nativeEndian == RTI_CDR_ENDIAN_BIG) ? RTI_FALSE : RTI_TRUE, RTI_TRUE) : \
 (((me)->_encapsulationKind == RTI_CDR_ENCAPSULATION_ID_PL_CDR_LE && (me)->_endian != RTI_CDR_ENDIAN_LITTLE) ? \
  ((me)->_endian = RTI_CDR_ENDIAN_LITTLE, \
   (me)->_needByteSwap = ((me)->_nativeEndian == RTI_CDR_ENDIAN_BIG) ? RTI_TRUE : RTI_FALSE, RTI_TRUE) : \
  (((me)->_encapsulationKind != RTI_CDR_ENCAPSULATION_ID_PL_CDR_BE && \
    (me)->_encapsulationKind != RTI_CDR_ENCAPSULATION_ID_PL_CDR_LE) ? RTI_FALSE : RTI_TRUE)))

#define RTICdrStream_serializeCdrEncapsulationDefault(me) \
((RTICdrStream_serializeUnsignedShortToBigEndian(me, &me->_encapsulationKind)) ?  \
(RTICdrStream_serializeUnsignedShortToBigEndian(me, &me->_encapsulationOptions)) : RTI_FALSE)

#define RTICdrStream_serializeEncapsulation(me, kind, opts) \
((RTICdrStream_serializeUnsignedShortToBigEndian(me, kind)) ?  \
(RTICdrStream_serializeUnsignedShortToBigEndian(me, opts)) : RTI_FALSE)

#define RTICdrStream_serializeCdrEncapsulation(me, kind, opts) \
  RTICdrStream_serializeEncapsulation(me, kind, opts)


#define RTICdrStream_setCdrEncapsulation(me, encapsulationId) \
( \
  /* if */ ((encapsulationId) == RTI_CDR_ENCAPSULATION_ID_CDR_BE || (encapsulationId) == RTI_CDR_ENCAPSULATION_ID_PL_CDR_BE) ? \
 \
      /* if */ (((me)->_endian != RTI_CDR_ENDIAN_BIG) ? \
                   ((me)->_encapsulationKind = (encapsulationId), \
                   (me)->_endian = RTI_CDR_ENDIAN_BIG, \
                   (me)->_needByteSwap = ((me)->_nativeEndian == RTI_CDR_ENDIAN_LITTLE), \
                   RTI_TRUE) \
      /* else */ : ((me)->_encapsulationKind = (encapsulationId), RTI_TRUE)) \
 \
  /* else if */ : (((encapsulationId) == RTI_CDR_ENCAPSULATION_ID_CDR_LE || (encapsulationId) == RTI_CDR_ENCAPSULATION_ID_PL_CDR_LE) ? \
 \
      /* if */ (((me)->_endian != RTI_CDR_ENDIAN_LITTLE) ? \
                    ((me)->_encapsulationKind = (encapsulationId), \
                    (me)->_endian = RTI_CDR_ENDIAN_LITTLE, \
                    (me)->_needByteSwap = ((me)->_nativeEndian == RTI_CDR_ENDIAN_BIG), \
                    RTI_TRUE) \
      /* else */ : ((me)->_encapsulationKind = (encapsulationId), RTI_TRUE)) \
 \
  /* else */ : RTI_FALSE) \
)

#define RTICdrStream_serializeAndSetCdrEncapsulation(me, encapsulationId) \
  (RTICdrStream_setCdrEncapsulation((me), (encapsulationId))? \
    (RTICdrStream_serializeCdrEncapsulation((me), &((me)->_encapsulationKind), &((me)->_encapsulationOptions))? \
        RTI_TRUE:RTI_FALSE) : \
    RTI_FALSE)

#define RTICdrStream_deserializeCdrEncapsulationAndSetDefault(me) \
((RTICdrStream_deserializeUnsignedShortFromBigEndian(me, &me->_encapsulationKind)) ? \
((RTICdrStream_deserializeUnsignedShortFromBigEndian(me, &me->_encapsulationOptions)) ? \
  (RTICdrStream_setEndianFromEncapsulationDefault(me)) : RTI_FALSE) : RTI_FALSE)

#define RTICdrStream_deserializeAndSetCdrEncapsulation \
  RTICdrStream_deserializeCdrEncapsulationAndSetDefault

#define RTICdrStream_deserializeParameterCdrEncapsulationAndSetDefault(me) \
((RTICdrStream_deserializeUnsignedShortFromBigEndian(me, &me->_encapsulationKind)) ? \
((RTICdrStream_deserializeUnsignedShortFromBigEndian(me, &me->_encapsulationOptions)) ? \
  (RTICdrStream_setEndianFromParameterEncapsulationDefault(me)) : RTI_FALSE) : RTI_FALSE)

#define RTICdrStream_deserializeEncapsulation(me, kind, opts) \
((RTICdrStream_deserializeUnsignedShortFromBigEndian(me, kind)) ?  \
(RTICdrStream_deserializeUnsignedShortFromBigEndian(me, opts)) : RTI_FALSE)

#define RTICdrStream_deserializeCdrEncapsulation(me, kind, opts) \
((RTICdrStream_deserializeUnsignedShortFromBigEndian(me, kind)) ?  \
(RTICdrStream_deserializeUnsignedShortFromBigEndian(me, opts)) : RTI_FALSE)

#define RTICdrStream_skipEncapsulation(me) \
    RTICdrStream_skipLong(me)
    
#define RTICdrStream_pushEndian(me, endian, needByteSwap) \
*(endian) = (me)->_endian; \
*(needByteSwap) = (me)->_needByteSwap; 

#define RTICdrStream_popEndian(me, endian, needByteSwap) \
(me)->_endian = *(endian); \
(me)->_needByteSwap = *(needByteSwap);

#define RTICdrStream_setEncapsulationKind(me, kind, options) ( \
(me)->_encapsulationKind = (kind), (me)->_encapsulationOptions = (options))

#define RTICdrStream_setCdrEncapsulationKind(me, kind, options) ( \
(RTICdrEncapsulation_validCdrEncapsulation((kind),(options),NULL)) ? \
((kind) == RTI_CDR_ENCAPSULATION_ID_CDR_LE ?  \
   (((me)->_nativeEndian == RTI_CDR_ENDIAN_LITTLE) ? ((me)->_endian = RTI_CDR_ENDIAN_LITTLE, \
                                      (me)->_needByteSwap = RTI_FALSE, (me)->_encapsulationKind = kind, \
                                      (me)->_encapsulationOptions = options, RTI_TRUE) : \
       ((me)->_endian = RTI_CDR_ENDIAN_LITTLE, (me)->_needByteSwap = RTI_TRUE, \
        (me)->_encapsulationKind = kind, (me)->_encapsulationOptions = options, RTI_TRUE)) : \
   (((me)->_nativeEndian == RTI_CDR_ENDIAN_LITTLE) ? ((me)->_endian = RTI_CDR_ENDIAN_BIG, \
                                      (me)->_needByteSwap = RTI_TRUE, (me)->_encapsulationKind = kind, \
                                      (me)->_encapsulationOptions = options, RTI_TRUE) : \
       ((me)->_endian = RTI_CDR_ENDIAN_BIG, (me)->_needByteSwap = RTI_FALSE, \
       (me)->_encapsulationKind = kind, (me)->_encapsulationOptions = options, RTI_TRUE))) : \
((me)->_encapsulationKind = kind, (me)->_encapsulationOptions = options, RTI_FALSE))

#define RTICdrStream_getEncapsulationKind(me)       (me)->_encapsulationKind
#define RTICdrStream_getEncapsulationOptions(me)    (me)->_encapsulationOptions

#define RTICdrStream_getEncapsulationSize(_size)                        \
(_size) += RTICdrType_getUnsignedShortMaxSizeSerialized(_size);         \
(_size) += RTICdrType_getUnsignedShortMaxSizeSerialized(_size);




/*
    We do not propagate pointers on the wire. Because of that reason
    the finctions skipXXXPointerYYY and skipXXXYYY are the same
*/
#define RTICdrStream_skipPrimitivePointerArray RTICdrStream_skipPrimitiveArray
#define RTICdrStream_skipPrimitivePointerSequence RTICdrStream_skipPrimitiveSequence
#define RTICdrStream_skipNonPrimitivePointerArray RTICdrStream_skipNonPrimitiveArray
#define RTICdrStream_skipNonPrimitivePointerSequence RTICdrStream_skipNonPrimitiveSequence
#define RTICdrStream_skipStringPointerArray RTICdrStream_skipStringArray 
#define RTICdrStream_skipStringPointerSequence RTICdrStream_skipStringSequence



#define RTICdrStream_getExtendedParameterHeaderMaxSizeSerialized(current_alignment) \
  RTICdrType_getPadSize((current_alignment), 4) + 12

#define RTICdrStream_getParameterHeaderMaxSizeSerialized(current_alignment) \
  RTICdrType_getPadSize((current_alignment), 4) + 4


#ifdef __cplusplus
    }	/* extern "C" */
#endif

#endif /* cdr_stream_impl_h */
